image: debian:testing

stages:
  - dependencies
  - gimp

variables:
  GIT_DEPTH: "1"
  INSTALL_DIR: "_install"
  INSTALL_PREFIX: "${CI_PROJECT_DIR}/${INSTALL_DIR}"
  PACMAN_CACHE:   "${CI_PROJECT_DIR}/_pacman_cache"

## GNU/Linux 64-bit CIs ##

deps-debian/testing:
  stage: dependencies
  cache:
    paths:
    - _pacman_cache
  artifacts:
    expire_in: 1 hour
    when: always
    paths:
    - "${INSTALL_DIR}"
    - _babl/_build
    - _gegl/_build
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends
        build-essential
        git
        ffmpeg
        graphviz-dev
        gobject-introspection
        libjson-glib-dev
        libgexiv2-dev
        libgirepository1.0-dev
        liblcms2-dev
        libopenexr-dev
        libraw-dev
        librsvg2-dev
        libspiro-dev
        libsuitesparse-dev
        libtiff5-dev
        luajit
        meson
        python3
        valac
    - apt-get install -y --reinstall ca-certificates
    - git clone --depth=${GIT_DEPTH} https://gitlab.gnome.org/GNOME/babl.git _babl
    - git clone --depth=${GIT_DEPTH} https://gitlab.gnome.org/GNOME/gegl.git _gegl
    - export PKG_CONFIG_PATH="${INSTALL_PREFIX}/lib/pkgconfig"
    - export PKG_CONFIG_PATH="${INSTALL_PREFIX}/lib/`gcc -print-multiarch`/pkgconfig/:$PKG_CONFIG_PATH"
    - export LD_LIBRARY_PATH="${INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}"
    - export LD_LIBRARY_PATH="${INSTALL_PREFIX}/lib/`gcc -print-multiarch`:$LD_LIBRARY_PATH"
    - export XDG_DATA_DIRS="${INSTALL_PREFIX}/share:/usr/local/share:/usr/share"
  script:
    - cd _babl
    - meson -Dprefix="${INSTALL_PREFIX}" _build
    - ninja -C _build
    - ninja -C _build install
    - cd ../_gegl
    - meson --prefix="${INSTALL_PREFIX}" _build
    - ninja -C _build
    - ninja -C _build install

.gimp-debian/testing-base:
  stage: gimp
  dependencies:
    - deps-debian/testing
  artifacts:
    expire_in: 1 week
    when: always
    name: "app-build-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    paths:
    - _build
    #- "${INSTALL_DIR}"
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends
        at-spi2-core
        build-essential
        desktop-file-utils
        ffmpeg
        hicolor-icon-theme
        ghostscript
        git
        glib-networking
        gobject-introspection
        gtk-doc-tools
        intltool
        iso-codes
        libappstream-glib-dev
        libbz2-dev
        libdbus-glib-1-dev
        libexif-dev
        libgexiv2-dev
        libgirepository1.0-dev
        libgtk2.0-bin
        libgtk2.0-dev
        libgudev-1.0-dev
        libjson-glib-dev
        liblcms2-dev
        liblzma-dev
        libmng-dev
        libmypaint-dev
        libopenexr-dev
        libpoppler-glib-dev
        libraw19
        librsvg2-dev
        libspiro-dev
        libtiff-dev
        libtool
        libumfpack5
        libwebp-dev
        libwmf-dev
        libxmu-dev
        libxpm-dev
        meson
        mypaint-brushes
        poppler-data
        xauth
        xvfb
    - export PKG_CONFIG_PATH="${INSTALL_PREFIX}/lib/pkgconfig:${INSTALL_PREFIX}/share/pkgconfig"
    - export PKG_CONFIG_PATH="${INSTALL_PREFIX}/lib/`gcc -print-multiarch`/pkgconfig/:$PKG_CONFIG_PATH"
    - export PKG_CONFIG_PATH="${INSTALL_PREFIX}/share/`gcc -print-multiarch`/pkgconfig/:$PKG_CONFIG_PATH"
    - export LD_LIBRARY_PATH="${INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}"
    - export LD_LIBRARY_PATH="${INSTALL_PREFIX}/lib/`gcc -print-multiarch`:$LD_LIBRARY_PATH"
    - export XDG_DATA_DIRS="${INSTALL_PREFIX}/share:/usr/local/share:/usr/share"
    - export PATH="${INSTALL_PREFIX}/bin:$PATH"
  needs: ["deps-debian/testing"]

gimp-debian/testing-autotools:
  extends: .gimp-debian/testing-base
  script:
    - mkdir _build
    - cd _build
    - ../autogen.sh
        --prefix="${INSTALL_PREFIX}"
        --enable-debug
        --disable-python
    - make -j "$(nproc)"
    - make check

gimp-debian/testing-autotools-distcheck:
  extends: .gimp-debian/testing-base
  script:
    - mkdir _build
    - cd _build
    - ../autogen.sh
        --prefix="${INSTALL_PREFIX}"
        --enable-debug
        --disable-python
    - make -j "$(nproc)"
    - make distcheck
  allow_failure: true
