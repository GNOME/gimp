stages:
  - babl
  - gegl
  - gimp

variables:
  INSTALL_DIR: "_install"
  INSTALL_PREFIX: "${CI_PROJECT_DIR}/${INSTALL_DIR}"

  PKG_CONFIG_PATH: "${INSTALL_PREFIX}/lib/pkgconfig"
  LD_LIBRARY_PATH: "${INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}"
  XDG_DATA_DIRS:   "${INSTALL_PREFIX}/share:${XDG_DATA_DIRS}"

  PACMAN_CACHE: "${CI_PROJECT_DIR}/_pacman_cache"

cache:
  paths:
  - _pacman_cache

image: archlinux/base:latest

.babl-base:
  stage: babl
  artifacts:
    paths:
    - "${INSTALL_DIR}"
  variables:
    GIT_DEPTH: "5"
  before_script:
    - pacman -Syu --noconfirm --needed --cachedir "${PACMAN_CACHE}"
        git
        base-devel
        gobject-introspection
        meson
        lcms2
    - git clone --depth=${GIT_DEPTH} https://gitlab.gnome.org/GNOME/babl.git _babl

babl-git-meson:
  extends: .babl-base
  variables:
    GIT_STRATEGY: none
  script:
    - cd _babl
    - meson -Dprefix="${INSTALL_PREFIX}" _build
    - ninja -C _build
    - ninja -C _build install

# babl-min-meson:
#   extends: .babl-base
#   script:
#     - grep babl_required_version ../configure.ac | grep -o '[0-9]*\.[0-9]*\.[0-9]*' | sed 's/\./_/g' > .babl_min_version
#     - git fetch --no-tags origin "refs/tags/BABL_`cat .babl_min_version`:refs/tags/MIN_VERSION"
#     - git checkout MIN_VERSION
#     - meson -Dprefix="$INSTALL_PREFIX" _build
#     - ninja -C _build
#     - ninja -C _build install

.gegl-base:
  stage: gegl
  artifacts:
    paths:
    - "${INSTALL_DIR}"
  variables:
    GIT_DEPTH: "5"
  before_script:
    - pacman -Syu --noconfirm --needed --cachedir "${PACMAN_CACHE}"
        git
        base-devel
        meson
        lcms2
        base-devel
        ffmpeg
        gobject-introspection
        graphviz
        jasper
        json-glib
        lcms2
        libgexiv2
        libraw
        librsvg
        libspiro
        libtiff
        luajit
        openexr
        python
        sdl2
        suitesparse
    - git clone --depth=${GIT_DEPTH} https://gitlab.gnome.org/GNOME/gegl.git _gegl

gegl-git-meson:
  extends: .gegl-base
  variables:
    GIT_STRATEGY: none
  script:
    - cd _gegl
    - meson --prefix="${INSTALL_PREFIX}" _build
    - ninja -C _build
    - ninja -C _build install

.gimp-base:
  stage: gimp
  artifacts:
    paths:
    - "${INSTALL_DIR}"
  variables:
    GIT_DEPTH: "5"
  before_script:
    - pacman -Syu --noconfirm --needed --cachedir "${PACMAN_CACHE}"
        git
        base-devel
        meson
        appstream-glib
        at-spi2-core
        at-spi2-atk
        dbus-glib
        desktop-file-utils
        ffmpeg
        glib-networking
        gobject-introspection
        gtk3
        hicolor-icon-theme
        jasper
        lcms2
        libexif
        libgudev
        libheif
        libmng
        libmypaint
        librsvg
        libwebp
        libwmf
        libxmu
        libxpm
        mypaint-brushes
        openexr
        poppler-data
        pygtk
        alsa-lib
        ghostscript
        poppler-glib
        gtk-doc
        intltool
        iso-codes
        xorg-server-xvfb

.gimp-autotools:
  extends: .gimp-base
  variables:
    GIT_STRATEGY: none
    LIBMYPAINT_CFLAGS: "-I/usr/include/libmypaint-1.3 -I/usr/include/json-c" 
    LIBMYPAINT_LIBS: "-lmypaint-1.3 -ljson-c" 
  script:
    - mkdir _build
    - cd _build
    - ../autogen.sh 
        --prefix="${INSTALL_PREFIX}" 
        --enable-debug
        --with-python=force 
        --with-javascript=force 
        --with-lua=force
    - make -j "$(nproc)"
    #- make check
  artifacts:
    name: "app-tests-logs-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: on_failure
    expire_in: 1 week
    paths:
      - _build/app/tests/

.gimp-meson:
  extends: .gimp-base
  variables:
    GIT_STRATEGY: none
  script:
    - meson _build
      --prefix="${INSTALL_PREFIX}"
      -Dpython=enabled
      -Djavascript=enabled
      -Dlua=enabled
    - ninja -C _build
    # - ninja test
  artifacts:
    name: "app-tests-logs-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: on_failure
    expire_in: 1 week
    paths:
      - _build/app/tests/


# build-default-git-meson:
#   extends: .build-default
#   dependencies:
#     - babl-git-meson
#     - gegl-git-meson

# build-default-min-meson:
#   extends: .build-default
#   dependencies:
#     - babl-min-meson
#     - gegl-min-meson

build-git-autotools:
  extends: .gimp-autotools
  dependencies:
    - babl-git-meson
    - gegl-git-meson

build-git-meson:
  extends: .gimp-meson
  dependencies:
    - babl-git-meson
    - gegl-git-meson

# build-all-git-meson:
#   extends: .build-all
#   dependencies:
#     - babl-git-meson
#     - gegl-git-meson

# build-all-min-meson:
#   extends: .build-all
#   dependencies:
#     - babl-min-meson
#     - gegl-min-meson
