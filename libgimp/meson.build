
gimpenums_notail = custom_target('gimpenums.c.notail',
  input : [ 'gimpenums.h', ],
  output: [ 'gimpenums.c.notail', ],
  command: [
    gimp_mkenums,
    '--fhead','#include "config.h"\n'
            + '#include <gio/gio.h>\n'
            + '#include <gegl.h>\n'
            + '#undef GIMP_DISABLE_DEPRECATED\n'
            + '#include "libgimpbase/gimpbase.h"\n'
            + '#include "libgimpbase/gimpbase-private.h"\n'
            + '#include "libgimpconfig/gimpconfigenums.h"\n'
            + '#include "gimpenums.h"\n',
    gimp_mkenums_custom_target_commonargs,
  ],
  capture: true,
)

gimpenums = custom_target('gimpenums.c',
  input : [ gimpenums_notail, 'gimpenums.c.tail', ],
  output: [ 'gimpenums.c', ],
  command: [ 'cat', '@INPUT@' ],
  capture: true,
)

gimpuimarshal = gnome.genmarshal('gimpuimarshal',
  prefix: '_gimpui_marshal',
  sources: 'gimpuimarshal.list',
  install_header: false,
)

libgimp_top_pdbwrappers = [
  'gimp_pdb.c',
  'gimpbrush_pdb.c',
  'gimpbrushes_pdb.c',
  'gimpbrushselect_pdb.c',
  'gimpbuffer_pdb.c',
  'gimpchannel_pdb.c',
  'gimpcontext_pdb.c',
  'gimpdebug_pdb.c',
  'gimpdisplay_pdb.c',
  'gimpdrawable_pdb.c',
  'gimpdrawablecolor_pdb.c',
  'gimpdrawableedit_pdb.c',
  'gimpdynamics_pdb.c',
  'gimpedit_pdb.c',
  'gimpfileops_pdb.c',
  'gimpfloatingsel_pdb.c',
  'gimpfonts_pdb.c',
  'gimpfontselect_pdb.c',
  'gimpgimprc_pdb.c',
  'gimpgradient_pdb.c',
  'gimpgradients_pdb.c',
  'gimpgradientselect_pdb.c',
  'gimphelp_pdb.c',
  'gimpimage_pdb.c',
  'gimpimagecolorprofile_pdb.c',
  'gimpimageconvert_pdb.c',
  'gimpimagegrid_pdb.c',
  'gimpimageguides_pdb.c',
  'gimpimagesamplepoints_pdb.c',
  'gimpimageselect_pdb.c',
  'gimpimagetransform_pdb.c',
  'gimpimageundo_pdb.c',
  'gimpitem_pdb.c',
  'gimpitemtransform_pdb.c',
  'gimplayer_pdb.c',
  'gimpmessage_pdb.c',
  'gimppainttools_pdb.c',
  'gimppalette_pdb.c',
  'gimppalettes_pdb.c',
  'gimppaletteselect_pdb.c',
  'gimppattern_pdb.c',
  'gimppatterns_pdb.c',
  'gimppatternselect_pdb.c',
  'gimpplugin_pdb.c',
  'gimpproceduraldb_pdb.c',
  'gimpprogress_pdb.c',
  'gimpselection_pdb.c',
  'gimptextlayer_pdb.c',
  'gimptexttool_pdb.c',
  'gimpunit_pdb.c',
  'gimpvectors_pdb.c',
]

libgimp_top_pdbheaders = [
  'gimp_pdb_headers.h',
  'gimp_pdb.h',
  'gimpbrush_pdb.h',
  'gimpbrushes_pdb.h',
  'gimpbrushselect_pdb.h',
  'gimpbuffer_pdb.h',
  'gimpchannel_pdb.h',
  'gimpcontext_pdb.h',
  'gimpdebug_pdb.h',
  'gimpdisplay_pdb.h',
  'gimpdrawable_pdb.h',
  'gimpdrawablecolor_pdb.h',
  'gimpdynamics_pdb.h',
  'gimpedit_pdb.h',
  'gimpfileops_pdb.h',
  'gimpfloatingsel_pdb.h',
  'gimpfonts_pdb.h',
  'gimpfontselect_pdb.h',
  'gimpgimprc_pdb.h',
  'gimpgradient_pdb.h',
  'gimpgradients_pdb.h',
  'gimpgradientselect_pdb.h',
  'gimphelp_pdb.h',
  'gimpimage_pdb.h',
  'gimpimagecolorprofile_pdb.h',
  'gimpimageconvert_pdb.h',
  'gimpimagegrid_pdb.h',
  'gimpimageguides_pdb.h',
  'gimpimagesamplepoints_pdb.h',
  'gimpimageselect_pdb.h',
  'gimpimagetransform_pdb.h',
  'gimpimageundo_pdb.h',
  'gimpitem_pdb.h',
  'gimpitemtransform_pdb.h',
  'gimplayer_pdb.h',
  'gimpmessage_pdb.h',
  'gimppainttools_pdb.h',
  'gimppalette_pdb.h',
  'gimppalettes_pdb.h',
  'gimppaletteselect_pdb.h',
  'gimppattern_pdb.h',
  'gimppatterns_pdb.h',
  'gimppatternselect_pdb.h',
  'gimpplugin_pdb.h',
  'gimpproceduraldb_pdb.h',
  'gimpprogress_pdb.h',
  'gimpselection_pdb.h',
  'gimptextlayer_pdb.h',
  'gimptexttool_pdb.h',
  'gimpunit_pdb.h',
  'gimpvectors_pdb.h',
]

libgimp_top_sources = [
  'gimp.c',
  'gimpbrushselect.c',
  'gimpchannel.c',
  'gimpdrawable.c',
  'gimpfontselect.c',
  'gimpgimprc.c',
  'gimpgradientselect.c',
  'gimpimage.c',
  'gimpimagecolorprofile.c',
  'gimplayer.c',
  'gimppaletteselect.c',
  'gimppatternselect.c',
  'gimppixbuf.c',
  'gimppixelfetcher.c',
  'gimppixelrgn.c',
  'gimpplugin.c',
  'gimpproceduraldb.c',
  'gimpprogress.c',
  'gimpselection.c',
  'gimptile.c',
  'gimptilebackendplugin.c',
  'gimpunitcache.c',
  gimpenums,
  libgimp_top_pdbwrappers,
]

libgimpui_sources = [
  'gimpaspectpreview.c',
  'gimpbrushselectbutton.c',
  'gimpdrawablepreview.c',
  'gimpexport.c',
  'gimpfontselectbutton.c',
  'gimpgradientselectbutton.c',
  'gimpimagecombobox.c',
  'gimpimagemetadata.c',
  'gimpitemcombobox.c',
  'gimppaletteselectbutton.c',
  'gimppatternselectbutton.c',
  'gimpprocbrowserdialog.c',
  'gimpprocview.c',
  'gimpprogressbar.c',
  'gimpselectbutton.c',
  'gimpui.c',
  'gimpzoompreview.c',
  gimpuimarshal,
]

libgimp_top_headers = [
  'gimp.h',
  'gimpaspectpreview.h',
  'gimpbrushselect.h',
  'gimpbrushselectbutton.h',
  'gimpchannel.h',
  'gimpdrawable.h',
  'gimpdrawablepreview.h',
  'gimpenums.h',
  'gimpexport.h',
  'gimpfontselect.h',
  'gimpfontselectbutton.h',
  'gimpgimprc.h',
  'gimpgradientselect.h',
  'gimpgradientselectbutton.h',
  'gimpimage.h',
  'gimpimagecolorprofile.h',
  'gimpimagecombobox.h',
  'gimpimagemetadata.h',
  'gimpitemcombobox.h',
  'gimplayer.h',
  'gimppaletteselect.h',
  'gimppaletteselectbutton.h',
  'gimppatternselect.h',
  'gimppatternselectbutton.h',
  'gimppixbuf.h',
  'gimppixelfetcher.h',
  'gimppixelrgn.h',
  'gimpplugin.h',
  'gimpprocbrowserdialog.h',
  'gimpproceduraldb.h',
  'gimpprocview.h',
  'gimpprogress.h',
  'gimpprogressbar.h',
  'gimpselectbutton.h',
  'gimpselection.h',
  'gimptile.h',
  'gimptypes.h',
  'gimpui.h',
  'gimpuitypes.h',
  'gimpzoompreview.h',
  libgimp_top_pdbheaders,
]


libgimp = library('gimp-'+ gimp_api_version,
  libgimp_top_sources,
  include_directories: rootInclude,
  dependencies: [
    gegl, gexiv2, gtk3, drmingw,
  ],
  c_args: [ '-DG_LOG_DOMAIN="LibGimp"', '-DGIMP_COMPILATION', ],
  link_with: [
    libgimpbase,
    libgimpcolor,
    libgimpconfig,
  ],
  vs_module_defs: 'gimp.def',
  install: true,
  version: so_version,
)


libgimpui = library('gimpui-'+ gimp_api_version,
  libgimpui_sources,
  include_directories: rootInclude,
  dependencies: [
    gegl, gexiv2, gtk3,
  ],
  c_args: [ '-DG_LOG_DOMAIN="LibGimpUI"', '-DGIMP_COMPILATION', ],
  link_with: [
    libgimp,
    libgimpbase,
    libgimpcolor,
    libgimpmodule,
    libgimpwidgets,
  ],
  vs_module_defs: 'gimpui.def',
  install: true,
  version: so_version,
)


install_headers(
  libgimp_top_headers,
  subdir: join_paths(gimp_api_name, 'libgimp'),
)
