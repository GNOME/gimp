<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Babl" version="0.1"/>
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="GdkPixbuf" version="2.0"/>
  <include name="Gegl" version="0.4"/>
  <include name="Gimp" version="3.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="3.0"/>
  <include name="cairo" version="1.0"/>
  <package name="gimp-ui-3.0"/>
  <c:include name="libgimp/gimpui.h"/>
  <namespace name="GimpUi"
             version="3.0"
             shared-library="libgimpui-3.0.so.0,libgimpwidgets-3.0.so.0"
             c:identifier-prefixes="Gimp"
             c:symbol-prefixes="gimp">
    <function-macro name="ASPECT_PREVIEW"
                    c:identifier="GIMP_ASPECT_PREVIEW"
                    introspectable="0">
      <source-position filename="libgimp/gimpaspectpreview.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ASPECT_PREVIEW_CLASS"
                    c:identifier="GIMP_ASPECT_PREVIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpaspectpreview.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ASPECT_PREVIEW_GET_CLASS"
                    c:identifier="GIMP_ASPECT_PREVIEW_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpaspectpreview.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="AspectPreview"
           c:symbol-prefix="aspect_preview"
           c:type="GimpAspectPreview"
           parent="Preview"
           glib:type-name="GimpAspectPreview"
           glib:get-type="gimp_aspect_preview_get_type"
           glib:type-struct="AspectPreviewClass">
      <doc xml:space="preserve"
           filename="libgimp/gimpaspectpreview.c"
           line="37">A widget providing a preview with fixed aspect ratio.</doc>
      <source-position filename="libgimp/gimpaspectpreview.h" line="65"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new_from_drawable"
                   c:identifier="gimp_aspect_preview_new_from_drawable"
                   version="2.10">
        <doc xml:space="preserve"
             filename="libgimp/gimpaspectpreview.c"
             line="414">Creates a new #GimpAspectPreview widget for @drawable_. See also
gimp_drawable_preview_new_from_drawable().</doc>
        <source-position filename="libgimp/gimpaspectpreview.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpaspectpreview.c"
               line="423">a new #GimpAspectPreview.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpaspectpreview.c"
                 line="416">a drawable</doc>
            <type name="Gimp.Drawable" c:type="GimpDrawable*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="drawable"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gimp.Drawable"/>
      </property>
      <field name="parent_instance">
        <type name="Preview" c:type="GimpPreview"/>
      </field>
      <field name="priv">
        <type name="AspectPreviewPrivate" c:type="GimpAspectPreviewPrivate*"/>
      </field>
    </class>
    <record name="AspectPreviewClass"
            c:type="GimpAspectPreviewClass"
            glib:is-gtype-struct-for="AspectPreview">
      <source-position filename="libgimp/gimpaspectpreview.h" line="65"/>
      <field name="parent_class">
        <type name="PreviewClass" c:type="GimpPreviewClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimpaspectpreview.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimpaspectpreview.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimpaspectpreview.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimpaspectpreview.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimpaspectpreview.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimpaspectpreview.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimpaspectpreview.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimpaspectpreview.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="AspectPreviewPrivate"
            c:type="GimpAspectPreviewPrivate"
            disguised="1">
      <source-position filename="libgimp/gimpaspectpreview.h" line="42"/>
    </record>
    <enumeration name="AspectType"
                 glib:type-name="GimpAspectType"
                 glib:get-type="gimp_aspect_type_get_type"
                 c:type="GimpAspectType">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsenums.h"
           line="28">Aspect ratios.</doc>
      <member name="square"
              value="0"
              c:identifier="GIMP_ASPECT_SQUARE"
              glib:nick="square">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="30">it's a 1:1 square</doc>
      </member>
      <member name="portrait"
              value="1"
              c:identifier="GIMP_ASPECT_PORTRAIT"
              glib:nick="portrait">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="31">it's higher than it's wide</doc>
      </member>
      <member name="landscape"
              value="2"
              c:identifier="GIMP_ASPECT_LANDSCAPE"
              glib:nick="landscape">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="32">it's wider than it's high</doc>
      </member>
    </enumeration>
    <function-macro name="BROWSER"
                    c:identifier="GIMP_BROWSER"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbrowser.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BROWSER_CLASS"
                    c:identifier="GIMP_BROWSER_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbrowser.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BROWSER_GET_CLASS"
                    c:identifier="GIMP_BROWSER_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbrowser.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BRUSH_SELECT_BUTTON"
                    c:identifier="GIMP_BRUSH_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimpbrushselectbutton.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BRUSH_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_BRUSH_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpbrushselectbutton.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BRUSH_SELECT_BUTTON_GET_CLASS"
                    c:identifier="GIMP_BRUSH_SELECT_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpbrushselectbutton.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUSY_BOX"
                    c:identifier="GIMP_BUSY_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbusybox.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUSY_BOX_CLASS"
                    c:identifier="GIMP_BUSY_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbusybox.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUSY_BOX_GET_CLASS"
                    c:identifier="GIMP_BUSY_BOX_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbusybox.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUTTON"
                    c:identifier="GIMP_BUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbutton.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUTTON_CLASS"
                    c:identifier="GIMP_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbutton.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BUTTON_GET_CLASS"
                    c:identifier="GIMP_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbutton.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Browser"
           c:symbol-prefix="browser"
           c:type="GimpBrowser"
           parent="Gtk.Paned"
           glib:type-name="GimpBrowser"
           glib:get-type="gimp_browser_get_type"
           glib:type-struct="BrowserClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpbrowser.c"
           line="37">A base class for a documentation browser.</doc>
      <source-position filename="libgimpwidgets/gimpbrowser.h" line="69"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gimp_browser_new" version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbrowser.c"
             line="216">Create a new #GimpBrowser widget.</doc>
        <source-position filename="libgimpwidgets/gimpbrowser.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpbrowser.c"
               line="221">a newly created #GimpBrowser.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="search">
        <source-position filename="libgimpwidgets/gimpbrowser.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <type name="Browser" c:type="GimpBrowser*"/>
          </instance-parameter>
          <parameter name="search_string" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="search_type" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_search_types"
              c:identifier="gimp_browser_add_search_types"
              version="2.4"
              introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbrowser.c"
             line="231">Populates the #GtkComboBox with search types.</doc>
        <source-position filename="libgimpwidgets/gimpbrowser.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="233">a #GimpBrowser widget</doc>
            <type name="Browser" c:type="GimpBrowser*"/>
          </instance-parameter>
          <parameter name="first_type_label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="234">the label of the first search type</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="first_type_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="235">an integer that identifies the first search type</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="236">a %NULL-terminated list of more labels and ids.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="get_left_vbox"
              c:identifier="gimp_browser_get_left_vbox"
              version="3.0">
        <source-position filename="libgimpwidgets/gimpbrowser.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpbrowser.c"
               line="296">The left vbox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="294">a #GimpBrowser widget</doc>
            <type name="Browser" c:type="GimpBrowser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_right_vbox"
              c:identifier="gimp_browser_get_right_vbox"
              version="3.0">
        <source-position filename="libgimpwidgets/gimpbrowser.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpbrowser.c"
               line="316">The right vbox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="314">a #GimpBrowser widget</doc>
            <type name="Browser" c:type="GimpBrowser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_search_summary"
              c:identifier="gimp_browser_set_search_summary"
              version="3.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbrowser.c"
             line="332">Sets the search summary text.</doc>
        <source-position filename="libgimpwidgets/gimpbrowser.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="334">a #GimpBrowser widget</doc>
            <type name="Browser" c:type="GimpBrowser*"/>
          </instance-parameter>
          <parameter name="summary" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="335">a string describing the search result</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_widget"
              c:identifier="gimp_browser_set_widget"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbrowser.c"
             line="355">Sets the widget to appear on the right side of the @browser.</doc>
        <source-position filename="libgimpwidgets/gimpbrowser.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="357">a #GimpBrowser widget</doc>
            <type name="Browser" c:type="GimpBrowser*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="358">a #GtkWidget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_message"
              c:identifier="gimp_browser_show_message"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbrowser.c"
             line="392">Displays @message in the right side of the @browser. Unless the right
side already contains a #GtkLabel, the widget previously added with
gimp_browser_set_widget() is removed and replaced by a #GtkLabel.</doc>
        <source-position filename="libgimpwidgets/gimpbrowser.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="browser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="394">a #GimpBrowser widget</doc>
            <type name="Browser" c:type="GimpBrowser*"/>
          </instance-parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbrowser.c"
                 line="395">text message</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Paned" c:type="GtkPaned"/>
      </field>
      <field name="priv">
        <type name="BrowserPrivate" c:type="GimpBrowserPrivate*"/>
      </field>
      <glib:signal name="search" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="BrowserClass"
            c:type="GimpBrowserClass"
            glib:is-gtype-struct-for="Browser">
      <source-position filename="libgimpwidgets/gimpbrowser.h" line="69"/>
      <field name="parent_class">
        <type name="Gtk.PanedClass" c:type="GtkPanedClass"/>
      </field>
      <field name="search">
        <callback name="search">
          <source-position filename="libgimpwidgets/gimpbrowser.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="browser" transfer-ownership="none">
              <type name="Browser" c:type="GimpBrowser*"/>
            </parameter>
            <parameter name="search_string" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="search_type" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpbrowser.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpbrowser.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpbrowser.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpbrowser.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpbrowser.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpbrowser.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpbrowser.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpbrowser.h" line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BrowserPrivate" c:type="GimpBrowserPrivate" disguised="1">
      <source-position filename="libgimpwidgets/gimpbrowser.h" line="42"/>
    </record>
    <class name="BrushSelectButton"
           c:symbol-prefix="brush_select_button"
           c:type="GimpBrushSelectButton"
           parent="SelectButton"
           glib:type-name="GimpBrushSelectButton"
           glib:get-type="gimp_brush_select_button_get_type"
           glib:type-struct="BrushSelectButtonClass">
      <doc xml:space="preserve"
           filename="libgimp/gimpbrushselectbutton.c"
           line="38">A button that pops up a brush selection dialog.</doc>
      <source-position filename="libgimp/gimpbrushselectbutton.h" line="77"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gimp_brush_select_button_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpbrushselectbutton.c"
             line="303">Creates a new #GtkWidget that completely controls the selection of
a brush. This widget is suitable for placement in a table in a
plug-in dialog.</doc>
        <source-position filename="libgimp/gimpbrushselectbutton.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpbrushselectbutton.c"
               line="316">A #GtkWidget that you can use in your UI.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="305">Title of the dialog to use or %NULL means to use the default
             title.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="brush_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="307">Initial brush name or %NULL to use current selection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="308">Initial opacity. -1 means to use current opacity.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="309">Initial spacing. -1 means to use current spacing.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="paint_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="310">Initial paint mode.  -1 means to use current paint mode.</doc>
            <type name="Gimp.LayerMode" c:type="GimpLayerMode"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="brush_set">
        <source-position filename="libgimp/gimpbrushselectbutton.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <type name="BrushSelectButton" c:type="GimpBrushSelectButton*"/>
          </instance-parameter>
          <parameter name="brush_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="opacity" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="spacing" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="paint_mode" transfer-ownership="none">
            <type name="Gimp.LayerMode" c:type="GimpLayerMode"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="mask_data" transfer-ownership="none">
            <type name="guint8" c:type="const guchar*"/>
          </parameter>
          <parameter name="dialog_closing" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_brush"
              c:identifier="gimp_brush_select_button_get_brush"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpbrushselectbutton.c"
             line="348">Retrieves the properties of currently selected brush.</doc>
        <source-position filename="libgimp/gimpbrushselectbutton.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpbrushselectbutton.c"
               line="357">an internal copy of the brush name which must not be freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="350">A #GimpBrushSelectButton</doc>
            <type name="BrushSelectButton" c:type="GimpBrushSelectButton*"/>
          </instance-parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="351">Opacity of the selected brush.</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="352">Spacing of the selected brush.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="paint_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="353">Paint mode of the selected brush.</doc>
            <type name="Gimp.LayerMode" c:type="GimpLayerMode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_brush"
              c:identifier="gimp_brush_select_button_set_brush"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpbrushselectbutton.c"
             line="381">Sets the current brush and other values for the brush select
button.</doc>
        <source-position filename="libgimp/gimpbrushselectbutton.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="383">A #GimpBrushSelectButton</doc>
            <type name="BrushSelectButton" c:type="GimpBrushSelectButton*"/>
          </instance-parameter>
          <parameter name="brush_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="384">Brush name to set; %NULL means no change.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="385">Opacity to set. -1.0 means no change.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="386">Spacing to set. -1 means no change.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="paint_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="387">Paint mode to set.  -1 means no change.</doc>
            <type name="Gimp.LayerMode" c:type="GimpLayerMode"/>
          </parameter>
        </parameters>
      </method>
      <property name="brush-name"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimpbrushselectbutton.c"
             line="180">The name of the currently selected brush.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="brush-opacity" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="brush-paint-mode" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="brush-spacing" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="title"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimpbrushselectbutton.c"
             line="165">The title to be used for the brush selection popup dialog.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="SelectButton" c:type="GimpSelectButton"/>
      </field>
      <field name="priv">
        <type name="BrushSelectButtonPrivate"
              c:type="GimpBrushSelectButtonPrivate*"/>
      </field>
      <glib:signal name="brush-set" when="first" version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpbrushselectbutton.c"
             line="237">The ::brush-set signal is emitted when the user selects a brush.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="brush_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="240">the name of the currently selected brush.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="241">opacity of the brush</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="242">spacing of the brush</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="paint_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="243">paint mode of the brush</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="244">width of the brush</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="245">height of the brush</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="mask_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="246">brush mask data</doc>
            <array zero-terminated="0" c:type="gpointer">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="dialog_closing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpbrushselectbutton.c"
                 line="247">whether the dialog was closed or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="BrushSelectButtonClass"
            c:type="GimpBrushSelectButtonClass"
            glib:is-gtype-struct-for="BrushSelectButton">
      <source-position filename="libgimp/gimpbrushselectbutton.h" line="77"/>
      <field name="parent_class">
        <type name="SelectButtonClass" c:type="GimpSelectButtonClass"/>
      </field>
      <field name="brush_set">
        <callback name="brush_set">
          <source-position filename="libgimp/gimpbrushselectbutton.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="button" transfer-ownership="none">
              <type name="BrushSelectButton" c:type="GimpBrushSelectButton*"/>
            </parameter>
            <parameter name="brush_name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="opacity" transfer-ownership="none">
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
            <parameter name="spacing" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="paint_mode" transfer-ownership="none">
              <type name="Gimp.LayerMode" c:type="GimpLayerMode"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="mask_data" transfer-ownership="none">
              <type name="guint8" c:type="const guchar*"/>
            </parameter>
            <parameter name="dialog_closing" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimpbrushselectbutton.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimpbrushselectbutton.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimpbrushselectbutton.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimpbrushselectbutton.h"
                           line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimpbrushselectbutton.h"
                           line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimpbrushselectbutton.h"
                           line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimpbrushselectbutton.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimpbrushselectbutton.h"
                           line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BrushSelectButtonPrivate"
            c:type="GimpBrushSelectButtonPrivate"
            disguised="1">
      <source-position filename="libgimp/gimpbrushselectbutton.h" line="43"/>
    </record>
    <class name="BusyBox"
           c:symbol-prefix="busy_box"
           c:type="GimpBusyBox"
           parent="Gtk.Box"
           glib:type-name="GimpBusyBox"
           glib:get-type="gimp_busy_box_get_type"
           glib:type-struct="BusyBoxClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpbusybox.c"
           line="35">#GimpBusyBox displays a styled message, providing indication of
an ongoing operation.</doc>
      <source-position filename="libgimpwidgets/gimpbusybox.h" line="62"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gimp_busy_box_new"
                   version="2.10.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbusybox.c"
             line="174">Creates a new #GimpBusyBox widget.</doc>
        <source-position filename="libgimpwidgets/gimpbusybox.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpbusybox.c"
               line="180">A pointer to the new #GimpBusyBox widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="message"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbusybox.c"
                 line="176">the displayed message, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_message"
              c:identifier="gimp_busy_box_get_message"
              version="2.10.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbusybox.c"
             line="216">Returns the displayed message of @box.</doc>
        <source-position filename="libgimpwidgets/gimpbusybox.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpbusybox.c"
               line="222">The displayed message.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbusybox.c"
                 line="218">a #GimpBusyBox</doc>
            <type name="BusyBox" c:type="GimpBusyBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_message"
              c:identifier="gimp_busy_box_set_message"
              version="2.10.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbusybox.c"
             line="195">Sets the displayed message og @box to @message.</doc>
        <source-position filename="libgimpwidgets/gimpbusybox.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbusybox.c"
                 line="197">a #GimpBusyBox</doc>
            <type name="BusyBox" c:type="GimpBusyBox*"/>
          </instance-parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbusybox.c"
                 line="198">the displayed message</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="message"
                version="2.10.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbusybox.c"
             line="86">Specifies the displayed message.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="BusyBoxPrivate" c:type="GimpBusyBoxPrivate*"/>
      </field>
    </class>
    <record name="BusyBoxClass"
            c:type="GimpBusyBoxClass"
            glib:is-gtype-struct-for="BusyBox">
      <source-position filename="libgimpwidgets/gimpbusybox.h" line="62"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpbusybox.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpbusybox.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpbusybox.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpbusybox.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpbusybox.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpbusybox.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpbusybox.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpbusybox.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BusyBoxPrivate" c:type="GimpBusyBoxPrivate" disguised="1">
      <source-position filename="libgimpwidgets/gimpbusybox.h" line="39"/>
    </record>
    <class name="Button"
           c:symbol-prefix="button"
           c:type="GimpButton"
           parent="Gtk.Button"
           glib:type-name="GimpButton"
           glib:get-type="gimp_button_get_type"
           glib:type-struct="ButtonClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpbutton.c"
           line="31">#GimpButton adds an extra signal to the #GtkButton widget that
allows the callback to distinguish a normal click from a click that
was performed with modifier keys pressed.</doc>
      <source-position filename="libgimpwidgets/gimpbutton.h" line="68"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Activatable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gimp_button_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbutton.c"
             line="103">Creates a new #GimpButton widget.</doc>
        <source-position filename="libgimpwidgets/gimpbutton.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpbutton.c"
               line="108">A pointer to the new #GimpButton widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="extended_clicked" invoker="extended_clicked">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbutton.c"
             line="116">Emits the button's "extended_clicked" signal.</doc>
        <source-position filename="libgimpwidgets/gimpbutton.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbutton.c"
                 line="118">a #GimpButton.</doc>
            <type name="Button" c:type="GimpButton*"/>
          </instance-parameter>
          <parameter name="modifier_state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbutton.c"
                 line="119">a state as found in #GdkEventButton-&gt;state,
                 e.g. #GDK_SHIFT_MASK.</doc>
            <type name="Gdk.ModifierType" c:type="GdkModifierType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="extended_clicked"
              c:identifier="gimp_button_extended_clicked">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbutton.c"
             line="116">Emits the button's "extended_clicked" signal.</doc>
        <source-position filename="libgimpwidgets/gimpbutton.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbutton.c"
                 line="118">a #GimpButton.</doc>
            <type name="Button" c:type="GimpButton*"/>
          </instance-parameter>
          <parameter name="modifier_state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbutton.c"
                 line="119">a state as found in #GdkEventButton-&gt;state,
                 e.g. #GDK_SHIFT_MASK.</doc>
            <type name="Gdk.ModifierType" c:type="GdkModifierType"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Button" c:type="GtkButton"/>
      </field>
      <field name="priv">
        <type name="ButtonPrivate" c:type="GimpButtonPrivate*"/>
      </field>
      <glib:signal name="extended-clicked" when="first">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpbutton.c"
             line="75">This signal is emitted when the button is clicked with a modifier
key pressed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="arg1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpbutton.c"
                 line="78">the state of modifier keys when the button was clicked</doc>
            <type name="Gdk.ModifierType"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ButtonClass"
            c:type="GimpButtonClass"
            glib:is-gtype-struct-for="Button">
      <source-position filename="libgimpwidgets/gimpbutton.h" line="68"/>
      <field name="parent_class">
        <type name="Gtk.ButtonClass" c:type="GtkButtonClass"/>
      </field>
      <field name="extended_clicked">
        <callback name="extended_clicked">
          <source-position filename="libgimpwidgets/gimpbutton.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="button" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpbutton.c"
                   line="118">a #GimpButton.</doc>
              <type name="Button" c:type="GimpButton*"/>
            </parameter>
            <parameter name="modifier_state" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpbutton.c"
                   line="119">a state as found in #GdkEventButton-&gt;state,
                 e.g. #GDK_SHIFT_MASK.</doc>
              <type name="Gdk.ModifierType" c:type="GdkModifierType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpbutton.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpbutton.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpbutton.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpbutton.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpbutton.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpbutton.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpbutton.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpbutton.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ButtonPrivate" c:type="GimpButtonPrivate" disguised="1">
      <source-position filename="libgimpwidgets/gimpbutton.h" line="42"/>
    </record>
    <function-macro name="CELL_RENDERER_COLOR"
                    c:identifier="GIMP_CELL_RENDERER_COLOR"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CELL_RENDERER_COLOR_CLASS"
                    c:identifier="GIMP_CELL_RENDERER_COLOR_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CELL_RENDERER_COLOR_GET_CLASS"
                    c:identifier="GIMP_CELL_RENDERER_COLOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CELL_RENDERER_TOGGLE"
                    c:identifier="GIMP_CELL_RENDERER_TOGGLE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CELL_RENDERER_TOGGLE_CLASS"
                    c:identifier="GIMP_CELL_RENDERER_TOGGLE_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CELL_RENDERER_TOGGLE_GET_CLASS"
                    c:identifier="GIMP_CELL_RENDERER_TOGGLE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CHAIN_BUTTON"
                    c:identifier="GIMP_CHAIN_BUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpchainbutton.h" line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CHAIN_BUTTON_CLASS"
                    c:identifier="GIMP_CHAIN_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpchainbutton.h" line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CHAIN_BUTTON_GET_CLASS"
                    c:identifier="GIMP_CHAIN_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpchainbutton.h" line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CHANNEL_COMBO_BOX"
                    c:identifier="GIMP_CHANNEL_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimp/gimpitemcombobox.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_AREA"
                    c:identifier="GIMP_COLOR_AREA"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorarea.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_AREA_CLASS"
                    c:identifier="GIMP_COLOR_AREA_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorarea.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_AREA_GET_CLASS"
                    c:identifier="GIMP_COLOR_AREA_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorarea.h" line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_BUTTON"
                    c:identifier="GIMP_COLOR_BUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorbutton.h" line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_BUTTON_CLASS"
                    c:identifier="GIMP_COLOR_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorbutton.h" line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_BUTTON_GET_CLASS"
                    c:identifier="GIMP_COLOR_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorbutton.h" line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_DISPLAY"
                    c:identifier="GIMP_COLOR_DISPLAY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolordisplay.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_DISPLAY_CLASS"
                    c:identifier="GIMP_COLOR_DISPLAY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolordisplay.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_DISPLAY_GET_CLASS"
                    c:identifier="GIMP_COLOR_DISPLAY_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolordisplay.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_DISPLAY_STACK"
                    c:identifier="GIMP_COLOR_DISPLAY_STACK"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_DISPLAY_STACK_CLASS"
                    c:identifier="GIMP_COLOR_DISPLAY_STACK_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_DISPLAY_STACK_GET_CLASS"
                    c:identifier="GIMP_COLOR_DISPLAY_STACK_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_HEX_ENTRY"
                    c:identifier="GIMP_COLOR_HEX_ENTRY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_HEX_ENTRY_CLASS"
                    c:identifier="GIMP_COLOR_HEX_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_HEX_ENTRY_GET_CLASS"
                    c:identifier="GIMP_COLOR_HEX_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_NOTEBOOK"
                    c:identifier="GIMP_COLOR_NOTEBOOK"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_NOTEBOOK_CLASS"
                    c:identifier="GIMP_COLOR_NOTEBOOK_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_NOTEBOOK_GET_CLASS"
                    c:identifier="GIMP_COLOR_NOTEBOOK_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_CHOOSER_DIALOG"
                    c:identifier="GIMP_COLOR_PROFILE_CHOOSER_DIALOG"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                       line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_CHOOSER_DIALOG_CLASS"
                    c:identifier="GIMP_COLOR_PROFILE_CHOOSER_DIALOG_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                       line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_CHOOSER_DIALOG_GET_CLASS"
                    c:identifier="GIMP_COLOR_PROFILE_CHOOSER_DIALOG_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_COMBO_BOX"
                    c:identifier="GIMP_COLOR_PROFILE_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_COMBO_BOX_CLASS"
                    c:identifier="GIMP_COLOR_PROFILE_COMBO_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                       line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_COMBO_BOX_GET_CLASS"
                    c:identifier="GIMP_COLOR_PROFILE_COMBO_BOX_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_STORE"
                    c:identifier="GIMP_COLOR_PROFILE_STORE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_STORE_CLASS"
                    c:identifier="GIMP_COLOR_PROFILE_STORE_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_STORE_GET_CLASS"
                    c:identifier="GIMP_COLOR_PROFILE_STORE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_VIEW"
                    c:identifier="GIMP_COLOR_PROFILE_VIEW"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                       line="28"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_VIEW_CLASS"
                    c:identifier="GIMP_COLOR_PROFILE_VIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                       line="29"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_PROFILE_VIEW_GET_CLASS"
                    c:identifier="GIMP_COLOR_PROFILE_VIEW_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                       line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_SELECTION"
                    c:identifier="GIMP_COLOR_SELECTION"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorselection.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_SELECTION_CLASS"
                    c:identifier="GIMP_COLOR_SELECTION_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorselection.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_SELECTION_GET_CLASS"
                    c:identifier="GIMP_COLOR_SELECTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorselection.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_SELECTOR"
                    c:identifier="GIMP_COLOR_SELECTOR"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorselector.h"
                       line="56"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="COLOR_SELECTOR_BAR_SIZE"
              value="15"
              c:type="GIMP_COLOR_SELECTOR_BAR_SIZE">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorselector.h"
           line="46">The suggested width for a color bar in a #GimpColorSelector
implementation.</doc>
      <source-position filename="libgimpwidgets/gimpcolorselector.h"
                       line="52"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="COLOR_SELECTOR_CLASS"
                    c:identifier="GIMP_COLOR_SELECTOR_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorselector.h"
                       line="57"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_SELECTOR_GET_CLASS"
                    c:identifier="GIMP_COLOR_SELECTOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorselector.h"
                       line="60"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="COLOR_SELECTOR_SIZE"
              value="150"
              c:type="GIMP_COLOR_SELECTOR_SIZE">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorselector.h"
           line="38">The suggested size for a color area in a #GimpColorSelector
implementation.</doc>
      <source-position filename="libgimpwidgets/gimpcolorselector.h"
                       line="44"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="COORDINATES_CHAINBUTTON"
                    c:identifier="GIMP_COORDINATES_CHAINBUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="151"/>
      <parameters>
        <parameter name="sizeentry">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.h"
               line="146">The #GimpSizeEntry returned by gimp_coordinates_new().</doc>
        </parameter>
      </parameters>
    </function-macro>
    <class name="CellRendererColor"
           c:symbol-prefix="cell_renderer_color"
           c:type="GimpCellRendererColor"
           parent="Gtk.CellRenderer"
           glib:type-name="GimpCellRendererColor"
           glib:get-type="gimp_cell_renderer_color_get_type"
           glib:type-struct="CellRendererColorClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcellrenderercolor.c"
           line="36">A #GtkCellRenderer to display a #GimpRGB color.</doc>
      <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                       line="63"/>
      <constructor name="new"
                   c:identifier="gimp_cell_renderer_color_new"
                   version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcellrenderercolor.c"
             line="319">Creates a #GtkCellRenderer that displays a color.</doc>
        <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcellrenderercolor.c"
               line="324">a new #GimpCellRendererColor</doc>
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </return-value>
      </constructor>
      <property name="color" writable="1" transfer-ownership="none">
        <type name="Gimp.RGB"/>
      </property>
      <property name="icon-size"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="opaque"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.CellRenderer" c:type="GtkCellRenderer"/>
      </field>
      <field name="priv">
        <type name="CellRendererColorPrivate"
              c:type="GimpCellRendererColorPrivate*"/>
      </field>
    </class>
    <record name="CellRendererColorClass"
            c:type="GimpCellRendererColorClass"
            glib:is-gtype-struct-for="CellRendererColor">
      <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                       line="63"/>
      <field name="parent_class">
        <type name="Gtk.CellRendererClass" c:type="GtkCellRendererClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CellRendererColorPrivate"
            c:type="GimpCellRendererColorPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                       line="40"/>
    </record>
    <class name="CellRendererToggle"
           c:symbol-prefix="cell_renderer_toggle"
           c:type="GimpCellRendererToggle"
           parent="Gtk.CellRendererToggle"
           glib:type-name="GimpCellRendererToggle"
           glib:get-type="gimp_cell_renderer_toggle_get_type"
           glib:type-struct="CellRendererToggleClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcellrenderertoggle.c"
           line="34">A #GtkCellRendererToggle that displays icons instead of a checkbox.</doc>
      <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                       line="67"/>
      <constructor name="new"
                   c:identifier="gimp_cell_renderer_toggle_new"
                   version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcellrenderertoggle.c"
             line="526">Creates a custom version of the #GtkCellRendererToggle. Instead of
showing the standard toggle button, it shows a named icon if the
cell is active and no icon otherwise. This cell renderer is for
example used in the Layers treeview to indicate and control the
layer's visibility by showing %GIMP_STOCK_VISIBLE.</doc>
        <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcellrenderertoggle.c"
               line="536">a new #GimpCellRendererToggle</doc>
          <type name="Gtk.CellRenderer" c:type="GtkCellRenderer*"/>
        </return-value>
        <parameters>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcellrenderertoggle.c"
                 line="528">the icon name of the icon to use for the active state</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="clicked" invoker="clicked" version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcellrenderertoggle.c"
             line="548">Emits the "clicked" signal from a #GimpCellRendererToggle.</doc>
        <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cell" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcellrenderertoggle.c"
                 line="550">a #GimpCellRendererToggle</doc>
            <type name="CellRendererToggle" c:type="GimpCellRendererToggle*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcellrenderertoggle.c"
                 line="551">the path to the clicked row</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcellrenderertoggle.c"
                 line="552">the modifier state</doc>
            <type name="Gdk.ModifierType" c:type="GdkModifierType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="clicked"
              c:identifier="gimp_cell_renderer_toggle_clicked"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcellrenderertoggle.c"
             line="548">Emits the "clicked" signal from a #GimpCellRendererToggle.</doc>
        <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="cell" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcellrenderertoggle.c"
                 line="550">a #GimpCellRendererToggle</doc>
            <type name="CellRendererToggle" c:type="GimpCellRendererToggle*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcellrenderertoggle.c"
                 line="551">the path to the clicked row</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcellrenderertoggle.c"
                 line="552">the modifier state</doc>
            <type name="Gdk.ModifierType" c:type="GdkModifierType"/>
          </parameter>
        </parameters>
      </method>
      <property name="icon-name"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="icon-size"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="override-background"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.CellRendererToggle" c:type="GtkCellRendererToggle"/>
      </field>
      <field name="priv">
        <type name="CellRendererTogglePrivate"
              c:type="GimpCellRendererTogglePrivate*"/>
      </field>
      <glib:signal name="clicked" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="Gdk.ModifierType"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CellRendererToggleClass"
            c:type="GimpCellRendererToggleClass"
            glib:is-gtype-struct-for="CellRendererToggle">
      <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                       line="67"/>
      <field name="parent_class">
        <type name="Gtk.CellRendererToggleClass"
              c:type="GtkCellRendererToggleClass"/>
      </field>
      <field name="clicked">
        <callback name="clicked">
          <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cell" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcellrenderertoggle.c"
                   line="550">a #GimpCellRendererToggle</doc>
              <type name="CellRendererToggle"
                    c:type="GimpCellRendererToggle*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcellrenderertoggle.c"
                   line="551">the path to the clicked row</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="state" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcellrenderertoggle.c"
                   line="552">the modifier state</doc>
              <type name="Gdk.ModifierType" c:type="GdkModifierType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CellRendererTogglePrivate"
            c:type="GimpCellRendererTogglePrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                       line="40"/>
    </record>
    <class name="ChainButton"
           c:symbol-prefix="chain_button"
           c:type="GimpChainButton"
           parent="Gtk.Grid"
           glib:type-name="GimpChainButton"
           glib:get-type="gimp_chain_button_get_type"
           glib:type-struct="ChainButtonClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpchainbutton.c"
           line="34">This widget provides a button showing either a linked or a broken
chain that can be used to link two entries, spinbuttons, colors or
other GUI elements and show that they may be locked. Use it for
example to connect X and Y ratios to provide the possibility of a
constrained aspect ratio.

The #GimpChainButton only gives visual feedback, it does not really
connect widgets. You have to take care of locking the values
yourself by checking the state of the #GimpChainButton whenever a
value changes in one of the connected widgets and adjusting the
other value if necessary.</doc>
      <source-position filename="libgimpwidgets/gimpchainbutton.h" line="73"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gimp_chain_button_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpchainbutton.c"
             line="320">Creates a new #GimpChainButton widget.

This returns a button showing either a broken or a linked chain and
small clamps attached to both sides that visually group the two
widgets you want to connect. This widget looks best when attached
to a grid taking up two columns (or rows respectively) next to the
widgets that it is supposed to connect. It may work for more than
two widgets, but the look is optimized for two.</doc>
        <source-position filename="libgimpwidgets/gimpchainbutton.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpchainbutton.c"
               line="334">Pointer to the new #GimpChainButton, which is inactive
         by default. Use gimp_chain_button_set_active() to
         change its state.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpchainbutton.c"
                 line="322">The position you are going to use for the button
           with respect to the widgets you want to chain.</doc>
            <type name="ChainPosition" c:type="GimpChainPosition"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="toggled">
        <source-position filename="libgimpwidgets/gimpchainbutton.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <type name="ChainButton" c:type="GimpChainButton*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_active" c:identifier="gimp_chain_button_get_active">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpchainbutton.c"
             line="420">Checks the state of the #GimpChainButton.</doc>
        <source-position filename="libgimpwidgets/gimpchainbutton.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpchainbutton.c"
               line="426">%TRUE if the #GimpChainButton is active (locked).</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpchainbutton.c"
                 line="422">Pointer to a #GimpChainButton.</doc>
            <type name="ChainButton" c:type="GimpChainButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_button"
              c:identifier="gimp_chain_button_get_button"
              version="3.0">
        <source-position filename="libgimpwidgets/gimpchainbutton.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpchainbutton.c"
               line="444">The #GimpChainButton's button.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpchainbutton.c"
                 line="442">A #GimpChainButton.</doc>
            <type name="ChainButton" c:type="GimpChainButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_size"
              c:identifier="gimp_chain_button_get_icon_size"
              version="2.10.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpchainbutton.c"
             line="366">Gets the icon size of the #GimpChainButton.</doc>
        <source-position filename="libgimpwidgets/gimpchainbutton.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpchainbutton.c"
               line="372">The icon size.</doc>
          <type name="Gtk.IconSize" c:type="GtkIconSize"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpchainbutton.c"
                 line="368">Pointer to a #GimpChainButton.</doc>
            <type name="ChainButton" c:type="GimpChainButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_active" c:identifier="gimp_chain_button_set_active">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpchainbutton.c"
             line="390">Sets the state of the #GimpChainButton to be either locked (%TRUE) or
unlocked (%FALSE) and changes the showed pixmap to reflect the new state.</doc>
        <source-position filename="libgimpwidgets/gimpchainbutton.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpchainbutton.c"
                 line="392">Pointer to a #GimpChainButton.</doc>
            <type name="ChainButton" c:type="GimpChainButton*"/>
          </instance-parameter>
          <parameter name="active" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpchainbutton.c"
                 line="393">The new state.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_size"
              c:identifier="gimp_chain_button_set_icon_size"
              version="2.10.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpchainbutton.c"
             line="346">Sets the icon size of the #GimpChainButton.</doc>
        <source-position filename="libgimpwidgets/gimpchainbutton.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpchainbutton.c"
                 line="348">Pointer to a #GimpChainButton.</doc>
            <type name="ChainButton" c:type="GimpChainButton*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpchainbutton.c"
                 line="349">The new icon size.</doc>
            <type name="Gtk.IconSize" c:type="GtkIconSize"/>
          </parameter>
        </parameters>
      </method>
      <property name="active"
                version="2.10.10"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpchainbutton.c"
             line="176">The toggled state of the chain button.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="icon-size"
                version="2.10.10"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpchainbutton.c"
             line="160">The chain button icon size.</doc>
        <type name="Gtk.IconSize"/>
      </property>
      <property name="position"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpchainbutton.c"
             line="144">The position in which the chain button will be used.</doc>
        <type name="ChainPosition"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Grid" c:type="GtkGrid"/>
      </field>
      <field name="priv">
        <type name="ChainButtonPrivate" c:type="GimpChainButtonPrivate*"/>
      </field>
      <glib:signal name="toggled" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ChainButtonClass"
            c:type="GimpChainButtonClass"
            glib:is-gtype-struct-for="ChainButton">
      <source-position filename="libgimpwidgets/gimpchainbutton.h" line="73"/>
      <field name="parent_class">
        <type name="Gtk.GridClass" c:type="GtkGridClass"/>
      </field>
      <field name="toggled">
        <callback name="toggled">
          <source-position filename="libgimpwidgets/gimpchainbutton.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="button" transfer-ownership="none">
              <type name="ChainButton" c:type="GimpChainButton*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpchainbutton.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpchainbutton.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpchainbutton.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpchainbutton.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpchainbutton.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpchainbutton.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpchainbutton.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpchainbutton.h"
                           line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ChainButtonPrivate"
            c:type="GimpChainButtonPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpchainbutton.h" line="48"/>
    </record>
    <enumeration name="ChainPosition"
                 glib:type-name="GimpChainPosition"
                 glib:get-type="gimp_chain_position_get_type"
                 c:type="GimpChainPosition">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsenums.h"
           line="48">Possible chain positions for #GimpChainButton.</doc>
      <member name="top"
              value="0"
              c:identifier="GIMP_CHAIN_TOP"
              glib:nick="top">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="50">the chain is on top</doc>
      </member>
      <member name="left"
              value="1"
              c:identifier="GIMP_CHAIN_LEFT"
              glib:nick="left">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="51">the chain is to the left</doc>
      </member>
      <member name="bottom"
              value="2"
              c:identifier="GIMP_CHAIN_BOTTOM"
              glib:nick="bottom">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="52">the chain is on bottom</doc>
      </member>
      <member name="right"
              value="3"
              c:identifier="GIMP_CHAIN_RIGHT"
              glib:nick="right">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="53">the chain is to the right</doc>
      </member>
    </enumeration>
    <class name="ChannelComboBox"
           c:symbol-prefix="channel_combo_box"
           c:type="GimpChannelComboBox"
           parent="IntComboBox"
           glib:type-name="GimpChannelComboBox"
           glib:get-type="gimp_channel_combo_box_get_type">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new"
                   c:identifier="gimp_channel_combo_box_new"
                   version="2.2">
        <doc xml:space="preserve"
             filename="libgimp/gimpitemcombobox.c"
             line="224">Creates a new #GimpIntComboBox filled with all currently opened
channels. See gimp_drawable_combo_box_new() for more information.</doc>
        <source-position filename="libgimp/gimpitemcombobox.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpitemcombobox.c"
               line="233">a new #GimpIntComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="constraint"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="226">a #GimpItemConstraintFunc or %NULL</doc>
            <type name="ItemConstraintFunc" c:type="GimpItemConstraintFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="227">a pointer that is passed to @constraint</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="data_destroy"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="228">Destroy function for @data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="ColorArea"
           c:symbol-prefix="color_area"
           c:type="GimpColorArea"
           parent="Gtk.DrawingArea"
           glib:type-name="GimpColorArea"
           glib:get-type="gimp_color_area_get_type"
           glib:type-struct="ColorAreaClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorarea.c"
           line="38">Displays a #GimpRGB color, optionally with alpha-channel.</doc>
      <source-position filename="libgimpwidgets/gimpcolorarea.h" line="70"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gimp_color_area_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="498">Creates a new #GimpColorArea widget.

This returns a preview area showing the color. It handles color
DND. If the color changes, the "color_changed" signal is emitted.</doc>
        <source-position filename="libgimpwidgets/gimpcolorarea.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorarea.c"
               line="509">Pointer to the new #GimpColorArea widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="500">A pointer to a #GimpRGB struct.</doc>
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="501">The type of color area to create.</doc>
            <type name="ColorAreaType" c:type="GimpColorAreaType"/>
          </parameter>
          <parameter name="drag_mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="502">The event_mask that should trigger drags.</doc>
            <type name="Gdk.ModifierType" c:type="GdkModifierType"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="color_changed">
        <source-position filename="libgimpwidgets/gimpcolorarea.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <type name="ColorArea" c:type="GimpColorArea*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_color" c:identifier="gimp_color_area_get_color">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="554">Retrieves the current color of the @area.</doc>
        <source-position filename="libgimpwidgets/gimpcolorarea.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="556">Pointer to a #GimpColorArea.</doc>
            <type name="ColorArea" c:type="GimpColorArea*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="557">Pointer to a #GimpRGB struct
        that is used to return the color.</doc>
            <type name="Gimp.RGB" c:type="GimpRGB*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_alpha" c:identifier="gimp_color_area_has_alpha">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="576">Checks whether the @area shows transparency information. This is determined
via the @area's #GimpColorAreaType.</doc>
        <source-position filename="libgimpwidgets/gimpcolorarea.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorarea.c"
               line="583">%TRUE if @area shows transparency information, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="578">Pointer to a #GimpColorArea.</doc>
            <type name="ColorArea" c:type="GimpColorArea*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_color" c:identifier="gimp_color_area_set_color">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="523">Sets @area to a different @color.</doc>
        <source-position filename="libgimpwidgets/gimpcolorarea.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="525">Pointer to a #GimpColorArea.</doc>
            <type name="ColorArea" c:type="GimpColorArea*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="526">Pointer to a #GimpRGB struct that defines the new color.</doc>
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color_config"
              c:identifier="gimp_color_area_set_color_config"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="690">Sets the color management configuration to use with this color area.</doc>
        <source-position filename="libgimpwidgets/gimpcolorarea.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="692">a #GimpColorArea widget.</doc>
            <type name="ColorArea" c:type="GimpColorArea*"/>
          </instance-parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="693">a #GimpColorConfig object.</doc>
            <type name="Gimp.ColorConfig" c:type="GimpColorConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_draw_border"
              c:identifier="gimp_color_area_set_draw_border">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="627">The @area can draw a thin border in the foreground color around
itself.  This function toggles this behaviour on and off. The
default is not draw a border.</doc>
        <source-position filename="libgimpwidgets/gimpcolorarea.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="629">Pointer to a #GimpColorArea.</doc>
            <type name="ColorArea" c:type="GimpColorArea*"/>
          </instance-parameter>
          <parameter name="draw_border" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="630">whether to draw a border or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_out_of_gamut"
              c:identifier="gimp_color_area_set_out_of_gamut"
              version="2.10.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="658">Sets the color area to render as an out-of-gamut color, i.e. with a
small triangle on a corner using the color management out of gamut
color (as per gimp_color_area_set_color_config()).

By default, @area will render as out-of-gamut for any RGB color with
a channel out of the [0; 1] range. This function allows to consider
more colors out of gamut (for instance non-gray colors on a grayscale
image, or colors absent of palettes in indexed images, etc.)</doc>
        <source-position filename="libgimpwidgets/gimpcolorarea.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="660">a #GimpColorArea widget.</doc>
            <type name="ColorArea" c:type="GimpColorArea*"/>
          </instance-parameter>
          <parameter name="out_of_gamut" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="661">whether to show an out-of-gamut indicator</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_type" c:identifier="gimp_color_area_set_type">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="597">Changes the type of @area. The #GimpColorAreaType determines
whether the widget shows transparency information and chooses the
size of the checkerboard used to do that.</doc>
        <source-position filename="libgimpwidgets/gimpcolorarea.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="599">Pointer to a #GimpColorArea.</doc>
            <type name="ColorArea" c:type="GimpColorArea*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorarea.c"
                 line="600">A #GimpColorAreaType.</doc>
            <type name="ColorAreaType" c:type="GimpColorAreaType"/>
          </parameter>
        </parameters>
      </method>
      <property name="color"
                version="2.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="177">The color displayed in the color area.</doc>
        <type name="Gimp.RGB"/>
      </property>
      <property name="drag-mask"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gdk.ModifierType"/>
      </property>
      <property name="draw-border"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="221">Whether to draw a thin border in the foreground color around the area.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="type"
                version="2.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorarea.c"
             line="191">The type of the color area.</doc>
        <type name="ColorAreaType"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.DrawingArea" c:type="GtkDrawingArea"/>
      </field>
      <field name="priv">
        <type name="ColorAreaPrivate" c:type="GimpColorAreaPrivate*"/>
      </field>
      <glib:signal name="color-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ColorAreaClass"
            c:type="GimpColorAreaClass"
            glib:is-gtype-struct-for="ColorArea">
      <source-position filename="libgimpwidgets/gimpcolorarea.h" line="70"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
      <field name="color_changed">
        <callback name="color_changed">
          <source-position filename="libgimpwidgets/gimpcolorarea.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="area" transfer-ownership="none">
              <type name="ColorArea" c:type="GimpColorArea*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolorarea.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolorarea.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolorarea.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolorarea.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolorarea.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolorarea.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolorarea.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolorarea.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorAreaPrivate"
            c:type="GimpColorAreaPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolorarea.h" line="45"/>
    </record>
    <enumeration name="ColorAreaType"
                 glib:type-name="GimpColorAreaType"
                 glib:get-type="gimp_color_area_type_get_type"
                 c:type="GimpColorAreaType">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsenums.h"
           line="70">The types of transparency display for #GimpColorArea.</doc>
      <member name="flat"
              value="0"
              c:identifier="GIMP_COLOR_AREA_FLAT"
              glib:nick="flat">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="72">don't display transparency</doc>
      </member>
      <member name="small_checks"
              value="1"
              c:identifier="GIMP_COLOR_AREA_SMALL_CHECKS"
              glib:nick="small-checks">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="73">display transparency using small checks</doc>
      </member>
      <member name="large_checks"
              value="2"
              c:identifier="GIMP_COLOR_AREA_LARGE_CHECKS"
              glib:nick="large-checks">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="74">display transparency using large checks</doc>
      </member>
    </enumeration>
    <class name="ColorButton"
           c:symbol-prefix="color_button"
           c:type="GimpColorButton"
           parent="Button"
           glib:type-name="GimpColorButton"
           glib:get-type="gimp_color_button_get_type"
           glib:type-struct="ColorButtonClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorbutton.c"
           line="47">This widget provides a simple button with a preview showing the
color.

On click a color selection dialog is opened. Additionally the
button supports Drag and Drop and has a right-click menu that
allows one to choose the color from the current FG or BG color. If
the user changes the color, the "color-changed" signal is emitted.</doc>
      <source-position filename="libgimpwidgets/gimpcolorbutton.h" line="77"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Activatable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gimp_color_button_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="614">Creates a new #GimpColorButton widget.

This returns a button with a preview showing the color.
When the button is clicked a GtkColorSelectionDialog is opened.
If the user changes the color the new color is written into the
array that was used to pass the initial color and the "color-changed"
signal is emitted.</doc>
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorbutton.c"
               line="630">Pointer to the new #GimpColorButton widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="616">String that will be used as title for the color_selector.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="617">Width of the colorpreview in pixels.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="618">Height of the colorpreview in pixels.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="619">A pointer to a #GimpRGB color.</doc>
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="620">The type of transparency to be displayed.</doc>
            <type name="ColorAreaType" c:type="GimpColorAreaType"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="color_changed">
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_action_type">
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_color" c:identifier="gimp_color_button_get_color">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="724">Retrieves the currently set color from the @button.</doc>
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="726">Pointer to a #GimpColorButton.</doc>
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="727">Pointer to a #GimpRGB struct
         used to return the color.</doc>
            <type name="Gimp.RGB" c:type="GimpRGB*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="gimp_color_button_get_title"
              version="2.10">
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorbutton.c"
               line="685">The @button dialog's title.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="683">a #GimpColorButton.</doc>
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ui_manager"
              c:identifier="gimp_color_button_get_ui_manager"
              version="2.10">
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorbutton.c"
               line="891">The @button's #GtkUIManager.</doc>
          <type name="Gtk.UIManager" c:type="GtkUIManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="889">a #GimpColorButton.</doc>
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update" c:identifier="gimp_color_button_get_update">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="789">Returns the color button's @continuous_update property.</doc>
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorbutton.c"
               line="795">the @continuous_update property.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="791">A #GimpColorButton widget.</doc>
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_alpha" c:identifier="gimp_color_button_has_alpha">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="746">Checks whether the @buttons shows transparency information.</doc>
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorbutton.c"
               line="752">%TRUE if the @button shows transparency information, %FALSE
otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="748">Pointer to a #GimpColorButton.</doc>
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_color" c:identifier="gimp_color_button_set_color">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="701">Sets the @button to the given @color.</doc>
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="703">Pointer to a #GimpColorButton.</doc>
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="704">Pointer to the new #GimpRGB color.</doc>
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color_config"
              c:identifier="gimp_color_button_set_color_config"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="854">Sets the color management configuration to use with this color button's
#GimpColorArea.</doc>
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="856">a #GimpColorButton widget.</doc>
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="857">a #GimpColorConfig object.</doc>
            <type name="Gimp.ColorConfig" c:type="GimpColorConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="gimp_color_button_set_title"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="652">Sets the @button dialog's title.</doc>
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="654">a #GimpColorButton.</doc>
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="655">the new title.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_type" c:identifier="gimp_color_button_set_type">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="767">Sets the @button to the given @type. See also gimp_color_area_set_type().</doc>
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="769">Pointer to a #GimpColorButton.</doc>
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="770">the new #GimpColorAreaType</doc>
            <type name="ColorAreaType" c:type="GimpColorAreaType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update" c:identifier="gimp_color_button_set_update">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="809">When set to %TRUE, the @button will emit the "color-changed"
continuously while the color is changed in the color selection
dialog.</doc>
        <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="811">A #GimpColorButton widget.</doc>
            <type name="ColorButton" c:type="GimpColorButton*"/>
          </instance-parameter>
          <parameter name="continuous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorbutton.c"
                 line="812">The new setting of the @continuous_update property.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="area-height"
                version="2.8"
                readable="0"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="283">The minimum height of the button's #GimpColorArea.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="area-width"
                version="2.8"
                readable="0"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="269">The minimum width of the button's #GimpColorArea.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="color"
                version="2.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="226">The color displayed in the button's color area.</doc>
        <type name="Gimp.RGB"/>
      </property>
      <property name="color-config"
                version="2.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="297">The #GimpColorConfig object used for the button's #GimpColorArea
and #GimpColorSelection.</doc>
        <type name="Gimp.ColorConfig"/>
      </property>
      <property name="continuous-update"
                version="2.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="255">The update policy of the color button.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="title"
                version="2.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="212">The title to be used for the color selection dialog.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="type"
                version="2.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorbutton.c"
             line="240">The type of the button's color area.</doc>
        <type name="ColorAreaType"/>
      </property>
      <field name="parent_instance">
        <type name="Button" c:type="GimpButton"/>
      </field>
      <field name="priv">
        <type name="ColorButtonPrivate" c:type="GimpColorButtonPrivate*"/>
      </field>
      <glib:signal name="color-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ColorButtonClass"
            c:type="GimpColorButtonClass"
            glib:is-gtype-struct-for="ColorButton">
      <source-position filename="libgimpwidgets/gimpcolorbutton.h" line="77"/>
      <field name="parent_class">
        <type name="ButtonClass" c:type="GimpButtonClass"/>
      </field>
      <field name="color_changed">
        <callback name="color_changed">
          <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="button" transfer-ownership="none">
              <type name="ColorButton" c:type="GimpColorButton*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_action_type">
        <callback name="get_action_type">
          <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </return-value>
          <parameters>
            <parameter name="button" transfer-ownership="none">
              <type name="ColorButton" c:type="GimpColorButton*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                           line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                           line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                           line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolorbutton.h"
                           line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorButtonPrivate"
            c:type="GimpColorButtonPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolorbutton.h" line="48"/>
    </record>
    <class name="ColorDisplay"
           c:symbol-prefix="color_display"
           c:type="GimpColorDisplay"
           parent="GObject.Object"
           glib:type-name="GimpColorDisplay"
           glib:get-type="gimp_color_display_get_type"
           glib:type-struct="ColorDisplayClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolordisplay.c"
           line="39">Functions and definitions for creating pluggable GIMP
display color correction modules.</doc>
      <source-position filename="libgimpwidgets/gimpcolordisplay.h" line="78"/>
      <implements name="Gimp.ConfigInterface"/>
      <virtual-method name="changed" invoker="changed">
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="configure" invoker="configure" version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplay.c"
             line="382">Creates a configuration widget for @display which can be added to a
container widget.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolordisplay.c"
               line="389">a new configuration widget for @display, or
         %NULL if no specific widget exists.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="384">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="convert_buffer"
                      invoker="convert_buffer"
                      version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplay.c"
             line="308">Converts all pixels in @area of @buffer.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="310">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="311">a #GeglBuffer</doc>
            <type name="Gegl.Buffer" c:type="GeglBuffer*"/>
          </parameter>
          <parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="312">area in @buffer to convert</doc>
            <type name="Gegl.Rectangle" c:type="GeglRectangle*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="changed" c:identifier="gimp_color_display_changed">
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="clone"
              c:identifier="gimp_color_display_clone"
              version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplay.c"
             line="290">Creates a copy of @display.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="83"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolordisplay.c"
               line="296">a duplicate of @display.</doc>
          <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="292">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="configure"
              c:identifier="gimp_color_display_configure"
              version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplay.c"
             line="382">Creates a configuration widget for @display which can be added to a
container widget.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="91"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolordisplay.c"
               line="389">a new configuration widget for @display, or
         %NULL if no specific widget exists.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="384">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="configure_reset"
              c:identifier="gimp_color_display_configure_reset">
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="convert_buffer"
              c:identifier="gimp_color_display_convert_buffer"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplay.c"
             line="308">Converts all pixels in @area of @buffer.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="310">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="311">a #GeglBuffer</doc>
            <type name="Gegl.Buffer" c:type="GeglBuffer*"/>
          </parameter>
          <parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="312">area in @buffer to convert</doc>
            <type name="Gegl.Rectangle" c:type="GeglRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_config"
              c:identifier="gimp_color_display_get_config"
              version="2.4">
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolordisplay.c"
               line="451">a pointer to the #GimpColorConfig
              object or %NULL.</doc>
          <type name="Gimp.ColorConfig" c:type="GimpColorConfig*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled" c:identifier="gimp_color_display_get_enabled">
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_managed"
              c:identifier="gimp_color_display_get_managed"
              version="2.4">
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolordisplay.c"
               line="468">a pointer to the #GimpColorManaged
              object or %NULL.</doc>
          <type name="Gimp.ColorManaged" c:type="GimpColorManaged*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_state"
              c:identifier="gimp_color_display_load_state"
              version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplay.c"
             line="338">Configures @display from the contents of the parasite @state.
@state must be a properly serialized configuration for a
#GimpColorDisplay, such as saved by gimp_color_display_save_state().</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="340">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="341">a #GimpParasite</doc>
            <type name="Gimp.Parasite" c:type="GimpParasite*"/>
          </parameter>
        </parameters>
      </method>
      <method name="save_state"
              c:identifier="gimp_color_display_save_state"
              version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplay.c"
             line="361">Saves the configuration state of @display as a new parasite.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="90"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolordisplay.c"
               line="367">a #GimpParasite</doc>
          <type name="Gimp.Parasite" c:type="GimpParasite*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="363">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_enabled" c:identifier="gimp_color_display_set_enabled">
        <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="color-config"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gimp.ColorConfig"/>
      </property>
      <property name="color-managed"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gimp.ColorManaged"/>
      </property>
      <property name="enabled"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ColorDisplayPrivate" c:type="GimpColorDisplayPrivate*"/>
      </field>
      <glib:signal name="changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ColorDisplayClass"
            c:type="GimpColorDisplayClass"
            glib:is-gtype-struct-for="ColorDisplay">
      <source-position filename="libgimpwidgets/gimpcolordisplay.h" line="78"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="name">
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="help_id">
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="icon_name">
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="convert_buffer">
        <callback name="convert_buffer">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolordisplay.c"
                   line="310">a #GimpColorDisplay</doc>
              <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolordisplay.c"
                   line="311">a #GeglBuffer</doc>
              <type name="Gegl.Buffer" c:type="GeglBuffer*"/>
            </parameter>
            <parameter name="area" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolordisplay.c"
                   line="312">area in @buffer to convert</doc>
              <type name="Gegl.Rectangle" c:type="GeglRectangle*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="configure">
        <callback name="configure">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="64"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplay.c"
                 line="389">a new configuration widget for @display, or
         %NULL if no specific widget exists.</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolordisplay.c"
                   line="384">a #GimpColorDisplay</doc>
              <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolordisplay.h"
                           line="77"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorDisplayPrivate"
            c:type="GimpColorDisplayPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolordisplay.h" line="42"/>
    </record>
    <class name="ColorDisplayStack"
           c:symbol-prefix="color_display_stack"
           c:type="GimpColorDisplayStack"
           parent="GObject.Object"
           glib:type-name="GimpColorDisplayStack"
           glib:get-type="gimp_color_display_stack_get_type"
           glib:type-struct="ColorDisplayStackClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolordisplaystack.c"
           line="36">A stack of color correction modules.</doc>
      <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                       line="76"/>
      <constructor name="new"
                   c:identifier="gimp_color_display_stack_new"
                   version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplaystack.c"
             line="170">Creates a new stack of color correction modules.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="80"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolordisplaystack.c"
               line="175">a newly allocated #GimpColorDisplayStack.</doc>
          <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
        </return-value>
      </constructor>
      <virtual-method name="added">
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="changed" invoker="changed" version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplaystack.c"
             line="222">Emit the "changed" signal of @stack.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="224">a #GimpColorDisplayStack</doc>
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="removed">
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="reordered">
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add"
              c:identifier="gimp_color_display_stack_add"
              version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplaystack.c"
             line="257">Add the color module @display to @stack.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="259">a #GimpColorDisplayStack</doc>
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="260">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </parameter>
        </parameters>
      </method>
      <method name="changed"
              c:identifier="gimp_color_display_stack_changed"
              version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplaystack.c"
             line="222">Emit the "changed" signal of @stack.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="224">a #GimpColorDisplayStack</doc>
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="clone"
              c:identifier="gimp_color_display_stack_clone"
              version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplaystack.c"
             line="185">Creates a copy of @stack with all its display color modules also
duplicated.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="81"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolordisplaystack.c"
               line="192">a duplicate of @stack.</doc>
          <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="187">a #GimpColorDisplayStack</doc>
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="convert_buffer"
              c:identifier="gimp_color_display_stack_convert_buffer"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplaystack.c"
             line="401">Runs all the stack's filters on all pixels in @area of @buffer.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="403">a #GimpColorDisplayStack</doc>
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="404">a #GeglBuffer</doc>
            <type name="Gegl.Buffer" c:type="GeglBuffer*"/>
          </parameter>
          <parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="405">area of @buffer to convert</doc>
            <type name="Gegl.Rectangle" c:type="GeglRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_filters"
              c:identifier="gimp_color_display_stack_get_filters"
              version="3.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplaystack.c"
             line="238">Gets the list of added color modules.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolordisplaystack.c"
               line="244">
            the list of @stack's display color modules.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ColorDisplay"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="240">a #GimpColorDisplayStack</doc>
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove"
              c:identifier="gimp_color_display_stack_remove"
              version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplaystack.c"
             line="294">Remove the color module @display from @stack.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="296">a #GimpColorDisplayStack</doc>
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="297">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder_down"
              c:identifier="gimp_color_display_stack_reorder_down"
              version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplaystack.c"
             line="364">Move the color module @display down in the filter list of @stack.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="366">a #GimpColorDisplayStack</doc>
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="367">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder_up"
              c:identifier="gimp_color_display_stack_reorder_up"
              version="2.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolordisplaystack.c"
             line="327">Move the color module @display up in the filter list of @stack.</doc>
        <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stack" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="329">a #GimpColorDisplayStack</doc>
            <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
          </instance-parameter>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolordisplaystack.c"
                 line="330">a #GimpColorDisplay</doc>
            <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ColorDisplayStackPrivate"
              c:type="GimpColorDisplayStackPrivate*"/>
      </field>
      <glib:signal name="added" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="ColorDisplay"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="removed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="ColorDisplay"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="reordered" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="ColorDisplay"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ColorDisplayStackClass"
            c:type="GimpColorDisplayStackClass"
            glib:is-gtype-struct-for="ColorDisplayStack">
      <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                       line="76"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="changed">
        <callback name="changed">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stack" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolordisplaystack.c"
                   line="224">a #GimpColorDisplayStack</doc>
              <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="added">
        <callback name="added">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stack" transfer-ownership="none">
              <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
            </parameter>
            <parameter name="display" transfer-ownership="none">
              <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
            </parameter>
            <parameter name="position" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="removed">
        <callback name="removed">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stack" transfer-ownership="none">
              <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
            </parameter>
            <parameter name="display" transfer-ownership="none">
              <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reordered">
        <callback name="reordered">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stack" transfer-ownership="none">
              <type name="ColorDisplayStack" c:type="GimpColorDisplayStack*"/>
            </parameter>
            <parameter name="display" transfer-ownership="none">
              <type name="ColorDisplay" c:type="GimpColorDisplay*"/>
            </parameter>
            <parameter name="position" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorDisplayStackPrivate"
            c:type="GimpColorDisplayStackPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                       line="42"/>
    </record>
    <class name="ColorHexEntry"
           c:symbol-prefix="color_hex_entry"
           c:type="GimpColorHexEntry"
           parent="Gtk.Entry"
           glib:type-name="GimpColorHexEntry"
           glib:get-type="gimp_color_hex_entry_get_type"
           glib:type-struct="ColorHexEntryClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorhexentry.c"
           line="41">Widget for entering a color's hex triplet.</doc>
      <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                       line="65"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <constructor name="new"
                   c:identifier="gimp_color_hex_entry_new"
                   version="2.2">
        <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorhexentry.c"
               line="197">a new #GimpColorHexEntry widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="color_changed">
        <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <type name="ColorHexEntry" c:type="GimpColorHexEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_color"
              c:identifier="gimp_color_hex_entry_get_color"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorhexentry.c"
             line="249">Retrieves the color value displayed by a #GimpColorHexEntry.</doc>
        <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorhexentry.c"
                 line="251">a #GimpColorHexEntry widget</doc>
            <type name="ColorHexEntry" c:type="GimpColorHexEntry*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorhexentry.c"
                 line="252">pointer to a #GimpRGB</doc>
            <type name="Gimp.RGB" c:type="GimpRGB*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color"
              c:identifier="gimp_color_hex_entry_set_color"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorhexentry.c"
             line="207">Sets the color displayed by a #GimpColorHexEntry. If the new color
is different to the previously set color, the "color-changed"
signal is emitted.</doc>
        <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorhexentry.c"
                 line="209">a #GimpColorHexEntry widget</doc>
            <type name="ColorHexEntry" c:type="GimpColorHexEntry*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorhexentry.c"
                 line="210">pointer to a #GimpRGB</doc>
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Entry" c:type="GtkEntry"/>
      </field>
      <field name="priv">
        <type name="ColorHexEntryPrivate" c:type="GimpColorHexEntryPrivate*"/>
      </field>
      <glib:signal name="color-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ColorHexEntryClass"
            c:type="GimpColorHexEntryClass"
            glib:is-gtype-struct-for="ColorHexEntry">
      <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                       line="65"/>
      <field name="parent_class">
        <type name="Gtk.EntryClass" c:type="GtkEntryClass"/>
      </field>
      <field name="color_changed">
        <callback name="color_changed">
          <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <type name="ColorHexEntry" c:type="GimpColorHexEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorHexEntryPrivate"
            c:type="GimpColorHexEntryPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                       line="40"/>
    </record>
    <class name="ColorNotebook"
           c:symbol-prefix="color_notebook"
           c:type="GimpColorNotebook"
           parent="ColorSelector"
           glib:type-name="GimpColorNotebook"
           glib:get-type="gimp_color_notebook_get_type"
           glib:type-struct="ColorNotebookClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolornotebook.c"
           line="42">The #GimpColorNotebook widget is an implementation of a
#GimpColorSelector. It serves as a container for
#GimpColorSelectors.</doc>
      <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                       line="68"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <method name="get_current_selector"
              c:identifier="gimp_color_notebook_get_current_selector"
              version="3.0">
        <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolornotebook.c"
               line="588">The active page's #GimpColorSelector.</doc>
          <type name="ColorSelector" c:type="GimpColorSelector*"/>
        </return-value>
        <parameters>
          <instance-parameter name="notebook" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolornotebook.c"
                 line="586">A #GimpColorNotebook widget.</doc>
            <type name="ColorNotebook" c:type="GimpColorNotebook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_notebook"
              c:identifier="gimp_color_notebook_get_notebook"
              version="3.0">
        <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolornotebook.c"
               line="555">The #GtkNotebook inside.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="notebook" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolornotebook.c"
                 line="553">A #GimpColorNotebook widget.</doc>
            <type name="ColorNotebook" c:type="GimpColorNotebook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selectors"
              c:identifier="gimp_color_notebook_get_selectors"
              version="3.0">
        <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolornotebook.c"
               line="571">The
              notebook's list of #GimpColorSelector's.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="ColorSelector"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="notebook" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolornotebook.c"
                 line="569">A #GimpColorNotebook widget.</doc>
            <type name="ColorNotebook" c:type="GimpColorNotebook*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_has_page"
              c:identifier="gimp_color_notebook_set_has_page">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolornotebook.c"
             line="504">This function adds and removed pages to / from a #GimpColorNotebook.
The @page_type passed must be a #GimpColorSelector subtype.</doc>
        <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolornotebook.c"
               line="513">The new page widget, if @has_page was
              %TRUE, or %NULL if @has_page was %FALSE.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="notebook" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolornotebook.c"
                 line="506">A #GimpColorNotebook widget.</doc>
            <type name="ColorNotebook" c:type="GimpColorNotebook*"/>
          </instance-parameter>
          <parameter name="page_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolornotebook.c"
                 line="507">The #GType of the notebook page to add or remove.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="has_page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolornotebook.c"
                 line="508">Whether the page should be added or removed.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ColorSelector" c:type="GimpColorSelector"/>
      </field>
      <field name="priv">
        <type name="ColorNotebookPrivate" c:type="GimpColorNotebookPrivate*"/>
      </field>
    </class>
    <record name="ColorNotebookClass"
            c:type="GimpColorNotebookClass"
            glib:is-gtype-struct-for="ColorNotebook">
      <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                       line="68"/>
      <field name="parent_class">
        <type name="ColorSelectorClass" c:type="GimpColorSelectorClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorNotebookPrivate"
            c:type="GimpColorNotebookPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                       line="45"/>
    </record>
    <class name="ColorProfileChooserDialog"
           c:symbol-prefix="color_profile_chooser_dialog"
           c:type="GimpColorProfileChooserDialog"
           parent="Gtk.FileChooserDialog"
           glib:type-name="GimpColorProfileChooserDialog"
           glib:get-type="gimp_color_profile_chooser_dialog_get_type"
           glib:type-struct="ColorProfileChooserDialogClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorprofilechooserdialog.c"
           line="44">A #GtkFileChooser subclass for selecting color profiles.</doc>
      <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                       line="59"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.FileChooser"/>
      <constructor name="new"
                   c:identifier="gimp_color_profile_chooser_dialog_new">
        <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <type name="Gtk.Window" c:type="GtkWindow*"/>
          </parameter>
          <parameter name="action" transfer-ownership="none">
            <type name="Gtk.FileChooserAction" c:type="GtkFileChooserAction"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="Gtk.FileChooserDialog" c:type="GtkFileChooserDialog"/>
      </field>
      <field name="priv">
        <type name="ColorProfileChooserDialogPrivate"
              c:type="GimpColorProfileChooserDialogPrivate*"/>
      </field>
    </class>
    <record name="ColorProfileChooserDialogClass"
            c:type="GimpColorProfileChooserDialogClass"
            glib:is-gtype-struct-for="ColorProfileChooserDialog">
      <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                       line="59"/>
      <field name="parent_class">
        <type name="Gtk.FileChooserDialogClass"
              c:type="GtkFileChooserDialogClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                           line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                           line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                           line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorProfileChooserDialogPrivate"
            c:type="GimpColorProfileChooserDialogPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                       line="37"/>
    </record>
    <class name="ColorProfileComboBox"
           c:symbol-prefix="color_profile_combo_box"
           c:type="GimpColorProfileComboBox"
           parent="Gtk.ComboBox"
           glib:type-name="GimpColorProfileComboBox"
           glib:get-type="gimp_color_profile_combo_box_get_type"
           glib:type-struct="ColorProfileComboBoxClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorprofilecombobox.c"
           line="38">A combo box for selecting color profiles.</doc>
      <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                       line="62"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new"
                   c:identifier="gimp_color_profile_combo_box_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorprofilecombobox.c"
             line="287">Create a combo-box widget for selecting color profiles. The combo-box
is populated from the file specified as @history. This filename is
typically created using the following code snippet:
&lt;informalexample&gt;&lt;programlisting&gt;
 gchar *history = gimp_personal_rc_file ("profilerc");
&lt;/programlisting&gt;&lt;/informalexample&gt;

The recommended @dialog type to use is a #GimpColorProfileChooserDialog.
If a #GimpColorProfileChooserDialog is passed, #GimpColorProfileComboBox
will take complete control over the dialog, which means connecting
a GtkDialog::response() callback by itself, and take care of destroying
the dialog when the combo box is destroyed.

If another type of @dialog is passed, this has to be implemented
separately.

See also gimp_color_profile_combo_box_new_with_model().</doc>
        <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorprofilecombobox.c"
               line="311">a new #GimpColorProfileComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="289">a #GtkDialog to present when the user selects the
          "Select color profile from disk..." item</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="history" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="291">#GFile of the profilerc (or %NULL for no history)</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_model"
                   c:identifier="gimp_color_profile_combo_box_new_with_model"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorprofilecombobox.c"
             line="333">This constructor is useful when you want to create several
combo-boxes for profile selection that all share the same
#GimpColorProfileStore. This is for example done in the
GIMP Preferences dialog.

See also gimp_color_profile_combo_box_new().</doc>
        <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorprofilecombobox.c"
               line="346">a new #GimpColorProfileComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="335">a #GtkDialog to present when the user selects the
         "Select color profile from disk..." item</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="337">a #GimpColorProfileStore object</doc>
            <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_file"
              c:identifier="gimp_color_profile_combo_box_add_file"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorprofilecombobox.c"
             line="363">This function delegates to the underlying
#GimpColorProfileStore. Please refer to the documentation of
gimp_color_profile_store_add_file() for details.</doc>
        <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="365">a #GimpColorProfileComboBox</doc>
            <type name="ColorProfileComboBox"
                  c:type="GimpColorProfileComboBox*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="366">file of the profile to add (or %NULL)</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="367">label to use for the profile
        (may only be %NULL if @file is %NULL)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_active_file"
              c:identifier="gimp_color_profile_combo_box_get_active_file"
              version="2.10">
        <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorprofilecombobox.c"
               line="450">The file of the currently selected
              color profile, release using g_object_unref() when it
              is not any longer needed.</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="448">a #GimpColorProfileComboBox</doc>
            <type name="ColorProfileComboBox"
                  c:type="GimpColorProfileComboBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_active_file"
              c:identifier="gimp_color_profile_combo_box_set_active_file"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorprofilecombobox.c"
             line="393">Selects a color profile from the @combo and makes it the active
item.  If the profile is not listed in the @combo, then it is added
with the given @label (or @file in case that @label is %NULL).</doc>
        <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="395">a #GimpColorProfileComboBox</doc>
            <type name="ColorProfileComboBox"
                  c:type="GimpColorProfileComboBox*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="396">file of the profile to select</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilecombobox.c"
                 line="397">label to use when adding a new entry (can be %NULL)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="dialog"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorprofilecombobox.c"
             line="102">#GtkDialog to present when the user selects the
"Select color profile from disk..." item.</doc>
        <type name="Gtk.Dialog"/>
      </property>
      <property name="model"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorprofilecombobox.c"
             line="118">Overrides the "model" property of the #GtkComboBox class.
#GimpColorProfileComboBox requires the model to be a
#GimpColorProfileStore.</doc>
        <type name="ColorProfileStore"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.ComboBox" c:type="GtkComboBox"/>
      </field>
      <field name="priv">
        <type name="ColorProfileComboBoxPrivate"
              c:type="GimpColorProfileComboBoxPrivate*"/>
      </field>
    </class>
    <record name="ColorProfileComboBoxClass"
            c:type="GimpColorProfileComboBoxClass"
            glib:is-gtype-struct-for="ColorProfileComboBox">
      <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                       line="62"/>
      <field name="parent_class">
        <type name="Gtk.ComboBoxClass" c:type="GtkComboBoxClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorProfileComboBoxPrivate"
            c:type="GimpColorProfileComboBoxPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                       line="39"/>
    </record>
    <class name="ColorProfileStore"
           c:symbol-prefix="color_profile_store"
           c:type="GimpColorProfileStore"
           parent="Gtk.ListStore"
           glib:type-name="GimpColorProfileStore"
           glib:get-type="gimp_color_profile_store_get_type"
           glib:type-struct="ColorProfileStoreClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorprofilestore.c"
           line="39">A #GtkListStore subclass that keep color profiles.</doc>
      <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                       line="62"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.TreeDragDest"/>
      <implements name="Gtk.TreeDragSource"/>
      <implements name="Gtk.TreeModel"/>
      <implements name="Gtk.TreeSortable"/>
      <constructor name="new"
                   c:identifier="gimp_color_profile_store_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorprofilestore.c"
             line="229">Creates a new #GimpColorProfileStore object and populates it with
last used profiles read from the file @history. The updated history
is written back to disk when the store is disposed.

The #GFile passed as @history is typically created using the
following code snippet:
&lt;informalexample&gt;&lt;programlisting&gt;
 gchar *history = gimp_personal_rc_file ("profilerc");
&lt;/programlisting&gt;&lt;/informalexample&gt;</doc>
        <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                         line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorprofilestore.c"
               line="243">a new #GimpColorProfileStore</doc>
          <type name="Gtk.ListStore" c:type="GtkListStore*"/>
        </return-value>
        <parameters>
          <parameter name="history" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilestore.c"
                 line="231">#GFile of the profilerc (or %NULL for no history)</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_file"
              c:identifier="gimp_color_profile_store_add_file"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorprofilestore.c"
             line="257">Adds a color profile item to the #GimpColorProfileStore. Items
added with this function will be kept at the top, separated from
the history of last used color profiles.

This function is often used to add a selectable item for the %NULL
file. If you pass %NULL for both @file and @label, the @label will
be set to the string "None" for you (and translated for the user).</doc>
        <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilestore.c"
                 line="259">a #GimpColorProfileStore</doc>
            <type name="ColorProfileStore" c:type="GimpColorProfileStore*"/>
          </instance-parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilestore.c"
                 line="260">#GFile of the profile to add (or %NULL)</doc>
            <type name="Gio.File" c:type="GFile*"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorprofilestore.c"
                 line="261">label to use for the profile
        (may only be %NULL if @file is %NULL)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="history"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorprofilestore.c"
             line="110">#GFile of the color history used to populate the profile store.</doc>
        <type name="Gio.File"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.ListStore" c:type="GtkListStore"/>
      </field>
      <field name="priv">
        <type name="ColorProfileStorePrivate"
              c:type="GimpColorProfileStorePrivate*"/>
      </field>
    </class>
    <record name="ColorProfileStoreClass"
            c:type="GimpColorProfileStoreClass"
            glib:is-gtype-struct-for="ColorProfileStore">
      <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                       line="62"/>
      <field name="parent_class">
        <type name="Gtk.ListStoreClass" c:type="GtkListStoreClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorProfileStorePrivate"
            c:type="GimpColorProfileStorePrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                       line="40"/>
    </record>
    <class name="ColorProfileView"
           c:symbol-prefix="color_profile_view"
           c:type="GimpColorProfileView"
           parent="Gtk.TextView"
           glib:type-name="GimpColorProfileView"
           glib:get-type="gimp_color_profile_view_get_type"
           glib:type-struct="ColorProfileViewClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorprofileview.c"
           line="37">A widget for viewing the properties of a #GimpColorProfile.</doc>
      <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                       line="58"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gimp_color_profile_view_new">
        <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="set_error"
              c:identifier="gimp_color_profile_view_set_error">
        <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="ColorProfileView" c:type="GimpColorProfileView*"/>
          </instance-parameter>
          <parameter name="message" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_profile"
              c:identifier="gimp_color_profile_view_set_profile">
        <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="ColorProfileView" c:type="GimpColorProfileView*"/>
          </instance-parameter>
          <parameter name="profile" transfer-ownership="none">
            <type name="Gimp.ColorProfile" c:type="GimpColorProfile*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.TextView" c:type="GtkTextView"/>
      </field>
      <field name="priv">
        <type name="ColorProfileViewPrivate"
              c:type="GimpColorProfileViewPrivate*"/>
      </field>
    </class>
    <record name="ColorProfileViewClass"
            c:type="GimpColorProfileViewClass"
            glib:is-gtype-struct-for="ColorProfileView">
      <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                       line="58"/>
      <field name="parent_class">
        <type name="Gtk.TextViewClass" c:type="GtkTextViewClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                           line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                           line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                           line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                           line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorProfileViewPrivate"
            c:type="GimpColorProfileViewPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                       line="36"/>
    </record>
    <record name="ColorScale" c:type="GimpColorScale" disguised="1">
      <source-position filename="libgimpwidgets/gimpwidgetstypes.h" line="49"/>
      <function name="entry_new" c:identifier="gimp_color_scale_entry_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpscaleentry.c"
             line="272">This function creates a #GtkLabel, a #GimpColorScale and a
#GtkSpinButton and attaches them to a 3-column #GtkGrid.</doc>
        <source-position filename="libgimpwidgets/gimpscaleentry.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="293">The #GtkSpinButton's #GtkAdjustment.</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </return-value>
        <parameters>
          <parameter name="grid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="274">The #GtkGrid the widgets will be attached to.</doc>
            <type name="Gtk.Grid" c:type="GtkGrid*"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="275">The column to start with.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="276">The row to attach the widgets.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="277">The text for the #GtkLabel which will appear
                      left of the #GtkHScale.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="scale_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="279">The minimum horizontal size of the #GtkHScale.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="spinbutton_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="280">The minimum horizontal size of the #GtkSpinButton.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="281">The initial value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="lower" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="282">The lower boundary.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="upper" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="283">The upper boundary.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="step_increment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="284">The step increment.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="page_increment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="285">The page increment.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="digits" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="286">The number of decimal digits.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="tooltip" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="287">A tooltip message for the scale and the spinbutton.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="help_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscaleentry.c"
                 line="288">The widgets' help_id (see gimp_help_set_help_data()).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <record name="ColorScales" c:type="GimpColorScales" disguised="1">
      <source-position filename="libgimpwidgets/gimpwidgetstypes.h" line="50"/>
    </record>
    <record name="ColorSelect" c:type="GimpColorSelect" disguised="1">
      <source-position filename="libgimpwidgets/gimpwidgetstypes.h" line="52"/>
    </record>
    <class name="ColorSelection"
           c:symbol-prefix="color_selection"
           c:type="GimpColorSelection"
           parent="Gtk.Box"
           glib:type-name="GimpColorSelection"
           glib:get-type="gimp_color_selection_get_type"
           glib:type-struct="ColorSelectionClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorselection.c"
           line="47">Widget for doing a color selection.</doc>
      <source-position filename="libgimpwidgets/gimpcolorselection.h"
                       line="67"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gimp_color_selection_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="378">Creates a new #GimpColorSelection widget.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorselection.c"
               line="383">The new #GimpColorSelection widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="color_changed" invoker="color_changed">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="551">Emits the "color-changed" signal.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="553">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="color_changed"
              c:identifier="gimp_color_selection_color_changed">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="551">Emits the "color-changed" signal.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="553">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_color" c:identifier="gimp_color_selection_get_color">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="470">This function returns the #GimpColorSelection's current color.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="472">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="473">Return location for the
            @selection's current @color.</doc>
            <type name="Gimp.RGB" c:type="GimpRGB*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_notebook"
              c:identifier="gimp_color_selection_get_notebook"
              version="3.0">
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorselection.c"
               line="599">The selection's #GimpColorNotebook.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="597">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_old_color"
              c:identifier="gimp_color_selection_get_old_color">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="509">This function returns the #GimpColorSelection's old color.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="511">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="512">Return location for the
            @selection's old @color.</doc>
            <type name="Gimp.RGB" c:type="GimpRGB*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_right_vbox"
              c:identifier="gimp_color_selection_get_right_vbox"
              version="3.0">
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorselection.c"
               line="615">The selection's right #GtkBox which
         contains the color scales.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="613">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_alpha"
              c:identifier="gimp_color_selection_get_show_alpha">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="428">Returns the @selection's @show_alpha property.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorselection.c"
               line="434">%TRUE if the #GimpColorSelection has alpha controls.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="430">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="gimp_color_selection_reset">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="531">Sets the #GimpColorSelection's current color to its old color.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="533">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_color" c:identifier="gimp_color_selection_set_color">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="444">Sets the #GimpColorSelection's current color to the new @color.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="446">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="447">The @color to set as current color.</doc>
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_config"
              c:identifier="gimp_color_selection_set_config"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="565">Sets the color management configuration to use with this color selection.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="567">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="568">A #GimpColorConfig object.</doc>
            <type name="Gimp.ColorConfig" c:type="GimpColorConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_old_color"
              c:identifier="gimp_color_selection_set_old_color">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="488">Sets the #GimpColorSelection's old color.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="490">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="491">The @color to set as old color.</doc>
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_alpha"
              c:identifier="gimp_color_selection_set_show_alpha">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselection.c"
             line="391">Sets the @show_alpha property of the @selection widget.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselection.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="393">A #GimpColorSelection widget.</doc>
            <type name="ColorSelection" c:type="GimpColorSelection*"/>
          </instance-parameter>
          <parameter name="show_alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselection.c"
                 line="394">The new @show_alpha setting.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="config"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="Gimp.ColorConfig"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="ColorSelectionPrivate"
              c:type="GimpColorSelectionPrivate*"/>
      </field>
      <glib:signal name="color-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ColorSelectionClass"
            c:type="GimpColorSelectionClass"
            glib:is-gtype-struct-for="ColorSelection">
      <source-position filename="libgimpwidgets/gimpcolorselection.h"
                       line="67"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="color_changed">
        <callback name="color_changed">
          <source-position filename="libgimpwidgets/gimpcolorselection.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selection" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselection.c"
                   line="553">A #GimpColorSelection widget.</doc>
              <type name="ColorSelection" c:type="GimpColorSelection*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolorselection.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolorselection.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolorselection.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolorselection.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolorselection.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolorselection.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolorselection.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolorselection.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ColorSelectionPrivate"
            c:type="GimpColorSelectionPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolorselection.h"
                       line="42"/>
    </record>
    <class name="ColorSelector"
           c:symbol-prefix="color_selector"
           c:type="GimpColorSelector"
           parent="Gtk.Box"
           glib:type-name="GimpColorSelector"
           glib:get-type="gimp_color_selector_get_type"
           glib:type-struct="ColorSelectorClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcolorselector.c"
           line="41">Functions and definitions for creating pluggable GIMP color
selector modules.</doc>
      <source-position filename="libgimpwidgets/gimpcolorselector.h"
                       line="127"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gimp_color_selector_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="172">Creates a new #GimpColorSelector widget of type @selector_type.

Note that this is mostly internal API to be used by other widgets.

Please use gimp_color_selection_new() for the "GIMP-typical" color
selection widget. Also see gimp_color_button_new().

Retunn value: the new #GimpColorSelector widget.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="selector_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="174">The #GType of the selector to create.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="rgb" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="175">The initial color to be edited.</doc>
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
          <parameter name="hsv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="176">The same color in HSV.</doc>
            <type name="Gimp.HSV" c:type="const GimpHSV*"/>
          </parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="177">The selector's initial channel.</doc>
            <type name="ColorSelectorChannel"
                  c:type="GimpColorSelectorChannel"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="channel_changed">
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <type name="ColorSelectorChannel"
                  c:type="GimpColorSelectorChannel"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="color_changed">
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="rgb" transfer-ownership="none">
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
          <parameter name="hsv" transfer-ownership="none">
            <type name="Gimp.HSV" c:type="const GimpHSV*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="model_visible_changed">
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <type name="ColorSelectorModel" c:type="GimpColorSelectorModel"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_channel" invoker="set_channel">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="401">Sets the @channel property of the @selector widget.

Changes between displayed channels if this @selector instance has
the ability to show different channels.
This will also update the color model if needed.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="403">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="404">The new @channel setting.</doc>
            <type name="ColorSelectorChannel"
                  c:type="GimpColorSelectorChannel"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_color" invoker="set_color">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="347">Sets the color shown in the @selector widget.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="349">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="rgb" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="350">The new color.</doc>
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
          <parameter name="hsv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="351">The same color in HSV.</doc>
            <type name="Gimp.HSV" c:type="const GimpHSV*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_config" invoker="set_config" version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="619">Sets the color management configuration to use with this color selector.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="621">a #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="622">a #GimpColorConfig object.</doc>
            <type name="Gimp.ColorConfig" c:type="GimpColorConfig*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_model_visible"
                      invoker="set_model_visible"
                      version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="503">Sets the @model visible/invisible on the @selector widget.

Toggles visibility of displayed models if this @selector instance
has the ability to show different color models.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="505">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="506">The affected #GimpColorSelectorModel.</doc>
            <type name="ColorSelectorModel" c:type="GimpColorSelectorModel"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="507">The new visible setting.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_show_alpha" invoker="set_show_alpha">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="303">Sets the @show_alpha property of the @selector widget.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="305">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="show_alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="306">The new @show_alpha setting.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_toggles_sensitive"
                      invoker="set_toggles_sensitive">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="256">Sets the @sensitive property of the @selector's toggles.

This function has no effect if this @selector instance has no
toggles to switch channels.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="258">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="259">The new @sensitive setting.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_toggles_visible" invoker="set_toggles_visible">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="209">Sets the @visible property of the @selector's toggles.

This function has no effect if this @selector instance has no
toggles to switch channels.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="211">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="212">The new @visible setting.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="emit_channel_changed"
              c:identifier="gimp_color_selector_emit_channel_changed">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="581">Emits the "channel-changed" signal.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="167"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="583">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="emit_color_changed"
              c:identifier="gimp_color_selector_emit_color_changed">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="566">Emits the "color-changed" signal.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="166"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="568">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="emit_model_visible_changed"
              c:identifier="gimp_color_selector_emit_model_visible_changed"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="596">Emits the "model-visible-changed" signal.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="598">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="599">The #GimpColorSelectorModel where visibility changed.</doc>
            <type name="ColorSelectorModel" c:type="GimpColorSelectorModel"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_channel"
              c:identifier="gimp_color_selector_get_channel"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="483">Returns the @selector's current channel.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="158"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorselector.c"
               line="489">The #GimpColorSelectorChannel currently shown by the
@selector.</doc>
          <type name="ColorSelectorChannel" c:type="GimpColorSelectorChannel"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="485">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_color"
              c:identifier="gimp_color_selector_get_color"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="377">Retrieves the color shown in the @selector widget.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="151"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="379">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="rgb"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="380">Return location for the color.</doc>
            <type name="Gimp.RGB" c:type="GimpRGB*"/>
          </parameter>
          <parameter name="hsv"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="381">Return location for the same same
           color in HSV.</doc>
            <type name="Gimp.HSV" c:type="GimpHSV*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_model_visible"
              c:identifier="gimp_color_selector_get_model_visible"
              version="2.10">
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorselector.c"
               line="549">whether @model is visible in @selector.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="546">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="547">The #GimpColorSelectorModel.</doc>
            <type name="ColorSelectorModel" c:type="GimpColorSelectorModel"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_show_alpha"
              c:identifier="gimp_color_selector_get_show_alpha"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="329">Returns the @selector's @show_alpha property.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorselector.c"
               line="335">%TRUE if the #GimpColorSelector has alpha controls.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="331">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_toggles_sensitive"
              c:identifier="gimp_color_selector_get_toggles_sensitive"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="285">Returns the @sensitive property of the @selector's toggles.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorselector.c"
               line="291">%TRUE if the #GimpColorSelector's toggles are sensitive.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="287">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_toggles_visible"
              c:identifier="gimp_color_selector_get_toggles_visible"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="238">Returns the @visible property of the @selector's toggles.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcolorselector.c"
               line="244">%TRUE if the #GimpColorSelector's toggles are visible.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="240">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_channel"
              c:identifier="gimp_color_selector_set_channel">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="401">Sets the @channel property of the @selector widget.

Changes between displayed channels if this @selector instance has
the ability to show different channels.
This will also update the color model if needed.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="155"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="403">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="404">The new @channel setting.</doc>
            <type name="ColorSelectorChannel"
                  c:type="GimpColorSelectorChannel"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color" c:identifier="gimp_color_selector_set_color">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="347">Sets the color shown in the @selector widget.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="349">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="rgb" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="350">The new color.</doc>
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
          <parameter name="hsv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="351">The same color in HSV.</doc>
            <type name="Gimp.HSV" c:type="const GimpHSV*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_config"
              c:identifier="gimp_color_selector_set_config"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="619">Sets the color management configuration to use with this color selector.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="621">a #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="622">a #GimpColorConfig object.</doc>
            <type name="Gimp.ColorConfig" c:type="GimpColorConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model_visible"
              c:identifier="gimp_color_selector_set_model_visible"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="503">Sets the @model visible/invisible on the @selector widget.

Toggles visibility of displayed models if this @selector instance
has the ability to show different color models.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="505">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="506">The affected #GimpColorSelectorModel.</doc>
            <type name="ColorSelectorModel" c:type="GimpColorSelectorModel"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="507">The new visible setting.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_alpha"
              c:identifier="gimp_color_selector_set_show_alpha">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="303">Sets the @show_alpha property of the @selector widget.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="305">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="show_alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="306">The new @show_alpha setting.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_toggles_sensitive"
              c:identifier="gimp_color_selector_set_toggles_sensitive">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="256">Sets the @sensitive property of the @selector's toggles.

This function has no effect if this @selector instance has no
toggles to switch channels.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="140"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="258">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="259">The new @sensitive setting.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_toggles_visible"
              c:identifier="gimp_color_selector_set_toggles_visible">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcolorselector.c"
             line="209">Sets the @visible property of the @selector's toggles.

This function has no effect if this @selector instance has no
toggles to switch channels.</doc>
        <source-position filename="libgimpwidgets/gimpcolorselector.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="211">A #GimpColorSelector widget.</doc>
            <type name="ColorSelector" c:type="GimpColorSelector*"/>
          </instance-parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpcolorselector.c"
                 line="212">The new @visible setting.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="ColorSelectorPrivate" c:type="GimpColorSelectorPrivate*"/>
      </field>
      <field name="toggles_visible">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="toggles_sensitive">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="show_alpha">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="rgb">
        <type name="Gimp.RGB" c:type="GimpRGB"/>
      </field>
      <field name="hsv">
        <type name="Gimp.HSV" c:type="GimpHSV"/>
      </field>
      <field name="channel">
        <type name="ColorSelectorChannel" c:type="GimpColorSelectorChannel"/>
      </field>
      <glib:signal name="channel-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="ColorSelectorChannel"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="color-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gimp.RGB"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="Gimp.RGB"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="model-visible-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="ColorSelectorModel"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <enumeration name="ColorSelectorChannel"
                 glib:type-name="GimpColorSelectorChannel"
                 glib:get-type="gimp_color_selector_channel_get_type"
                 c:type="GimpColorSelectorChannel">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsenums.h"
           line="90">An enum to specify the types of color channels edited in
#GimpColorSelector widgets.</doc>
      <member name="hue"
              value="0"
              c:identifier="GIMP_COLOR_SELECTOR_HUE"
              glib:nick="hue">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="92">the hue channel</doc>
      </member>
      <member name="saturation"
              value="1"
              c:identifier="GIMP_COLOR_SELECTOR_SATURATION"
              glib:nick="saturation">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="93">the saturation channel</doc>
      </member>
      <member name="value"
              value="2"
              c:identifier="GIMP_COLOR_SELECTOR_VALUE"
              glib:nick="value">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="94">the value channel</doc>
      </member>
      <member name="red"
              value="3"
              c:identifier="GIMP_COLOR_SELECTOR_RED"
              glib:nick="red">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="95">the red channel</doc>
      </member>
      <member name="green"
              value="4"
              c:identifier="GIMP_COLOR_SELECTOR_GREEN"
              glib:nick="green">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="96">the green channel</doc>
      </member>
      <member name="blue"
              value="5"
              c:identifier="GIMP_COLOR_SELECTOR_BLUE"
              glib:nick="blue">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="97">the blue channel</doc>
      </member>
      <member name="alpha"
              value="6"
              c:identifier="GIMP_COLOR_SELECTOR_ALPHA"
              glib:nick="alpha">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="98">the alpha channel</doc>
      </member>
      <member name="lch_lightness"
              value="7"
              c:identifier="GIMP_COLOR_SELECTOR_LCH_LIGHTNESS"
              glib:nick="lch-lightness">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="99">the lightness channel</doc>
      </member>
      <member name="lch_chroma"
              value="8"
              c:identifier="GIMP_COLOR_SELECTOR_LCH_CHROMA"
              glib:nick="lch-chroma">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="100">the chroma channel</doc>
      </member>
      <member name="lch_hue"
              value="9"
              c:identifier="GIMP_COLOR_SELECTOR_LCH_HUE"
              glib:nick="lch-hue">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="101">the hue channel</doc>
      </member>
    </enumeration>
    <record name="ColorSelectorClass"
            c:type="GimpColorSelectorClass"
            glib:is-gtype-struct-for="ColorSelector">
      <source-position filename="libgimpwidgets/gimpcolorselector.h"
                       line="127"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="name">
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="help_id">
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="icon_name">
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="set_toggles_visible">
        <callback name="set_toggles_visible">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="211">A #GimpColorSelector widget.</doc>
              <type name="ColorSelector" c:type="GimpColorSelector*"/>
            </parameter>
            <parameter name="visible" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="212">The new @visible setting.</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_toggles_sensitive">
        <callback name="set_toggles_sensitive">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="258">A #GimpColorSelector widget.</doc>
              <type name="ColorSelector" c:type="GimpColorSelector*"/>
            </parameter>
            <parameter name="sensitive" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="259">The new @sensitive setting.</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_show_alpha">
        <callback name="set_show_alpha">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="305">A #GimpColorSelector widget.</doc>
              <type name="ColorSelector" c:type="GimpColorSelector*"/>
            </parameter>
            <parameter name="show_alpha" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="306">The new @show_alpha setting.</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_color">
        <callback name="set_color">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="349">A #GimpColorSelector widget.</doc>
              <type name="ColorSelector" c:type="GimpColorSelector*"/>
            </parameter>
            <parameter name="rgb" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="350">The new color.</doc>
              <type name="Gimp.RGB" c:type="const GimpRGB*"/>
            </parameter>
            <parameter name="hsv" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="351">The same color in HSV.</doc>
              <type name="Gimp.HSV" c:type="const GimpHSV*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_channel">
        <callback name="set_channel">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="403">A #GimpColorSelector widget.</doc>
              <type name="ColorSelector" c:type="GimpColorSelector*"/>
            </parameter>
            <parameter name="channel" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="404">The new @channel setting.</doc>
              <type name="ColorSelectorChannel"
                    c:type="GimpColorSelectorChannel"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_model_visible">
        <callback name="set_model_visible">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="505">A #GimpColorSelector widget.</doc>
              <type name="ColorSelector" c:type="GimpColorSelector*"/>
            </parameter>
            <parameter name="model" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="506">The affected #GimpColorSelectorModel.</doc>
              <type name="ColorSelectorModel" c:type="GimpColorSelectorModel"/>
            </parameter>
            <parameter name="visible" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="507">The new visible setting.</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_config">
        <callback name="set_config">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="105"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="621">a #GimpColorSelector widget.</doc>
              <type name="ColorSelector" c:type="GimpColorSelector*"/>
            </parameter>
            <parameter name="config" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimpcolorselector.c"
                   line="622">a #GimpColorConfig object.</doc>
              <type name="Gimp.ColorConfig" c:type="GimpColorConfig*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="color_changed">
        <callback name="color_changed">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="109"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <type name="ColorSelector" c:type="GimpColorSelector*"/>
            </parameter>
            <parameter name="rgb" transfer-ownership="none">
              <type name="Gimp.RGB" c:type="const GimpRGB*"/>
            </parameter>
            <parameter name="hsv" transfer-ownership="none">
              <type name="Gimp.HSV" c:type="const GimpHSV*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="channel_changed">
        <callback name="channel_changed">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="112"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <type name="ColorSelector" c:type="GimpColorSelector*"/>
            </parameter>
            <parameter name="channel" transfer-ownership="none">
              <type name="ColorSelectorChannel"
                    c:type="GimpColorSelectorChannel"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="model_visible_changed">
        <callback name="model_visible_changed">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="114"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <type name="ColorSelector" c:type="GimpColorSelector*"/>
            </parameter>
            <parameter name="model" transfer-ownership="none">
              <type name="ColorSelectorModel" c:type="GimpColorSelectorModel"/>
            </parameter>
            <parameter name="visible" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="119"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="120"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="121"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="122"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="123"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="124"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="125"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpcolorselector.h"
                           line="126"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ColorSelectorModel"
                 version="2.10"
                 glib:type-name="GimpColorSelectorModel"
                 glib:get-type="gimp_color_selector_model_get_type"
                 c:type="GimpColorSelectorModel">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsenums.h"
           line="125">An enum to specify the types of color spaces edited in
#GimpColorSelector widgets.</doc>
      <member name="rgb"
              value="0"
              c:identifier="GIMP_COLOR_SELECTOR_MODEL_RGB"
              glib:nick="rgb">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="127">RGB color model</doc>
      </member>
      <member name="lch"
              value="1"
              c:identifier="GIMP_COLOR_SELECTOR_MODEL_LCH"
              glib:nick="lch">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="128">CIE LCh color model</doc>
      </member>
      <member name="hsv"
              value="2"
              c:identifier="GIMP_COLOR_SELECTOR_MODEL_HSV"
              glib:nick="hsv">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="129">HSV color model</doc>
      </member>
    </enumeration>
    <record name="ColorSelectorPrivate"
            c:type="GimpColorSelectorPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpcolorselector.h"
                       line="62"/>
    </record>
    <record name="Controller" c:type="GimpController" disguised="1">
      <source-position filename="libgimpwidgets/gimpwidgetstypes.h" line="54"/>
    </record>
    <function-macro name="DIALOG"
                    c:identifier="GIMP_DIALOG"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpdialog.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DIALOG_CLASS"
                    c:identifier="GIMP_DIALOG_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpdialog.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DIALOG_GET_CLASS"
                    c:identifier="GIMP_DIALOG_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpdialog.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAWABLE_COMBO_BOX"
                    c:identifier="GIMP_DRAWABLE_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimp/gimpitemcombobox.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAWABLE_PREVIEW"
                    c:identifier="GIMP_DRAWABLE_PREVIEW"
                    introspectable="0">
      <source-position filename="libgimp/gimpdrawablepreview.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAWABLE_PREVIEW_CLASS"
                    c:identifier="GIMP_DRAWABLE_PREVIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpdrawablepreview.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAWABLE_PREVIEW_GET_CLASS"
                    c:identifier="GIMP_DRAWABLE_PREVIEW_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpdrawablepreview.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Dialog"
           c:symbol-prefix="dialog"
           c:type="GimpDialog"
           parent="Gtk.Dialog"
           glib:type-name="GimpDialog"
           glib:get-type="gimp_dialog_get_type"
           glib:type-struct="DialogClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpdialog.c"
           line="36">Constructors for #GtkDialog's and action_areas as well as other
dialog-related stuff.</doc>
      <source-position filename="libgimpwidgets/gimpdialog.h" line="65"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="gimp_dialog_new"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpdialog.c"
             line="348">Creates a new @GimpDialog widget.

This function simply packs the action_area arguments passed in "..."
into a @va_list variable and passes everything to gimp_dialog_new_valist().

For a description of the format of the @va_list describing the
action_area buttons see gtk_dialog_new_with_buttons().</doc>
        <source-position filename="libgimpwidgets/gimpdialog.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpdialog.c"
               line="369">A #GimpDialog.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="350">The dialog's title which will be set with
               gtk_window_set_title().</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="role" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="352">The dialog's @role which will be set with
               gtk_window_set_role().</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="parent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="354">The @parent widget of this dialog.</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="355">The @flags (see the #GtkDialog documentation).</doc>
            <type name="Gtk.DialogFlags" c:type="GtkDialogFlags"/>
          </parameter>
          <parameter name="help_func" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="356">The function which will be called if the user presses "F1".</doc>
            <type name="HelpFunc" c:type="GimpHelpFunc"/>
          </parameter>
          <parameter name="help_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="357">The help_id which will be passed to @help_func.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="358">A %NULL-terminated @va_list destribing the
               action_area buttons.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_valist"
                   c:identifier="gimp_dialog_new_valist"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpdialog.c"
             line="399">Creates a new @GimpDialog widget. If a GtkWindow is specified as
@parent then the dialog will be made transient for this window.

For a description of the format of the @va_list describing the
action_area buttons see gtk_dialog_new_with_buttons().</doc>
        <source-position filename="libgimpwidgets/gimpdialog.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpdialog.c"
               line="417">A #GimpDialog.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="401">The dialog's title which will be set with
               gtk_window_set_title().</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="role" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="403">The dialog's @role which will be set with
               gtk_window_set_role().</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="405">The @parent widget of this dialog or %NULL.</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="406">The @flags (see the #GtkDialog documentation).</doc>
            <type name="Gtk.DialogFlags" c:type="GtkDialogFlags"/>
          </parameter>
          <parameter name="help_func" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="407">The function which will be called if the user presses "F1".</doc>
            <type name="HelpFunc" c:type="GimpHelpFunc"/>
          </parameter>
          <parameter name="help_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="408">The help_id which will be passed to @help_func.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="409">A @va_list destribing the action_area buttons.</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_button" c:identifier="gimp_dialog_add_button">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpdialog.c"
             line="462">This function is essentially the same as gtk_dialog_add_button()
except it ensures there is only one help button and automatically
sets the RESPONSE_OK widget as the default response.</doc>
        <source-position filename="libgimpwidgets/gimpdialog.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpdialog.c"
               line="472">the button widget that was added.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="464">The @dialog to add a button to.</doc>
            <type name="Dialog" c:type="GimpDialog*"/>
          </instance-parameter>
          <parameter name="button_text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="465">text of button, or stock ID.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="response_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="466">response ID for the button.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_buttons"
              c:identifier="gimp_dialog_add_buttons"
              introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpdialog.c"
             line="520">This function is essentially the same as gtk_dialog_add_buttons()
except it calls gimp_dialog_add_button() instead of gtk_dialog_add_button()</doc>
        <source-position filename="libgimpwidgets/gimpdialog.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="522">The @dialog to add buttons to.</doc>
            <type name="Dialog" c:type="GimpDialog*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="523">button_text-response_id pairs.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="add_buttons_valist"
              c:identifier="gimp_dialog_add_buttons_valist"
              introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpdialog.c"
             line="541">This function is essentially the same as gimp_dialog_add_buttons()
except it takes a va_list instead of '...'</doc>
        <source-position filename="libgimpwidgets/gimpdialog.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="543">The @dialog to add buttons to.</doc>
            <type name="Dialog" c:type="GimpDialog*"/>
          </instance-parameter>
          <parameter name="args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="544">The buttons as va_list.</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </method>
      <method name="run" c:identifier="gimp_dialog_run">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpdialog.c"
             line="618">This function does exactly the same as gtk_dialog_run() except it
does not make the dialog modal while the #GMainLoop is running.</doc>
        <source-position filename="libgimpwidgets/gimpdialog.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpdialog.c"
               line="625">response ID</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="620">a #GimpDialog</doc>
            <type name="Dialog" c:type="GimpDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_alternative_button_order_from_array"
              c:identifier="gimp_dialog_set_alternative_button_order_from_array"
              version="3.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpdialog.c"
             line="677">Reorder @dialog's buttons if "gtk-alternative-button-order" setting
is set to TRUE. This is mostly a wrapper around the GTK function
gtk_dialog_set_alternative_button_order(), except it won't output a
deprecation warning.</doc>
        <source-position filename="libgimpwidgets/gimpdialog.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="679">The #GimpDialog</doc>
            <type name="Dialog" c:type="GimpDialog*"/>
          </instance-parameter>
          <parameter name="n_buttons" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="680">The size of @order</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="order" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpdialog.c"
                 line="681">array of buttons' response ids.</doc>
            <array length="0" zero-terminated="0" c:type="gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <property name="help-func"
                version="2.2"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="help-id"
                version="2.2"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="parent"
                version="2.8"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Dialog" c:type="GtkDialog"/>
      </field>
      <field name="priv">
        <type name="DialogPrivate" c:type="GimpDialogPrivate*"/>
      </field>
    </class>
    <record name="DialogClass"
            c:type="GimpDialogClass"
            glib:is-gtype-struct-for="Dialog">
      <source-position filename="libgimpwidgets/gimpdialog.h" line="65"/>
      <field name="parent_class">
        <type name="Gtk.DialogClass" c:type="GtkDialogClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpdialog.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpdialog.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpdialog.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpdialog.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpdialog.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpdialog.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpdialog.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpdialog.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DialogPrivate" c:type="GimpDialogPrivate" disguised="1">
      <source-position filename="libgimpwidgets/gimpdialog.h" line="42"/>
    </record>
    <class name="DrawableComboBox"
           c:symbol-prefix="drawable_combo_box"
           c:type="GimpDrawableComboBox"
           parent="IntComboBox"
           glib:type-name="GimpDrawableComboBox"
           glib:get-type="gimp_drawable_combo_box_get_type">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new"
                   c:identifier="gimp_drawable_combo_box_new"
                   version="2.2">
        <doc xml:space="preserve"
             filename="libgimp/gimpitemcombobox.c"
             line="168">Creates a new #GimpIntComboBox filled with all currently opened
drawables. If a @constraint function is specified, it is called for
each drawable and only if the function returns %TRUE, the drawable
is added to the combobox.

You should use gimp_int_combo_box_connect() to initialize and connect
the combo.  Use gimp_int_combo_box_set_active() to get the active
drawable ID and gimp_int_combo_box_get_active() to retrieve the ID
of the selected drawable.</doc>
        <source-position filename="libgimp/gimpitemcombobox.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpitemcombobox.c"
               line="184">a new #GimpIntComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="constraint"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="170">a #GimpItemConstraintFunc or %NULL</doc>
            <type name="ItemConstraintFunc" c:type="GimpItemConstraintFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="171">a pointer that is passed to @constraint</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="data_destroy"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="172">Destroy function for @data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="DrawablePreview"
           c:symbol-prefix="drawable_preview"
           c:type="GimpDrawablePreview"
           parent="ScrolledPreview"
           glib:type-name="GimpDrawablePreview"
           glib:get-type="gimp_drawable_preview_get_type"
           glib:type-struct="DrawablePreviewClass">
      <doc xml:space="preserve"
           filename="libgimp/gimpdrawablepreview.c"
           line="35">A widget providing a preview of a #GimpDrawable.</doc>
      <source-position filename="libgimp/gimpdrawablepreview.h" line="65"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new_from_drawable"
                   c:identifier="gimp_drawable_preview_new_from_drawable"
                   version="2.10">
        <doc xml:space="preserve"
             filename="libgimp/gimpdrawablepreview.c"
             line="594">Creates a new #GimpDrawablePreview widget for @drawable.</doc>
        <source-position filename="libgimp/gimpdrawablepreview.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpdrawablepreview.c"
               line="600">A pointer to the new #GimpDrawablePreview widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpdrawablepreview.c"
                 line="596">a drawable</doc>
            <type name="Gimp.Drawable" c:type="GimpDrawable*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_drawable"
              c:identifier="gimp_drawable_preview_get_drawable"
              version="2.10">
        <source-position filename="libgimp/gimpdrawablepreview.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpdrawablepreview.c"
               line="619">the drawable that has been passed to
         gimp_drawable_preview_new_from_drawable().</doc>
          <type name="Gimp.Drawable" c:type="GimpDrawable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpdrawablepreview.c"
                 line="617">a #GimpDrawablePreview widget</doc>
            <type name="DrawablePreview" c:type="GimpDrawablePreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="drawable"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gimp.Drawable"/>
      </property>
      <field name="parent_instance">
        <type name="ScrolledPreview" c:type="GimpScrolledPreview"/>
      </field>
      <field name="priv">
        <type name="DrawablePreviewPrivate"
              c:type="GimpDrawablePreviewPrivate*"/>
      </field>
    </class>
    <record name="DrawablePreviewClass"
            c:type="GimpDrawablePreviewClass"
            glib:is-gtype-struct-for="DrawablePreview">
      <source-position filename="libgimp/gimpdrawablepreview.h" line="65"/>
      <field name="parent_class">
        <type name="ScrolledPreviewClass" c:type="GimpScrolledPreviewClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimpdrawablepreview.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimpdrawablepreview.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimpdrawablepreview.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimpdrawablepreview.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimpdrawablepreview.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimpdrawablepreview.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimpdrawablepreview.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimpdrawablepreview.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DrawablePreviewPrivate"
            c:type="GimpDrawablePreviewPrivate"
            disguised="1">
      <source-position filename="libgimp/gimpdrawablepreview.h" line="42"/>
    </record>
    <function-macro name="ENUM_COMBO_BOX"
                    c:identifier="GIMP_ENUM_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumcombobox.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENUM_COMBO_BOX_CLASS"
                    c:identifier="GIMP_ENUM_COMBO_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumcombobox.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENUM_COMBO_BOX_GET_CLASS"
                    c:identifier="GIMP_ENUM_COMBO_BOX_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumcombobox.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENUM_LABEL"
                    c:identifier="GIMP_ENUM_LABEL"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumlabel.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENUM_LABEL_CLASS"
                    c:identifier="GIMP_ENUM_LABEL_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumlabel.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENUM_LABEL_GET_CLASS"
                    c:identifier="GIMP_ENUM_LABEL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumlabel.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENUM_STORE"
                    c:identifier="GIMP_ENUM_STORE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumstore.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENUM_STORE_CLASS"
                    c:identifier="GIMP_ENUM_STORE_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumstore.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ENUM_STORE_GET_CLASS"
                    c:identifier="GIMP_ENUM_STORE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumstore.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="EnumComboBox"
           c:symbol-prefix="enum_combo_box"
           c:type="GimpEnumComboBox"
           parent="IntComboBox"
           glib:type-name="GimpEnumComboBox"
           glib:get-type="gimp_enum_combo_box_get_type"
           glib:type-struct="EnumComboBoxClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpenumcombobox.c"
           line="36">A #GtkComboBox subclass for selecting an enum value.</doc>
      <source-position filename="libgimpwidgets/gimpenumcombobox.h" line="64"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new"
                   c:identifier="gimp_enum_combo_box_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumcombobox.c"
             line="132">Creates a #GtkComboBox readily filled with all enum values from a
given @enum_type. The enum needs to be registered to the type
system. It should also have %GimpEnumDesc descriptions registered
that contain translatable value names. This is the case for the
enums used in the GIMP PDB functions.

This is just a convenience function. If you need more control over
the enum values that appear in the combo_box, you can create your
own #GimpEnumStore and use gimp_enum_combo_box_new_with_model().</doc>
        <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumcombobox.c"
               line="146">a new #GimpEnumComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="enum_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumcombobox.c"
                 line="134">the #GType of an enum.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_model"
                   c:identifier="gimp_enum_combo_box_new_with_model"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumcombobox.c"
             line="169">Creates a #GtkComboBox for the given @enum_store.</doc>
        <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumcombobox.c"
               line="175">a new #GimpEnumComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="enum_store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumcombobox.c"
                 line="171">a #GimpEnumStore to use as the model</doc>
            <type name="EnumStore" c:type="GimpEnumStore*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_icon_prefix"
              c:identifier="gimp_enum_combo_box_set_icon_prefix"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumcombobox.c"
             line="189">Attempts to create icons for all items in the @combo_box. See
gimp_enum_store_set_icon_prefix() to find out what to use as
@icon_prefix.</doc>
        <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumcombobox.c"
                 line="191">a #GimpEnumComboBox</doc>
            <type name="EnumComboBox" c:type="GimpEnumComboBox*"/>
          </instance-parameter>
          <parameter name="icon_prefix" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumcombobox.c"
                 line="192">a prefix to create icon names from enum values</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="model" writable="1" transfer-ownership="none">
        <type name="EnumStore"/>
      </property>
      <field name="parent_instance">
        <type name="IntComboBox" c:type="GimpIntComboBox"/>
      </field>
      <field name="priv">
        <type name="EnumComboBoxPrivate" c:type="GimpEnumComboBoxPrivate*"/>
      </field>
    </class>
    <record name="EnumComboBoxClass"
            c:type="GimpEnumComboBoxClass"
            glib:is-gtype-struct-for="EnumComboBox">
      <source-position filename="libgimpwidgets/gimpenumcombobox.h" line="64"/>
      <field name="parent_class">
        <type name="IntComboBoxClass" c:type="GimpIntComboBoxClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpenumcombobox.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="EnumComboBoxPrivate"
            c:type="GimpEnumComboBoxPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpenumcombobox.h" line="41"/>
    </record>
    <class name="EnumLabel"
           c:symbol-prefix="enum_label"
           c:type="GimpEnumLabel"
           parent="Gtk.Label"
           glib:type-name="GimpEnumLabel"
           glib:get-type="gimp_enum_label_get_type"
           glib:type-struct="EnumLabelClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpenumlabel.c"
           line="33">A #GtkLabel subclass that displays an enum value.</doc>
      <source-position filename="libgimpwidgets/gimpenumlabel.h" line="63"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gimp_enum_label_new" version="2.4">
        <source-position filename="libgimpwidgets/gimpenumlabel.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumlabel.c"
               line="183">a new #GimpEnumLabel.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="enum_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumlabel.c"
                 line="180">the #GType of an enum</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumlabel.c"
                 line="181">an enum value</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_value"
              c:identifier="gimp_enum_label_set_value"
              version="2.4">
        <source-position filename="libgimpwidgets/gimpenumlabel.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumlabel.c"
                 line="201">a #GimpEnumLabel</doc>
            <type name="EnumLabel" c:type="GimpEnumLabel*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumlabel.c"
                 line="202">an enum value</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="enum-type"
                version="2.8"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumlabel.c"
             line="83">The #GType of the enum.</doc>
        <type name="GType" c:type="GType"/>
      </property>
      <property name="enum-value"
                version="2.8"
                readable="0"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumlabel.c"
             line="98">The value to display.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Label" c:type="GtkLabel"/>
      </field>
      <field name="priv">
        <type name="EnumLabelPrivate" c:type="GimpEnumLabelPrivate*"/>
      </field>
    </class>
    <record name="EnumLabelClass"
            c:type="GimpEnumLabelClass"
            glib:is-gtype-struct-for="EnumLabel">
      <source-position filename="libgimpwidgets/gimpenumlabel.h" line="63"/>
      <field name="parent_class">
        <type name="Gtk.LabelClass" c:type="GtkLabelClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpenumlabel.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpenumlabel.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpenumlabel.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpenumlabel.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpenumlabel.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpenumlabel.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpenumlabel.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpenumlabel.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="EnumLabelPrivate"
            c:type="GimpEnumLabelPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpenumlabel.h" line="40"/>
    </record>
    <class name="EnumStore"
           c:symbol-prefix="enum_store"
           c:type="GimpEnumStore"
           parent="IntStore"
           glib:type-name="GimpEnumStore"
           glib:get-type="gimp_enum_store_get_type"
           glib:type-struct="EnumStoreClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpenumstore.c"
           line="33">A #GimpIntStore subclass that keeps enum values.</doc>
      <source-position filename="libgimpwidgets/gimpenumstore.h" line="64"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.TreeDragDest"/>
      <implements name="Gtk.TreeDragSource"/>
      <implements name="Gtk.TreeModel"/>
      <implements name="Gtk.TreeSortable"/>
      <constructor name="new" c:identifier="gimp_enum_store_new" version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumstore.c"
             line="188">Creates a new #GimpEnumStore, derived from #GtkListStore and fills
it with enum values. The enum needs to be registered to the type
system and should have translatable value names.</doc>
        <source-position filename="libgimpwidgets/gimpenumstore.h" line="69"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumstore.c"
               line="196">a new #GimpEnumStore.</doc>
          <type name="Gtk.ListStore" c:type="GtkListStore*"/>
        </return-value>
        <parameters>
          <parameter name="enum_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="190">the #GType of an enum.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_range"
                   c:identifier="gimp_enum_store_new_with_range"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumstore.c"
             line="219">Creates a new #GimpEnumStore like gimp_enum_store_new() but allows
to limit the enum values to a certain range. Values smaller than
@minimum or larger than @maximum are not added to the store.</doc>
        <source-position filename="libgimpwidgets/gimpenumstore.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumstore.c"
               line="229">a new #GimpEnumStore.</doc>
          <type name="Gtk.ListStore" c:type="GtkListStore*"/>
        </return-value>
        <parameters>
          <parameter name="enum_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="221">the #GType of an enum.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="minimum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="222">the minimum value to include</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="maximum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="223">the maximum value to include</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_values"
                   c:identifier="gimp_enum_store_new_with_values"
                   version="2.4"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumstore.c"
             line="263">Creates a new #GimpEnumStore like gimp_enum_store_new() but allows
to explicitly list the enum values that should be added to the
store.</doc>
        <source-position filename="libgimpwidgets/gimpenumstore.h" line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumstore.c"
               line="273">a new #GimpEnumStore.</doc>
          <type name="Gtk.ListStore" c:type="GtkListStore*"/>
        </return-value>
        <parameters>
          <parameter name="enum_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="265">the #GType of an enum.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="n_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="266">the number of enum values to include</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="267">a list of enum values (exactly @n_values)</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_values_valist"
                   c:identifier="gimp_enum_store_new_with_values_valist"
                   version="2.4"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumstore.c"
             line="294">See gimp_enum_store_new_with_values().</doc>
        <source-position filename="libgimpwidgets/gimpenumstore.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumstore.c"
               line="302">a new #GimpEnumStore.</doc>
          <type name="Gtk.ListStore" c:type="GtkListStore*"/>
        </return-value>
        <parameters>
          <parameter name="enum_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="296">the #GType of an enum.</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="n_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="297">the number of enum values to include</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="298">a va_list of enum values (exactly @n_values)</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_icon_prefix"
              c:identifier="gimp_enum_store_set_icon_prefix"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumstore.c"
             line="337">Creates an icon name for each enum value in the @store by appending
the value's nick to the given @icon_prefix, separated by a hyphen.

See also: gimp_enum_combo_box_set_icon_prefix().</doc>
        <source-position filename="libgimpwidgets/gimpenumstore.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="339">a #GimpEnumStore</doc>
            <type name="EnumStore" c:type="GimpEnumStore*"/>
          </instance-parameter>
          <parameter name="icon_prefix" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpenumstore.c"
                 line="340">a prefix to create icon names from enum values</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="enum-type"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumstore.c"
             line="85">Sets the #GType of the enum to be used in the store.</doc>
        <type name="GType" c:type="GType"/>
      </property>
      <field name="parent_instance">
        <type name="IntStore" c:type="GimpIntStore"/>
      </field>
      <field name="priv">
        <type name="EnumStorePrivate" c:type="GimpEnumStorePrivate*"/>
      </field>
    </class>
    <record name="EnumStoreClass"
            c:type="GimpEnumStoreClass"
            glib:is-gtype-struct-for="EnumStore">
      <source-position filename="libgimpwidgets/gimpenumstore.h" line="64"/>
      <field name="parent_class">
        <type name="IntStoreClass" c:type="GimpIntStoreClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpenumstore.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpenumstore.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpenumstore.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpenumstore.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpenumstore.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpenumstore.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpenumstore.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpenumstore.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="EnumStorePrivate"
            c:type="GimpEnumStorePrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpenumstore.h" line="42"/>
    </record>
    <bitfield name="ExportCapabilities" c:type="GimpExportCapabilities">
      <doc xml:space="preserve"
           filename="libgimp/gimpexport.h"
           line="34">The types of images and layers an export procedure can handle</doc>
      <source-position filename="libgimp/gimpexport.h" line="61"/>
      <member name="can_handle_rgb"
              value="1"
              c:identifier="GIMP_EXPORT_CAN_HANDLE_RGB">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="36">Handles RGB images</doc>
      </member>
      <member name="can_handle_gray"
              value="2"
              c:identifier="GIMP_EXPORT_CAN_HANDLE_GRAY">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="37">Handles grayscale images</doc>
      </member>
      <member name="can_handle_indexed"
              value="4"
              c:identifier="GIMP_EXPORT_CAN_HANDLE_INDEXED">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="38">Handles indexed images</doc>
      </member>
      <member name="can_handle_bitmap"
              value="8"
              c:identifier="GIMP_EXPORT_CAN_HANDLE_BITMAP">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="39">Handles two-color indexed images</doc>
      </member>
      <member name="can_handle_alpha"
              value="16"
              c:identifier="GIMP_EXPORT_CAN_HANDLE_ALPHA">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="40">Handles alpha channels</doc>
      </member>
      <member name="can_handle_layers"
              value="32"
              c:identifier="GIMP_EXPORT_CAN_HANDLE_LAYERS">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="41">Handles layers</doc>
      </member>
      <member name="can_handle_layers_as_animation"
              value="64"
              c:identifier="GIMP_EXPORT_CAN_HANDLE_LAYERS_AS_ANIMATION">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="42">Handles animation of layers</doc>
      </member>
      <member name="can_handle_layer_masks"
              value="128"
              c:identifier="GIMP_EXPORT_CAN_HANDLE_LAYER_MASKS">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="43">Handles layer masks</doc>
      </member>
      <member name="needs_alpha"
              value="256"
              c:identifier="GIMP_EXPORT_NEEDS_ALPHA">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="44">Needs alpha channels</doc>
      </member>
      <member name="needs_crop"
              value="512"
              c:identifier="GIMP_EXPORT_NEEDS_CROP">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="45">Needs to crop content to image bounds</doc>
      </member>
    </bitfield>
    <enumeration name="ExportReturn" c:type="GimpExportReturn">
      <doc xml:space="preserve"
           filename="libgimp/gimpexport.h"
           line="64">Possible return values of gimp_export_image().</doc>
      <source-position filename="libgimp/gimpexport.h" line="77"/>
      <member name="cancel" value="0" c:identifier="GIMP_EXPORT_CANCEL">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="66">The export was cancelled</doc>
      </member>
      <member name="ignore" value="1" c:identifier="GIMP_EXPORT_IGNORE">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="67">The image is unmodified but export shall continue anyway</doc>
      </member>
      <member name="export" value="2" c:identifier="GIMP_EXPORT_EXPORT">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.h"
             line="68">The chosen transforms were applied to the image</doc>
      </member>
    </enumeration>
    <function-macro name="FILE_ENTRY"
                    c:identifier="GIMP_FILE_ENTRY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpfileentry.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FILE_ENTRY_CLASS"
                    c:identifier="GIMP_FILE_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpfileentry.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FILE_ENTRY_GET_CLASS"
                    c:identifier="GIMP_FILE_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpfileentry.h" line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FONT_SELECT_BUTTON"
                    c:identifier="GIMP_FONT_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimpfontselectbutton.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FONT_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_FONT_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpfontselectbutton.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FONT_SELECT_BUTTON_GET_CLASS"
                    c:identifier="GIMP_FONT_SELECT_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpfontselectbutton.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FRAME" c:identifier="GIMP_FRAME" introspectable="0">
      <source-position filename="libgimpwidgets/gimpframe.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FRAME_CLASS"
                    c:identifier="GIMP_FRAME_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpframe.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FRAME_GET_CLASS"
                    c:identifier="GIMP_FRAME_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpframe.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <record name="FileEntry" c:type="GimpFileEntry" disguised="1">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpfileentry.c"
           line="43">This widget is used to enter filenames or directories.

There is a #GtkEntry for entering the filename manually and a "..."
button which will pop up a #GtkFileChooserDialog.

You can restrict the #GimpFileEntry to directories. In this
case the filename listbox of the #GtkFileChooser dialog will be
set to directory mode.

If you specify @check_valid as %TRUE in gimp_file_entry_new() the
entered filename will be checked for validity and a pixmap will be
shown which indicates if the file exists or not.

Whenever the user changes the filename, the "filename_changed"
signal will be emitted.</doc>
      <source-position filename="libgimpwidgets/gimpwidgetstypes.h" line="59"/>
    </record>
    <class name="FontSelectButton"
           c:symbol-prefix="font_select_button"
           c:type="GimpFontSelectButton"
           parent="SelectButton"
           glib:type-name="GimpFontSelectButton"
           glib:get-type="gimp_font_select_button_get_type"
           glib:type-struct="FontSelectButtonClass">
      <doc xml:space="preserve"
           filename="libgimp/gimpfontselectbutton.c"
           line="38">A button which pops up a font selection dialog.</doc>
      <source-position filename="libgimp/gimpfontselectbutton.h" line="71"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gimp_font_select_button_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpfontselectbutton.c"
             line="185">Creates a new #GtkWidget that completely controls the selection of
a font.  This widget is suitable for placement in a table in a
plug-in dialog.</doc>
        <source-position filename="libgimp/gimpfontselectbutton.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpfontselectbutton.c"
               line="194">A #GtkWidget that you can use in your UI.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpfontselectbutton.c"
                 line="187">Title of the dialog to use or %NULL to use the default title.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="font_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpfontselectbutton.c"
                 line="188">Initial font name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="font_set">
        <source-position filename="libgimp/gimpfontselectbutton.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <type name="FontSelectButton" c:type="GimpFontSelectButton*"/>
          </instance-parameter>
          <parameter name="font_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="dialog_closing" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_font"
              c:identifier="gimp_font_select_button_get_font"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpfontselectbutton.c"
             line="217">Retrieves the name of currently selected font.</doc>
        <source-position filename="libgimp/gimpfontselectbutton.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpfontselectbutton.c"
               line="223">an internal copy of the font name which must not be freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpfontselectbutton.c"
                 line="219">A #GimpFontSelectButton</doc>
            <type name="FontSelectButton" c:type="GimpFontSelectButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_font"
              c:identifier="gimp_font_select_button_set_font"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpfontselectbutton.c"
             line="235">Sets the current font for the font select button.</doc>
        <source-position filename="libgimp/gimpfontselectbutton.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpfontselectbutton.c"
                 line="237">A #GimpFontSelectButton</doc>
            <type name="FontSelectButton" c:type="GimpFontSelectButton*"/>
          </instance-parameter>
          <parameter name="font_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpfontselectbutton.c"
                 line="238">Font name to set; %NULL means no change.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="font-name"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimpfontselectbutton.c"
             line="140">The name of the currently selected font.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimpfontselectbutton.c"
             line="125">The title to be used for the font selection popup dialog.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="SelectButton" c:type="GimpSelectButton"/>
      </field>
      <field name="priv">
        <type name="FontSelectButtonPrivate"
              c:type="GimpFontSelectButtonPrivate*"/>
      </field>
      <glib:signal name="font-set" when="first" version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpfontselectbutton.c"
             line="154">The ::font-set signal is emitted when the user selects a font.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="font_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpfontselectbutton.c"
                 line="157">the name of the currently selected font.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="dialog_closing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpfontselectbutton.c"
                 line="158">whether the dialog was closed or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="FontSelectButtonClass"
            c:type="GimpFontSelectButtonClass"
            glib:is-gtype-struct-for="FontSelectButton">
      <source-position filename="libgimp/gimpfontselectbutton.h" line="71"/>
      <field name="parent_class">
        <type name="SelectButtonClass" c:type="GimpSelectButtonClass"/>
      </field>
      <field name="font_set">
        <callback name="font_set">
          <source-position filename="libgimp/gimpfontselectbutton.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="button" transfer-ownership="none">
              <type name="FontSelectButton" c:type="GimpFontSelectButton*"/>
            </parameter>
            <parameter name="font_name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="dialog_closing" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimpfontselectbutton.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimpfontselectbutton.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimpfontselectbutton.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimpfontselectbutton.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimpfontselectbutton.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimpfontselectbutton.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimpfontselectbutton.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimpfontselectbutton.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FontSelectButtonPrivate"
            c:type="GimpFontSelectButtonPrivate"
            disguised="1">
      <source-position filename="libgimp/gimpfontselectbutton.h" line="43"/>
    </record>
    <class name="Frame"
           c:symbol-prefix="frame"
           c:type="GimpFrame"
           parent="Gtk.Frame"
           glib:type-name="GimpFrame"
           glib:get-type="gimp_frame_get_type"
           glib:type-struct="FrameClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpframe.c"
           line="36">A widget providing a HIG-compliant subclass of #GtkFrame.</doc>
      <source-position filename="libgimpwidgets/gimpframe.h" line="65"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gimp_frame_new" version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpframe.c"
             line="217">Creates a #GimpFrame widget. A #GimpFrame is a HIG-compliant
variant of #GtkFrame. It doesn't render a frame at all but
otherwise behaves like a frame. The frame's title is rendered in
bold and the frame content is indented four spaces as suggested by
the GNOME HIG (see https://developer.gnome.org/hig/stable/).</doc>
        <source-position filename="libgimpwidgets/gimpframe.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpframe.c"
               line="227">a new #GimpFrame widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpframe.c"
                 line="219">text to set as the frame's title label (or %NULL for no title)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="Gtk.Frame" c:type="GtkFrame"/>
      </field>
      <field name="priv">
        <type name="FramePrivate" c:type="GimpFramePrivate*"/>
      </field>
    </class>
    <record name="FrameClass"
            c:type="GimpFrameClass"
            glib:is-gtype-struct-for="Frame">
      <source-position filename="libgimpwidgets/gimpframe.h" line="65"/>
      <field name="parent_class">
        <type name="Gtk.FrameClass" c:type="GtkFrameClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpframe.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpframe.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpframe.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpframe.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpframe.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpframe.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpframe.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpframe.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FramePrivate" c:type="GimpFramePrivate" disguised="1">
      <source-position filename="libgimpwidgets/gimpframe.h" line="42"/>
    </record>
    <function-macro name="GRADIENT_SELECT_BUTTON"
                    c:identifier="GIMP_GRADIENT_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimpgradientselectbutton.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GRADIENT_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_GRADIENT_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpgradientselectbutton.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GRADIENT_SELECT_BUTTON_GET_CLASS"
                    c:identifier="GIMP_GRADIENT_SELECT_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpgradientselectbutton.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="GradientSelectButton"
           c:symbol-prefix="gradient_select_button"
           c:type="GimpGradientSelectButton"
           parent="SelectButton"
           glib:type-name="GimpGradientSelectButton"
           glib:get-type="gimp_gradient_select_button_get_type"
           glib:type-struct="GradientSelectButtonClass">
      <doc xml:space="preserve"
           filename="libgimp/gimpgradientselectbutton.c"
           line="38">A button which pops up a gradient select dialog.</doc>
      <source-position filename="libgimp/gimpgradientselectbutton.h"
                       line="73"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gimp_gradient_select_button_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpgradientselectbutton.c"
             line="211">Creates a new #GtkWidget that completely controls the selection of
a gradient.  This widget is suitable for placement in a table in a
plug-in dialog.</doc>
        <source-position filename="libgimp/gimpgradientselectbutton.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpgradientselectbutton.c"
               line="220">A #GtkWidget that you can use in your UI.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpgradientselectbutton.c"
                 line="213">Title of the dialog to use or %NULL to use the default title.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="gradient_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpgradientselectbutton.c"
                 line="214">Initial gradient name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="gradient_set">
        <source-position filename="libgimp/gimpgradientselectbutton.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <type name="GradientSelectButton"
                  c:type="GimpGradientSelectButton*"/>
          </instance-parameter>
          <parameter name="gradient_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="gradient_data" transfer-ownership="none">
            <type name="gdouble" c:type="const gdouble*"/>
          </parameter>
          <parameter name="dialog_closing" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_gradient"
              c:identifier="gimp_gradient_select_button_get_gradient"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpgradientselectbutton.c"
             line="243">Retrieves the name of currently selected gradient.</doc>
        <source-position filename="libgimp/gimpgradientselectbutton.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpgradientselectbutton.c"
               line="249">an internal copy of the gradient name which must not be freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpgradientselectbutton.c"
                 line="245">A #GimpGradientSelectButton</doc>
            <type name="GradientSelectButton"
                  c:type="GimpGradientSelectButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_gradient"
              c:identifier="gimp_gradient_select_button_set_gradient"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpgradientselectbutton.c"
             line="261">Sets the current gradient for the gradient select button.</doc>
        <source-position filename="libgimp/gimpgradientselectbutton.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpgradientselectbutton.c"
                 line="263">A #GimpGradientSelectButton</doc>
            <type name="GradientSelectButton"
                  c:type="GimpGradientSelectButton*"/>
          </instance-parameter>
          <parameter name="gradient_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpgradientselectbutton.c"
                 line="264">Gradient name to set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="gradient-name"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimpgradientselectbutton.c"
             line="158">The name of the currently selected gradient.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimpgradientselectbutton.c"
             line="143">The title to be used for the gradient selection popup dialog.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="SelectButton" c:type="GimpSelectButton"/>
      </field>
      <field name="priv">
        <type name="GradientSelectButtonPrivate"
              c:type="GimpGradientSelectButtonPrivate*"/>
      </field>
      <glib:signal name="gradient-set" when="first" version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpgradientselectbutton.c"
             line="172">The ::gradient-set signal is emitted when the user selects a gradient.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gradient_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpgradientselectbutton.c"
                 line="175">the name of the currently selected gradient.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpgradientselectbutton.c"
                 line="176">width of the gradient</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="grad_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimp/gimpgradientselectbutton.c"
                 line="177">gradient data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="dialog_closing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpgradientselectbutton.c"
                 line="178">whether the dialog was closed or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="GradientSelectButtonClass"
            c:type="GimpGradientSelectButtonClass"
            glib:is-gtype-struct-for="GradientSelectButton">
      <source-position filename="libgimp/gimpgradientselectbutton.h"
                       line="73"/>
      <field name="parent_class">
        <type name="SelectButtonClass" c:type="GimpSelectButtonClass"/>
      </field>
      <field name="gradient_set">
        <callback name="gradient_set">
          <source-position filename="libgimp/gimpgradientselectbutton.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="button" transfer-ownership="none">
              <type name="GradientSelectButton"
                    c:type="GimpGradientSelectButton*"/>
            </parameter>
            <parameter name="gradient_name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="gradient_data" transfer-ownership="none">
              <type name="gdouble" c:type="const gdouble*"/>
            </parameter>
            <parameter name="dialog_closing" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimpgradientselectbutton.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimpgradientselectbutton.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimpgradientselectbutton.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimpgradientselectbutton.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimpgradientselectbutton.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimpgradientselectbutton.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimpgradientselectbutton.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimpgradientselectbutton.h"
                           line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GradientSelectButtonPrivate"
            c:type="GimpGradientSelectButtonPrivate"
            disguised="1">
      <source-position filename="libgimp/gimpgradientselectbutton.h"
                       line="43"/>
    </record>
    <function-macro name="HINT_BOX"
                    c:identifier="GIMP_HINT_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimphintbox.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="HINT_BOX_CLASS"
                    c:identifier="GIMP_HINT_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimphintbox.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="HINT_BOX_GET_CLASS"
                    c:identifier="GIMP_HINT_BOX_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimphintbox.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <callback name="HelpFunc" c:type="GimpHelpFunc">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetstypes.h"
           line="82">This is the prototype for all functions you pass as @help_func to
the various GIMP dialog constructors like gimp_dialog_new(),
gimp_query_int_box() etc.

Help IDs are textual identifiers the help system uses to figure
which page to display.

All these dialog constructors functions call gimp_help_connect().

In most cases it will be ok to use gimp_standard_help_func() which
does nothing but passing the @help_id string to gimp_help(). If
your plug-in needs some more sophisticated help handling you can
provide your own @help_func which has to call gimp_help() to
actually display the help.</doc>
      <source-position filename="libgimpwidgets/gimpwidgetstypes.h"
                       line="102"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetstypes.h"
               line="84">the help ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="help_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetstypes.h"
               line="85">the help user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="HintBox"
           c:symbol-prefix="hint_box"
           c:type="GimpHintBox"
           parent="Gtk.Box"
           glib:type-name="GimpHintBox"
           glib:get-type="gimp_hint_box_get_type"
           glib:type-struct="HintBoxClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimphintbox.c"
           line="32">Displays a wilber icon and a text.</doc>
      <source-position filename="libgimpwidgets/gimphintbox.h" line="65"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gimp_hint_box_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimphintbox.c"
             line="205">Creates a new widget that shows a text label showing @hint,
decorated with a GIMP_ICON_INFO wilber icon.</doc>
        <source-position filename="libgimpwidgets/gimphintbox.h" line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphintbox.c"
               line="212">a new widget

Since GIMP 2.4</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="hint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimphintbox.c"
                 line="207">text to display as a user hint</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="hint"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="icon-name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="HintBoxPrivate" c:type="GimpHintBoxPrivate*"/>
      </field>
    </class>
    <record name="HintBoxClass"
            c:type="GimpHintBoxClass"
            glib:is-gtype-struct-for="HintBox">
      <source-position filename="libgimpwidgets/gimphintbox.h" line="65"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimphintbox.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimphintbox.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimphintbox.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimphintbox.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimphintbox.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimphintbox.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimphintbox.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimphintbox.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="HintBoxPrivate" c:type="GimpHintBoxPrivate" disguised="1">
      <source-position filename="libgimpwidgets/gimphintbox.h" line="42"/>
    </record>
    <constant name="ICON_APPLICATION_EXIT"
              value="application-exit"
              c:type="GIMP_ICON_APPLICATION_EXIT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="99"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_ASPECT_LANDSCAPE"
              value="gimp-landscape"
              c:type="GIMP_ICON_ASPECT_LANDSCAPE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="102"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_ASPECT_PORTRAIT"
              value="gimp-portrait"
              c:type="GIMP_ICON_ASPECT_PORTRAIT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="101"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_ATTACH" value="gimp-attach" c:type="GIMP_ICON_ATTACH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="36"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_BUSINESS_CARD"
              value="gimp-business-card"
              c:type="GIMP_ICON_BUSINESS_CARD">
      <source-position filename="libgimpwidgets/gimpicons.h" line="46"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CAP_BUTT"
              value="gimp-cap-butt"
              c:type="GIMP_ICON_CAP_BUTT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="104"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CAP_ROUND"
              value="gimp-cap-round"
              c:type="GIMP_ICON_CAP_ROUND">
      <source-position filename="libgimpwidgets/gimpicons.h" line="105"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CAP_SQUARE"
              value="gimp-cap-square"
              c:type="GIMP_ICON_CAP_SQUARE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="106"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CENTER" value="gimp-center" c:type="GIMP_ICON_CENTER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="108"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CENTER_HORIZONTAL"
              value="gimp-hcenter"
              c:type="GIMP_ICON_CENTER_HORIZONTAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="109"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CENTER_VERTICAL"
              value="gimp-vcenter"
              c:type="GIMP_ICON_CENTER_VERTICAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="110"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHAIN_HORIZONTAL"
              value="gimp-hchain"
              c:type="GIMP_ICON_CHAIN_HORIZONTAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="112"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHAIN_HORIZONTAL_BROKEN"
              value="gimp-hchain-broken"
              c:type="GIMP_ICON_CHAIN_HORIZONTAL_BROKEN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="113"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHAIN_VERTICAL"
              value="gimp-vchain"
              c:type="GIMP_ICON_CHAIN_VERTICAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="114"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHAIN_VERTICAL_BROKEN"
              value="gimp-vchain-broken"
              c:type="GIMP_ICON_CHAIN_VERTICAL_BROKEN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="115"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHANNEL"
              value="gimp-channel"
              c:type="GIMP_ICON_CHANNEL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="117"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHANNEL_ALPHA"
              value="gimp-channel-alpha"
              c:type="GIMP_ICON_CHANNEL_ALPHA">
      <source-position filename="libgimpwidgets/gimpicons.h" line="118"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHANNEL_BLUE"
              value="gimp-channel-blue"
              c:type="GIMP_ICON_CHANNEL_BLUE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="119"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHANNEL_GRAY"
              value="gimp-channel-gray"
              c:type="GIMP_ICON_CHANNEL_GRAY">
      <source-position filename="libgimpwidgets/gimpicons.h" line="120"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHANNEL_GREEN"
              value="gimp-channel-green"
              c:type="GIMP_ICON_CHANNEL_GREEN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="121"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHANNEL_INDEXED"
              value="gimp-channel-indexed"
              c:type="GIMP_ICON_CHANNEL_INDEXED">
      <source-position filename="libgimpwidgets/gimpicons.h" line="122"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHANNEL_RED"
              value="gimp-channel-red"
              c:type="GIMP_ICON_CHANNEL_RED">
      <source-position filename="libgimpwidgets/gimpicons.h" line="123"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CHAR_PICKER"
              value="gimp-char-picker"
              c:type="GIMP_ICON_CHAR_PICKER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="47"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CLOSE" value="gimp-close" c:type="GIMP_ICON_CLOSE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="125"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CLOSE_ALL"
              value="gimp-close-all"
              c:type="GIMP_ICON_CLOSE_ALL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="126"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLORMAP"
              value="gimp-colormap"
              c:type="GIMP_ICON_COLORMAP">
      <source-position filename="libgimpwidgets/gimpicons.h" line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLORS_DEFAULT"
              value="gimp-default-colors"
              c:type="GIMP_ICON_COLORS_DEFAULT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="141"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLORS_SWAP"
              value="gimp-swap-colors"
              c:type="GIMP_ICON_COLORS_SWAP">
      <source-position filename="libgimpwidgets/gimpicons.h" line="142"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLOR_PICKER_BLACK"
              value="gimp-color-picker-black"
              c:type="GIMP_ICON_COLOR_PICKER_BLACK">
      <source-position filename="libgimpwidgets/gimpicons.h" line="128"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLOR_PICKER_GRAY"
              value="gimp-color-picker-gray"
              c:type="GIMP_ICON_COLOR_PICKER_GRAY">
      <source-position filename="libgimpwidgets/gimpicons.h" line="129"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLOR_PICKER_WHITE"
              value="gimp-color-picker-white"
              c:type="GIMP_ICON_COLOR_PICKER_WHITE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="130"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLOR_PICK_FROM_SCREEN"
              value="gimp-color-pick-from-screen"
              c:type="GIMP_ICON_COLOR_PICK_FROM_SCREEN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="131"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLOR_SELECTOR_CMYK"
              value="gimp-color-cmyk"
              c:type="GIMP_ICON_COLOR_SELECTOR_CMYK">
      <source-position filename="libgimpwidgets/gimpicons.h" line="133"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLOR_SELECTOR_TRIANGLE"
              value="gimp-color-triangle"
              c:type="GIMP_ICON_COLOR_SELECTOR_TRIANGLE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="134"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLOR_SELECTOR_WATER"
              value="gimp-color-water"
              c:type="GIMP_ICON_COLOR_SELECTOR_WATER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="135"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLOR_SPACE_LINEAR"
              value="gimp-color-space-linear"
              c:type="GIMP_ICON_COLOR_SPACE_LINEAR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="137"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLOR_SPACE_NON_LINEAR"
              value="gimp-color-space-non-linear"
              c:type="GIMP_ICON_COLOR_SPACE_NON_LINEAR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="138"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_COLOR_SPACE_PERCEPTUAL"
              value="gimp-color-space-perceptual"
              c:type="GIMP_ICON_COLOR_SPACE_PERCEPTUAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="139"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CONTROLLER"
              value="gimp-controller"
              c:type="GIMP_ICON_CONTROLLER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="144"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CONTROLLER_KEYBOARD"
              value="gimp-controller-keyboard"
              c:type="GIMP_ICON_CONTROLLER_KEYBOARD">
      <source-position filename="libgimpwidgets/gimpicons.h" line="145"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CONTROLLER_LINUX_INPUT"
              value="gimp-controller-linux-input"
              c:type="GIMP_ICON_CONTROLLER_LINUX_INPUT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="146"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CONTROLLER_MIDI"
              value="gimp-controller-midi"
              c:type="GIMP_ICON_CONTROLLER_MIDI">
      <source-position filename="libgimpwidgets/gimpicons.h" line="147"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CONTROLLER_WHEEL"
              value="gimp-controller-wheel"
              c:type="GIMP_ICON_CONTROLLER_WHEEL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="149"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CONVERT_GRAYSCALE"
              value="gimp-convert-grayscale"
              c:type="GIMP_ICON_CONVERT_GRAYSCALE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="152"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CONVERT_INDEXED"
              value="gimp-convert-indexed"
              c:type="GIMP_ICON_CONVERT_INDEXED">
      <source-position filename="libgimpwidgets/gimpicons.h" line="153"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CONVERT_RGB"
              value="gimp-convert-rgb"
              c:type="GIMP_ICON_CONVERT_RGB">
      <source-position filename="libgimpwidgets/gimpicons.h" line="151"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CURSOR" value="gimp-cursor" c:type="GIMP_ICON_CURSOR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="48"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CURVE_FREE"
              value="gimp-curve-free"
              c:type="GIMP_ICON_CURVE_FREE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="156"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_CURVE_SMOOTH"
              value="gimp-curve-smooth"
              c:type="GIMP_ICON_CURVE_SMOOTH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="157"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DETACH" value="gimp-detach" c:type="GIMP_ICON_DETACH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="37"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_CHANNELS"
              value="gimp-channels"
              c:type="GIMP_ICON_DIALOG_CHANNELS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="159"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_DASHBOARD"
              value="gimp-dashboard"
              c:type="GIMP_ICON_DIALOG_DASHBOARD">
      <source-position filename="libgimpwidgets/gimpicons.h" line="160"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_DEVICE_STATUS"
              value="gimp-device-status"
              c:type="GIMP_ICON_DIALOG_DEVICE_STATUS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="161"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_ERROR"
              value="dialog-error"
              c:type="GIMP_ICON_DIALOG_ERROR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="162"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_IMAGES"
              value="gimp-images"
              c:type="GIMP_ICON_DIALOG_IMAGES">
      <source-position filename="libgimpwidgets/gimpicons.h" line="163"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_INFORMATION"
              value="dialog-information"
              c:type="GIMP_ICON_DIALOG_INFORMATION">
      <source-position filename="libgimpwidgets/gimpicons.h" line="164"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_LAYERS"
              value="gimp-layers"
              c:type="GIMP_ICON_DIALOG_LAYERS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="165"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_NAVIGATION"
              value="gimp-navigation"
              c:type="GIMP_ICON_DIALOG_NAVIGATION">
      <source-position filename="libgimpwidgets/gimpicons.h" line="166"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_PATHS"
              value="gimp-paths"
              c:type="GIMP_ICON_DIALOG_PATHS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="167"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_QUESTION"
              value="dialog-question"
              c:type="GIMP_ICON_DIALOG_QUESTION">
      <source-position filename="libgimpwidgets/gimpicons.h" line="168"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_RESHOW_FILTER"
              value="gimp-reshow-filter"
              c:type="GIMP_ICON_DIALOG_RESHOW_FILTER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="169"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_TOOLS"
              value="gimp-tools"
              c:type="GIMP_ICON_DIALOG_TOOLS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="170"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_TOOL_OPTIONS"
              value="gimp-tool-options"
              c:type="GIMP_ICON_DIALOG_TOOL_OPTIONS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="171"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_UNDO_HISTORY"
              value="gimp-undo-history"
              c:type="GIMP_ICON_DIALOG_UNDO_HISTORY">
      <source-position filename="libgimpwidgets/gimpicons.h" line="172"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DIALOG_WARNING"
              value="dialog-warning"
              c:type="GIMP_ICON_DIALOG_WARNING">
      <source-position filename="libgimpwidgets/gimpicons.h" line="173"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DISPLAY"
              value="gimp-display"
              c:type="GIMP_ICON_DISPLAY">
      <source-position filename="libgimpwidgets/gimpicons.h" line="49"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DISPLAY_FILTER"
              value="gimp-display-filter"
              c:type="GIMP_ICON_DISPLAY_FILTER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="175"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DISPLAY_FILTER_CLIP_WARNING"
              value="gimp-display-filter-clip-warning"
              c:type="GIMP_ICON_DISPLAY_FILTER_CLIP_WARNING">
      <source-position filename="libgimpwidgets/gimpicons.h" line="176"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DISPLAY_FILTER_COLORBLIND"
              value="gimp-display-filter-colorblind"
              c:type="GIMP_ICON_DISPLAY_FILTER_COLORBLIND">
      <source-position filename="libgimpwidgets/gimpicons.h" line="177"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DISPLAY_FILTER_CONTRAST"
              value="gimp-display-filter-contrast"
              c:type="GIMP_ICON_DISPLAY_FILTER_CONTRAST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="178"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DISPLAY_FILTER_GAMMA"
              value="gimp-display-filter-gamma"
              c:type="GIMP_ICON_DISPLAY_FILTER_GAMMA">
      <source-position filename="libgimpwidgets/gimpicons.h" line="179"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DISPLAY_FILTER_LCMS"
              value="gimp-display-filter-lcms"
              c:type="GIMP_ICON_DISPLAY_FILTER_LCMS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="180"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DISPLAY_FILTER_PROOF"
              value="gimp-display-filter-proof"
              c:type="GIMP_ICON_DISPLAY_FILTER_PROOF">
      <source-position filename="libgimpwidgets/gimpicons.h" line="181"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DOCUMENT_NEW"
              value="document-new"
              c:type="GIMP_ICON_DOCUMENT_NEW">
      <source-position filename="libgimpwidgets/gimpicons.h" line="183"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DOCUMENT_OPEN"
              value="document-open"
              c:type="GIMP_ICON_DOCUMENT_OPEN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="184"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DOCUMENT_OPEN_RECENT"
              value="document-open-recent"
              c:type="GIMP_ICON_DOCUMENT_OPEN_RECENT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="185"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DOCUMENT_PAGE_SETUP"
              value="document-page-setup"
              c:type="GIMP_ICON_DOCUMENT_PAGE_SETUP">
      <source-position filename="libgimpwidgets/gimpicons.h" line="186"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DOCUMENT_PRINT"
              value="document-print"
              c:type="GIMP_ICON_DOCUMENT_PRINT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="187"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DOCUMENT_PRINT_RESOLUTION"
              value="document-print"
              c:type="GIMP_ICON_DOCUMENT_PRINT_RESOLUTION">
      <source-position filename="libgimpwidgets/gimpicons.h" line="188"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DOCUMENT_PROPERTIES"
              value="document-properties"
              c:type="GIMP_ICON_DOCUMENT_PROPERTIES">
      <source-position filename="libgimpwidgets/gimpicons.h" line="189"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DOCUMENT_REVERT"
              value="document-revert"
              c:type="GIMP_ICON_DOCUMENT_REVERT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="190"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DOCUMENT_SAVE"
              value="document-save"
              c:type="GIMP_ICON_DOCUMENT_SAVE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="191"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DOCUMENT_SAVE_AS"
              value="document-save-as"
              c:type="GIMP_ICON_DOCUMENT_SAVE_AS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="192"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_DYNAMICS"
              value="gimp-dynamics"
              c:type="GIMP_ICON_DYNAMICS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="65"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT" value="gtk-edit" c:type="GIMP_ICON_EDIT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="194"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT_CLEAR"
              value="edit-clear"
              c:type="GIMP_ICON_EDIT_CLEAR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="195"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT_COPY"
              value="edit-copy"
              c:type="GIMP_ICON_EDIT_COPY">
      <source-position filename="libgimpwidgets/gimpicons.h" line="196"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT_CUT"
              value="edit-cut"
              c:type="GIMP_ICON_EDIT_CUT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="197"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT_DELETE"
              value="edit-delete"
              c:type="GIMP_ICON_EDIT_DELETE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="198"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT_FIND"
              value="edit-find"
              c:type="GIMP_ICON_EDIT_FIND">
      <source-position filename="libgimpwidgets/gimpicons.h" line="199"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT_PASTE"
              value="edit-paste"
              c:type="GIMP_ICON_EDIT_PASTE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="200"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT_PASTE_AS_NEW"
              value="gimp-paste-as-new"
              c:type="GIMP_ICON_EDIT_PASTE_AS_NEW">
      <source-position filename="libgimpwidgets/gimpicons.h" line="201"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT_PASTE_INTO"
              value="gimp-paste-into"
              c:type="GIMP_ICON_EDIT_PASTE_INTO">
      <source-position filename="libgimpwidgets/gimpicons.h" line="202"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT_REDO"
              value="edit-redo"
              c:type="GIMP_ICON_EDIT_REDO">
      <source-position filename="libgimpwidgets/gimpicons.h" line="203"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_EDIT_UNDO"
              value="edit-undo"
              c:type="GIMP_ICON_EDIT_UNDO">
      <source-position filename="libgimpwidgets/gimpicons.h" line="204"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FILE_MANAGER"
              value="gimp-file-manager"
              c:type="GIMP_ICON_FILE_MANAGER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="66"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FILL_HORIZONTAL"
              value="gimp-hfill"
              c:type="GIMP_ICON_FILL_HORIZONTAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="206"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FILL_VERTICAL"
              value="gimp-vfill"
              c:type="GIMP_ICON_FILL_VERTICAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="207"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FOLDER_NEW"
              value="folder-new"
              c:type="GIMP_ICON_FOLDER_NEW">
      <source-position filename="libgimpwidgets/gimpicons.h" line="209"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FONT" value="gtk-select-font" c:type="GIMP_ICON_FONT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="67"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_INDENT_LESS"
              value="format-indent-less"
              c:type="GIMP_ICON_FORMAT_INDENT_LESS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="212"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_INDENT_MORE"
              value="format-indent-more"
              c:type="GIMP_ICON_FORMAT_INDENT_MORE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="211"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_JUSTIFY_CENTER"
              value="format-justify-center"
              c:type="GIMP_ICON_FORMAT_JUSTIFY_CENTER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="213"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_JUSTIFY_FILL"
              value="format-justify-fill"
              c:type="GIMP_ICON_FORMAT_JUSTIFY_FILL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="214"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_JUSTIFY_LEFT"
              value="format-justify-left"
              c:type="GIMP_ICON_FORMAT_JUSTIFY_LEFT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="215"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_JUSTIFY_RIGHT"
              value="format-justify-right"
              c:type="GIMP_ICON_FORMAT_JUSTIFY_RIGHT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="216"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_BOLD"
              value="format-text-bold"
              c:type="GIMP_ICON_FORMAT_TEXT_BOLD">
      <source-position filename="libgimpwidgets/gimpicons.h" line="217"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_DIRECTION_LTR"
              value="format-text-direction-ltr"
              c:type="GIMP_ICON_FORMAT_TEXT_DIRECTION_LTR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="221"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_DIRECTION_RTL"
              value="format-text-direction-rtl"
              c:type="GIMP_ICON_FORMAT_TEXT_DIRECTION_RTL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="222"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_DIRECTION_TTB_LTR"
              value="gimp-text-dir-ttb-ltr"
              c:type="GIMP_ICON_FORMAT_TEXT_DIRECTION_TTB_LTR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="225"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_DIRECTION_TTB_LTR_UPRIGHT"
              value="gimp-text-dir-ttb-ltr-upright"
              c:type="GIMP_ICON_FORMAT_TEXT_DIRECTION_TTB_LTR_UPRIGHT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="226"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_DIRECTION_TTB_RTL"
              value="gimp-text-dir-ttb-rtl"
              c:type="GIMP_ICON_FORMAT_TEXT_DIRECTION_TTB_RTL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="223"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_DIRECTION_TTB_RTL_UPRIGHT"
              value="gimp-text-dir-ttb-rtl-upright"
              c:type="GIMP_ICON_FORMAT_TEXT_DIRECTION_TTB_RTL_UPRIGHT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="224"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_ITALIC"
              value="format-text-italic"
              c:type="GIMP_ICON_FORMAT_TEXT_ITALIC">
      <source-position filename="libgimpwidgets/gimpicons.h" line="218"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_SPACING_LETTER"
              value="gimp-letter-spacing"
              c:type="GIMP_ICON_FORMAT_TEXT_SPACING_LETTER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="227"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_SPACING_LINE"
              value="gimp-line-spacing"
              c:type="GIMP_ICON_FORMAT_TEXT_SPACING_LINE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="228"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_STRIKETHROUGH"
              value="format-text-strikethrough"
              c:type="GIMP_ICON_FORMAT_TEXT_STRIKETHROUGH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="219"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FORMAT_TEXT_UNDERLINE"
              value="format-text-underline"
              c:type="GIMP_ICON_FORMAT_TEXT_UNDERLINE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="220"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_FRAME" value="gimp-frame" c:type="GIMP_ICON_FRAME">
      <source-position filename="libgimpwidgets/gimpicons.h" line="83"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GEGL" value="gimp-gegl" c:type="GIMP_ICON_GEGL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="50"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GO_BOTTOM"
              value="go-bottom"
              c:type="GIMP_ICON_GO_BOTTOM">
      <source-position filename="libgimpwidgets/gimpicons.h" line="251"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GO_DOWN" value="go-down" c:type="GIMP_ICON_GO_DOWN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="252"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GO_FIRST"
              value="go-first"
              c:type="GIMP_ICON_GO_FIRST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="253"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GO_HOME" value="go-home" c:type="GIMP_ICON_GO_HOME">
      <source-position filename="libgimpwidgets/gimpicons.h" line="254"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GO_LAST" value="go-last" c:type="GIMP_ICON_GO_LAST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="255"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GO_NEXT" value="go-next" c:type="GIMP_ICON_GO_NEXT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="259"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GO_PREVIOUS"
              value="go-previous"
              c:type="GIMP_ICON_GO_PREVIOUS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="258"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GO_TOP" value="go-top" c:type="GIMP_ICON_GO_TOP">
      <source-position filename="libgimpwidgets/gimpicons.h" line="256"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GO_UP" value="go-up" c:type="GIMP_ICON_GO_UP">
      <source-position filename="libgimpwidgets/gimpicons.h" line="257"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_BILINEAR"
              value="gimp-gradient-bilinear"
              c:type="GIMP_ICON_GRADIENT_BILINEAR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="231"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_CONICAL_ASYMMETRIC"
              value="gimp-gradient-conical-asymmetric"
              c:type="GIMP_ICON_GRADIENT_CONICAL_ASYMMETRIC">
      <source-position filename="libgimpwidgets/gimpicons.h" line="235"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_CONICAL_SYMMETRIC"
              value="gimp-gradient-conical-symmetric"
              c:type="GIMP_ICON_GRADIENT_CONICAL_SYMMETRIC">
      <source-position filename="libgimpwidgets/gimpicons.h" line="234"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_LINEAR"
              value="gimp-gradient-linear"
              c:type="GIMP_ICON_GRADIENT_LINEAR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="230"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_RADIAL"
              value="gimp-gradient-radial"
              c:type="GIMP_ICON_GRADIENT_RADIAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="232"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_SHAPEBURST_ANGULAR"
              value="gimp-gradient-shapeburst-angular"
              c:type="GIMP_ICON_GRADIENT_SHAPEBURST_ANGULAR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="236"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_SHAPEBURST_DIMPLED"
              value="gimp-gradient-shapeburst-dimpled"
              c:type="GIMP_ICON_GRADIENT_SHAPEBURST_DIMPLED">
      <source-position filename="libgimpwidgets/gimpicons.h" line="238"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_SHAPEBURST_SPHERICAL"
              value="gimp-gradient-shapeburst-spherical"
              c:type="GIMP_ICON_GRADIENT_SHAPEBURST_SPHERICAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="237"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_SPIRAL_ANTICLOCKWISE"
              value="gimp-gradient-spiral-anticlockwise"
              c:type="GIMP_ICON_GRADIENT_SPIRAL_ANTICLOCKWISE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="240"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_SPIRAL_CLOCKWISE"
              value="gimp-gradient-spiral-clockwise"
              c:type="GIMP_ICON_GRADIENT_SPIRAL_CLOCKWISE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="239"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRADIENT_SQUARE"
              value="gimp-gradient-square"
              c:type="GIMP_ICON_GRADIENT_SQUARE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="233"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRAVITY_EAST"
              value="gimp-gravity-east"
              c:type="GIMP_ICON_GRAVITY_EAST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="242"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRAVITY_NORTH"
              value="gimp-gravity-north"
              c:type="GIMP_ICON_GRAVITY_NORTH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="243"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRAVITY_NORTH_EAST"
              value="gimp-gravity-north-east"
              c:type="GIMP_ICON_GRAVITY_NORTH_EAST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="244"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRAVITY_NORTH_WEST"
              value="gimp-gravity-north-west"
              c:type="GIMP_ICON_GRAVITY_NORTH_WEST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="245"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRAVITY_SOUTH"
              value="gimp-gravity-south"
              c:type="GIMP_ICON_GRAVITY_SOUTH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="246"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRAVITY_SOUTH_EAST"
              value="gimp-gravity-south-east"
              c:type="GIMP_ICON_GRAVITY_SOUTH_EAST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="247"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRAVITY_SOUTH_WEST"
              value="gimp-gravity-south-west"
              c:type="GIMP_ICON_GRAVITY_SOUTH_WEST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="248"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRAVITY_WEST"
              value="gimp-gravity-west"
              c:type="GIMP_ICON_GRAVITY_WEST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="249"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_GRID" value="gimp-grid" c:type="GIMP_ICON_GRID">
      <source-position filename="libgimpwidgets/gimpicons.h" line="69"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_HELP" value="help" c:type="GIMP_ICON_HELP">
      <source-position filename="libgimpwidgets/gimpicons.h" line="261"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_HELP_ABOUT"
              value="help-about"
              c:type="GIMP_ICON_HELP_ABOUT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="262"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_HELP_USER_MANUAL"
              value="gimp-user-manual"
              c:type="GIMP_ICON_HELP_USER_MANUAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="263"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_HISTOGRAM"
              value="gimp-histogram"
              c:type="GIMP_ICON_HISTOGRAM">
      <source-position filename="libgimpwidgets/gimpicons.h" line="265"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_HISTOGRAM_LINEAR"
              value="gimp-histogram-linear"
              c:type="GIMP_ICON_HISTOGRAM_LINEAR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="266"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_HISTOGRAM_LOGARITHMIC"
              value="gimp-histogram-logarithmic"
              c:type="GIMP_ICON_HISTOGRAM_LOGARITHMIC">
      <source-position filename="libgimpwidgets/gimpicons.h" line="267"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_IMAGE" value="gimp-image" c:type="GIMP_ICON_IMAGE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="269"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_IMAGE_OPEN"
              value="gimp-image-open"
              c:type="GIMP_ICON_IMAGE_OPEN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="270"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_IMAGE_RELOAD"
              value="gimp-image-reload"
              c:type="GIMP_ICON_IMAGE_RELOAD">
      <source-position filename="libgimpwidgets/gimpicons.h" line="271"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_INPUT_DEVICE"
              value="gimp-input-device"
              c:type="GIMP_ICON_INPUT_DEVICE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="70"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_INVERT" value="gimp-invert" c:type="GIMP_ICON_INVERT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_JOIN_BEVEL"
              value="gimp-join-bevel"
              c:type="GIMP_ICON_JOIN_BEVEL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="275"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_JOIN_MITER"
              value="gimp-join-miter"
              c:type="GIMP_ICON_JOIN_MITER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="273"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_JOIN_ROUND"
              value="gimp-join-round"
              c:type="GIMP_ICON_JOIN_ROUND">
      <source-position filename="libgimpwidgets/gimpicons.h" line="274"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LAYER" value="gimp-layer" c:type="GIMP_ICON_LAYER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="277"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LAYER_ANCHOR"
              value="gimp-anchor"
              c:type="GIMP_ICON_LAYER_ANCHOR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="278"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LAYER_FLOATING_SELECTION"
              value="gimp-floating-selection"
              c:type="GIMP_ICON_LAYER_FLOATING_SELECTION">
      <source-position filename="libgimpwidgets/gimpicons.h" line="279"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LAYER_MASK"
              value="gimp-layer-mask"
              c:type="GIMP_ICON_LAYER_MASK">
      <source-position filename="libgimpwidgets/gimpicons.h" line="280"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LAYER_MERGE_DOWN"
              value="gimp-merge-down"
              c:type="GIMP_ICON_LAYER_MERGE_DOWN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="281"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LAYER_TEXT_LAYER"
              value="gimp-text-layer"
              c:type="GIMP_ICON_LAYER_TEXT_LAYER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="282"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LAYER_TO_IMAGESIZE"
              value="gimp-layer-to-imagesize"
              c:type="GIMP_ICON_LAYER_TO_IMAGESIZE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="283"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LINKED" value="gimp-linked" c:type="GIMP_ICON_LINKED">
      <source-position filename="libgimpwidgets/gimpicons.h" line="51"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LIST" value="gimp-list" c:type="GIMP_ICON_LIST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="285"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LIST_ADD"
              value="list-add"
              c:type="GIMP_ICON_LIST_ADD">
      <source-position filename="libgimpwidgets/gimpicons.h" line="286"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_LIST_REMOVE"
              value="list-remove"
              c:type="GIMP_ICON_LIST_REMOVE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="287"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_MARKER" value="gimp-marker" c:type="GIMP_ICON_MARKER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="52"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_MENU_LEFT"
              value="gimp-menu-left"
              c:type="GIMP_ICON_MENU_LEFT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="289"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_MENU_RIGHT"
              value="gimp-menu-right"
              c:type="GIMP_ICON_MENU_RIGHT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="290"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_OBJECT_DUPLICATE"
              value="gimp-duplicate"
              c:type="GIMP_ICON_OBJECT_DUPLICATE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="292"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_OBJECT_FLIP_HORIZONTAL"
              value="object-flip-horizontal"
              c:type="GIMP_ICON_OBJECT_FLIP_HORIZONTAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="293"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_OBJECT_FLIP_VERTICAL"
              value="object-flip-vertical"
              c:type="GIMP_ICON_OBJECT_FLIP_VERTICAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="294"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_OBJECT_RESIZE"
              value="gimp-resize"
              c:type="GIMP_ICON_OBJECT_RESIZE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="295"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_OBJECT_ROTATE_180"
              value="gimp-rotate-180"
              c:type="GIMP_ICON_OBJECT_ROTATE_180">
      <source-position filename="libgimpwidgets/gimpicons.h" line="296"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_OBJECT_ROTATE_270"
              value="object-rotate-left"
              c:type="GIMP_ICON_OBJECT_ROTATE_270">
      <source-position filename="libgimpwidgets/gimpicons.h" line="297"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_OBJECT_ROTATE_90"
              value="object-rotate-right"
              c:type="GIMP_ICON_OBJECT_ROTATE_90">
      <source-position filename="libgimpwidgets/gimpicons.h" line="298"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_OBJECT_SCALE"
              value="gimp-scale"
              c:type="GIMP_ICON_OBJECT_SCALE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="299"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PALETTE"
              value="gtk-select-color"
              c:type="GIMP_ICON_PALETTE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="72"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PATH" value="gimp-path" c:type="GIMP_ICON_PATH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="301"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PATH_STROKE"
              value="gimp-path-stroke"
              c:type="GIMP_ICON_PATH_STROKE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="302"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PATTERN"
              value="gimp-pattern"
              c:type="GIMP_ICON_PATTERN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="73"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PIVOT_CENTER"
              value="gimp-pivot-center"
              c:type="GIMP_ICON_PIVOT_CENTER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="304"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PIVOT_EAST"
              value="gimp-pivot-east"
              c:type="GIMP_ICON_PIVOT_EAST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="305"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PIVOT_NORTH"
              value="gimp-pivot-north"
              c:type="GIMP_ICON_PIVOT_NORTH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="306"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PIVOT_NORTH_EAST"
              value="gimp-pivot-north-east"
              c:type="GIMP_ICON_PIVOT_NORTH_EAST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="307"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PIVOT_NORTH_WEST"
              value="gimp-pivot-north-west"
              c:type="GIMP_ICON_PIVOT_NORTH_WEST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="308"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PIVOT_SOUTH"
              value="gimp-pivot-south"
              c:type="GIMP_ICON_PIVOT_SOUTH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="309"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PIVOT_SOUTH_EAST"
              value="gimp-pivot-south-east"
              c:type="GIMP_ICON_PIVOT_SOUTH_EAST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="310"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PIVOT_SOUTH_WEST"
              value="gimp-pivot-south-west"
              c:type="GIMP_ICON_PIVOT_SOUTH_WEST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="311"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PIVOT_WEST"
              value="gimp-pivot-west"
              c:type="GIMP_ICON_PIVOT_WEST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="312"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PLUGIN" value="gimp-plugin" c:type="GIMP_ICON_PLUGIN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="74"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PREFERENCES_SYSTEM"
              value="preferences-system"
              c:type="GIMP_ICON_PREFERENCES_SYSTEM">
      <source-position filename="libgimpwidgets/gimpicons.h" line="314"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_PROCESS_STOP"
              value="process-stop"
              c:type="GIMP_ICON_PROCESS_STOP">
      <source-position filename="libgimpwidgets/gimpicons.h" line="316"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_QUICK_MASK_OFF"
              value="gimp-quick-mask-off"
              c:type="GIMP_ICON_QUICK_MASK_OFF">
      <source-position filename="libgimpwidgets/gimpicons.h" line="318"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_QUICK_MASK_ON"
              value="gimp-quick-mask-on"
              c:type="GIMP_ICON_QUICK_MASK_ON">
      <source-position filename="libgimpwidgets/gimpicons.h" line="319"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_RECORD"
              value="media-record"
              c:type="GIMP_ICON_RECORD">
      <source-position filename="libgimpwidgets/gimpicons.h" line="39"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_RESET" value="gimp-reset" c:type="GIMP_ICON_RESET">
      <source-position filename="libgimpwidgets/gimpicons.h" line="40"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SAMPLE_POINT"
              value="gimp-sample-point"
              c:type="GIMP_ICON_SAMPLE_POINT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="75"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION"
              value="gimp-selection"
              c:type="GIMP_ICON_SELECTION">
      <source-position filename="libgimpwidgets/gimpicons.h" line="321"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_ADD"
              value="gimp-selection-add"
              c:type="GIMP_ICON_SELECTION_ADD">
      <source-position filename="libgimpwidgets/gimpicons.h" line="322"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_ALL"
              value="gimp-selection-all"
              c:type="GIMP_ICON_SELECTION_ALL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="323"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_BORDER"
              value="gimp-selection-border"
              c:type="GIMP_ICON_SELECTION_BORDER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="324"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_GROW"
              value="gimp-selection-grow"
              c:type="GIMP_ICON_SELECTION_GROW">
      <source-position filename="libgimpwidgets/gimpicons.h" line="325"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_INTERSECT"
              value="gimp-selection-intersect"
              c:type="GIMP_ICON_SELECTION_INTERSECT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="326"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_NONE"
              value="gimp-selection-none"
              c:type="GIMP_ICON_SELECTION_NONE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="327"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_REPLACE"
              value="gimp-selection-replace"
              c:type="GIMP_ICON_SELECTION_REPLACE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="328"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_SHRINK"
              value="gimp-selection-shrink"
              c:type="GIMP_ICON_SELECTION_SHRINK">
      <source-position filename="libgimpwidgets/gimpicons.h" line="329"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_STROKE"
              value="gimp-selection-stroke"
              c:type="GIMP_ICON_SELECTION_STROKE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="330"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_SUBTRACT"
              value="gimp-selection-subtract"
              c:type="GIMP_ICON_SELECTION_SUBTRACT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="331"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_TO_CHANNEL"
              value="gimp-selection-to-channel"
              c:type="GIMP_ICON_SELECTION_TO_CHANNEL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="332"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SELECTION_TO_PATH"
              value="gimp-selection-to-path"
              c:type="GIMP_ICON_SELECTION_TO_PATH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="333"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SHAPE_CIRCLE"
              value="gimp-shape-circle"
              c:type="GIMP_ICON_SHAPE_CIRCLE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="335"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SHAPE_DIAMOND"
              value="gimp-shape-diamond"
              c:type="GIMP_ICON_SHAPE_DIAMOND">
      <source-position filename="libgimpwidgets/gimpicons.h" line="336"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SHAPE_SQUARE"
              value="gimp-shape-square"
              c:type="GIMP_ICON_SHAPE_SQUARE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="337"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SHRED" value="gimp-shred" c:type="GIMP_ICON_SHRED">
      <source-position filename="libgimpwidgets/gimpicons.h" line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SMARTPHONE"
              value="gimp-smartphone"
              c:type="GIMP_ICON_SMARTPHONE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="53"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SYMMETRY"
              value="gimp-symmetry"
              c:type="GIMP_ICON_SYMMETRY">
      <source-position filename="libgimpwidgets/gimpicons.h" line="76"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_SYSTEM_RUN"
              value="system-run"
              c:type="GIMP_ICON_SYSTEM_RUN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="339"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TEMPLATE"
              value="gimp-template"
              c:type="GIMP_ICON_TEMPLATE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="77"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TEXTURE"
              value="gimp-texture"
              c:type="GIMP_ICON_TEXTURE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="84"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_AIRBRUSH"
              value="gimp-tool-airbrush"
              c:type="GIMP_ICON_TOOL_AIRBRUSH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="341"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_ALIGN"
              value="gimp-tool-align"
              c:type="GIMP_ICON_TOOL_ALIGN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="342"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_BLUR"
              value="gimp-tool-blur"
              c:type="GIMP_ICON_TOOL_BLUR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="343"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_BRIGHTNESS_CONTRAST"
              value="gimp-tool-brightness-contrast"
              c:type="GIMP_ICON_TOOL_BRIGHTNESS_CONTRAST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="344"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_BUCKET_FILL"
              value="gimp-tool-bucket-fill"
              c:type="GIMP_ICON_TOOL_BUCKET_FILL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="345"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_BY_COLOR_SELECT"
              value="gimp-tool-by-color-select"
              c:type="GIMP_ICON_TOOL_BY_COLOR_SELECT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="346"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_CAGE"
              value="gimp-tool-cage"
              c:type="GIMP_ICON_TOOL_CAGE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="347"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_CLONE"
              value="gimp-tool-clone"
              c:type="GIMP_ICON_TOOL_CLONE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="348"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_COLORIZE"
              value="gimp-tool-colorize"
              c:type="GIMP_ICON_TOOL_COLORIZE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="349"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_COLOR_BALANCE"
              value="gimp-tool-color-balance"
              c:type="GIMP_ICON_TOOL_COLOR_BALANCE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="350"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_COLOR_PICKER"
              value="gimp-tool-color-picker"
              c:type="GIMP_ICON_TOOL_COLOR_PICKER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="351"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_COLOR_TEMPERATURE"
              value="gimp-tool-color-temperature"
              c:type="GIMP_ICON_TOOL_COLOR_TEMPERATURE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="352"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_CROP"
              value="gimp-tool-crop"
              c:type="GIMP_ICON_TOOL_CROP">
      <source-position filename="libgimpwidgets/gimpicons.h" line="353"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_CURVES"
              value="gimp-tool-curves"
              c:type="GIMP_ICON_TOOL_CURVES">
      <source-position filename="libgimpwidgets/gimpicons.h" line="354"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_DESATURATE"
              value="gimp-tool-desaturate"
              c:type="GIMP_ICON_TOOL_DESATURATE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="355"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_DODGE"
              value="gimp-tool-dodge"
              c:type="GIMP_ICON_TOOL_DODGE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="356"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_ELLIPSE_SELECT"
              value="gimp-tool-ellipse-select"
              c:type="GIMP_ICON_TOOL_ELLIPSE_SELECT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="357"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_ERASER"
              value="gimp-tool-eraser"
              c:type="GIMP_ICON_TOOL_ERASER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="358"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_EXPOSURE"
              value="gimp-tool-exposure"
              c:type="GIMP_ICON_TOOL_EXPOSURE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="359"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_FLIP"
              value="gimp-tool-flip"
              c:type="GIMP_ICON_TOOL_FLIP">
      <source-position filename="libgimpwidgets/gimpicons.h" line="360"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_FOREGROUND_SELECT"
              value="gimp-tool-foreground-select"
              c:type="GIMP_ICON_TOOL_FOREGROUND_SELECT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="361"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_FREE_SELECT"
              value="gimp-tool-free-select"
              c:type="GIMP_ICON_TOOL_FREE_SELECT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="362"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_FUZZY_SELECT"
              value="gimp-tool-fuzzy-select"
              c:type="GIMP_ICON_TOOL_FUZZY_SELECT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="363"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_GRADIENT"
              value="gimp-tool-gradient"
              c:type="GIMP_ICON_TOOL_GRADIENT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="364"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_HANDLE_TRANSFORM"
              value="gimp-tool-handle-transform"
              c:type="GIMP_ICON_TOOL_HANDLE_TRANSFORM">
      <source-position filename="libgimpwidgets/gimpicons.h" line="365"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_HEAL"
              value="gimp-tool-heal"
              c:type="GIMP_ICON_TOOL_HEAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="366"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_HUE_SATURATION"
              value="gimp-tool-hue-saturation"
              c:type="GIMP_ICON_TOOL_HUE_SATURATION">
      <source-position filename="libgimpwidgets/gimpicons.h" line="367"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_INK"
              value="gimp-tool-ink"
              c:type="GIMP_ICON_TOOL_INK">
      <source-position filename="libgimpwidgets/gimpicons.h" line="368"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_ISCISSORS"
              value="gimp-tool-iscissors"
              c:type="GIMP_ICON_TOOL_ISCISSORS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="369"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_LEVELS"
              value="gimp-tool-levels"
              c:type="GIMP_ICON_TOOL_LEVELS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="370"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_MEASURE"
              value="gimp-tool-measure"
              c:type="GIMP_ICON_TOOL_MEASURE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="371"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_MOVE"
              value="gimp-tool-move"
              c:type="GIMP_ICON_TOOL_MOVE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="372"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_MYPAINT_BRUSH"
              value="gimp-tool-mypaint-brush"
              c:type="GIMP_ICON_TOOL_MYPAINT_BRUSH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="373"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_N_POINT_DEFORMATION"
              value="gimp-tool-n-point-deformation"
              c:type="GIMP_ICON_TOOL_N_POINT_DEFORMATION">
      <source-position filename="libgimpwidgets/gimpicons.h" line="374"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_OFFSET"
              value="gimp-tool-offset"
              c:type="GIMP_ICON_TOOL_OFFSET">
      <source-position filename="libgimpwidgets/gimpicons.h" line="375"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_PAINTBRUSH"
              value="gimp-tool-paintbrush"
              c:type="GIMP_ICON_TOOL_PAINTBRUSH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="376"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_PATH"
              value="gimp-tool-path"
              c:type="GIMP_ICON_TOOL_PATH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="377"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_PENCIL"
              value="gimp-tool-pencil"
              c:type="GIMP_ICON_TOOL_PENCIL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="378"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_PERSPECTIVE"
              value="gimp-tool-perspective"
              c:type="GIMP_ICON_TOOL_PERSPECTIVE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="379"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_PERSPECTIVE_CLONE"
              value="gimp-tool-perspective-clone"
              c:type="GIMP_ICON_TOOL_PERSPECTIVE_CLONE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="380"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_POSTERIZE"
              value="gimp-tool-posterize"
              c:type="GIMP_ICON_TOOL_POSTERIZE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="381"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_PRESET"
              value="gimp-tool-preset"
              c:type="GIMP_ICON_TOOL_PRESET">
      <source-position filename="libgimpwidgets/gimpicons.h" line="78"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_RECT_SELECT"
              value="gimp-tool-rect-select"
              c:type="GIMP_ICON_TOOL_RECT_SELECT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="382"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_ROTATE"
              value="gimp-tool-rotate"
              c:type="GIMP_ICON_TOOL_ROTATE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="383"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_SCALE"
              value="gimp-tool-scale"
              c:type="GIMP_ICON_TOOL_SCALE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="384"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_SEAMLESS_CLONE"
              value="gimp-tool-seamless-clone"
              c:type="GIMP_ICON_TOOL_SEAMLESS_CLONE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="385"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_SHADOWS_HIGHLIGHTS"
              value="gimp-tool-shadows-highlights"
              c:type="GIMP_ICON_TOOL_SHADOWS_HIGHLIGHTS">
      <source-position filename="libgimpwidgets/gimpicons.h" line="386"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_SHEAR"
              value="gimp-tool-shear"
              c:type="GIMP_ICON_TOOL_SHEAR">
      <source-position filename="libgimpwidgets/gimpicons.h" line="387"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_SMUDGE"
              value="gimp-tool-smudge"
              c:type="GIMP_ICON_TOOL_SMUDGE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="388"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_TEXT"
              value="gimp-tool-text"
              c:type="GIMP_ICON_TOOL_TEXT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="389"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_THRESHOLD"
              value="gimp-tool-threshold"
              c:type="GIMP_ICON_TOOL_THRESHOLD">
      <source-position filename="libgimpwidgets/gimpicons.h" line="390"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_TRANSFORM_3D"
              value="gimp-tool-transform-3d"
              c:type="GIMP_ICON_TOOL_TRANSFORM_3D">
      <source-position filename="libgimpwidgets/gimpicons.h" line="391"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_UNIFIED_TRANSFORM"
              value="gimp-tool-unified-transform"
              c:type="GIMP_ICON_TOOL_UNIFIED_TRANSFORM">
      <source-position filename="libgimpwidgets/gimpicons.h" line="392"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_WARP"
              value="gimp-tool-warp"
              c:type="GIMP_ICON_TOOL_WARP">
      <source-position filename="libgimpwidgets/gimpicons.h" line="393"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TOOL_ZOOM"
              value="gimp-tool-zoom"
              c:type="GIMP_ICON_TOOL_ZOOM">
      <source-position filename="libgimpwidgets/gimpicons.h" line="394"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TRANSFORM_3D_CAMERA"
              value="gimp-transform-3d-camera"
              c:type="GIMP_ICON_TRANSFORM_3D_CAMERA">
      <source-position filename="libgimpwidgets/gimpicons.h" line="396"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TRANSFORM_3D_MOVE"
              value="gimp-transform-3d-move"
              c:type="GIMP_ICON_TRANSFORM_3D_MOVE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="397"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TRANSFORM_3D_ROTATE"
              value="gimp-transform-3d-rotate"
              c:type="GIMP_ICON_TRANSFORM_3D_ROTATE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="398"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_TRANSPARENCY"
              value="gimp-transparency"
              c:type="GIMP_ICON_TRANSPARENCY">
      <source-position filename="libgimpwidgets/gimpicons.h" line="54"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_VIDEO" value="gimp-video" c:type="GIMP_ICON_VIDEO">
      <source-position filename="libgimpwidgets/gimpicons.h" line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_VIEW_FULLSCREEN"
              value="view-fullscreen"
              c:type="GIMP_ICON_VIEW_FULLSCREEN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="401"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_VIEW_REFRESH"
              value="view-refresh"
              c:type="GIMP_ICON_VIEW_REFRESH">
      <source-position filename="libgimpwidgets/gimpicons.h" line="400"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_VISIBLE"
              value="gimp-visible"
              c:type="GIMP_ICON_VISIBLE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_WEB" value="gimp-web" c:type="GIMP_ICON_WEB">
      <source-position filename="libgimpwidgets/gimpicons.h" line="57"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_WILBER" value="gimp-wilber" c:type="GIMP_ICON_WILBER">
      <source-position filename="libgimpwidgets/gimpicons.h" line="403"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_WILBER_EEK"
              value="gimp-wilber-eek"
              c:type="GIMP_ICON_WILBER_EEK">
      <source-position filename="libgimpwidgets/gimpicons.h" line="404"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_WINDOW_CLOSE"
              value="window-close"
              c:type="GIMP_ICON_WINDOW_CLOSE">
      <source-position filename="libgimpwidgets/gimpicons.h" line="406"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_WINDOW_MOVE_TO_SCREEN"
              value="gimp-move-to-screen"
              c:type="GIMP_ICON_WINDOW_MOVE_TO_SCREEN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="407"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_WINDOW_NEW"
              value="window-new"
              c:type="GIMP_ICON_WINDOW_NEW">
      <source-position filename="libgimpwidgets/gimpicons.h" line="408"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_ZOOM_FIT_BEST"
              value="zoom-fit-best"
              c:type="GIMP_ICON_ZOOM_FIT_BEST">
      <source-position filename="libgimpwidgets/gimpicons.h" line="413"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_ZOOM_FOLLOW_WINDOW"
              value="gimp-zoom-follow-window"
              c:type="GIMP_ICON_ZOOM_FOLLOW_WINDOW">
      <source-position filename="libgimpwidgets/gimpicons.h" line="414"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_ZOOM_IN" value="zoom-in" c:type="GIMP_ICON_ZOOM_IN">
      <source-position filename="libgimpwidgets/gimpicons.h" line="410"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_ZOOM_ORIGINAL"
              value="zoom-original"
              c:type="GIMP_ICON_ZOOM_ORIGINAL">
      <source-position filename="libgimpwidgets/gimpicons.h" line="411"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="ICON_ZOOM_OUT"
              value="zoom-out"
              c:type="GIMP_ICON_ZOOM_OUT">
      <source-position filename="libgimpwidgets/gimpicons.h" line="412"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="IMAGE_COMBO_BOX"
                    c:identifier="GIMP_IMAGE_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimp/gimpimagecombobox.h" line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INT_COMBO_BOX"
                    c:identifier="GIMP_INT_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpintcombobox.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INT_COMBO_BOX_CLASS"
                    c:identifier="GIMP_INT_COMBO_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpintcombobox.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INT_COMBO_BOX_GET_CLASS"
                    c:identifier="GIMP_INT_COMBO_BOX_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpintcombobox.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INT_STORE"
                    c:identifier="GIMP_INT_STORE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpintstore.h" line="57"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INT_STORE_CLASS"
                    c:identifier="GIMP_INT_STORE_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpintstore.h" line="58"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INT_STORE_GET_CLASS"
                    c:identifier="GIMP_INT_STORE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpintstore.h" line="61"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ASPECT_PREVIEW"
                    c:identifier="GIMP_IS_ASPECT_PREVIEW"
                    introspectable="0">
      <source-position filename="libgimp/gimpaspectpreview.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ASPECT_PREVIEW_CLASS"
                    c:identifier="GIMP_IS_ASPECT_PREVIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpaspectpreview.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BROWSER"
                    c:identifier="GIMP_IS_BROWSER"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbrowser.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BROWSER_CLASS"
                    c:identifier="GIMP_IS_BROWSER_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbrowser.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BRUSH_SELECT_BUTTON"
                    c:identifier="GIMP_IS_BRUSH_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimpbrushselectbutton.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BRUSH_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_IS_BRUSH_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpbrushselectbutton.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BUSY_BOX"
                    c:identifier="GIMP_IS_BUSY_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbusybox.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BUSY_BOX_CLASS"
                    c:identifier="GIMP_IS_BUSY_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbusybox.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BUTTON"
                    c:identifier="GIMP_IS_BUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbutton.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BUTTON_CLASS"
                    c:identifier="GIMP_IS_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpbutton.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CELL_RENDERER_COLOR"
                    c:identifier="GIMP_IS_CELL_RENDERER_COLOR"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CELL_RENDERER_COLOR_CLASS"
                    c:identifier="GIMP_IS_CELL_RENDERER_COLOR_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcellrenderercolor.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CELL_RENDERER_TOGGLE"
                    c:identifier="GIMP_IS_CELL_RENDERER_TOGGLE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CELL_RENDERER_TOGGLE_CLASS"
                    c:identifier="GIMP_IS_CELL_RENDERER_TOGGLE_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcellrenderertoggle.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CHAIN_BUTTON"
                    c:identifier="GIMP_IS_CHAIN_BUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpchainbutton.h" line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CHAIN_BUTTON_CLASS"
                    c:identifier="GIMP_IS_CHAIN_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpchainbutton.h" line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CHANNEL_COMBO_BOX"
                    c:identifier="GIMP_IS_CHANNEL_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimp/gimpitemcombobox.h" line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_AREA"
                    c:identifier="GIMP_IS_COLOR_AREA"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorarea.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_AREA_CLASS"
                    c:identifier="GIMP_IS_COLOR_AREA_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorarea.h" line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_BUTTON"
                    c:identifier="GIMP_IS_COLOR_BUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorbutton.h" line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_BUTTON_CLASS"
                    c:identifier="GIMP_IS_COLOR_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorbutton.h" line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_DISPLAY"
                    c:identifier="GIMP_IS_COLOR_DISPLAY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolordisplay.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_DISPLAY_CLASS"
                    c:identifier="GIMP_IS_COLOR_DISPLAY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolordisplay.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_DISPLAY_STACK"
                    c:identifier="GIMP_IS_COLOR_DISPLAY_STACK"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_DISPLAY_STACK_CLASS"
                    c:identifier="GIMP_IS_COLOR_DISPLAY_STACK_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolordisplaystack.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_HEX_ENTRY"
                    c:identifier="GIMP_IS_COLOR_HEX_ENTRY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_HEX_ENTRY_CLASS"
                    c:identifier="GIMP_IS_COLOR_HEX_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorhexentry.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_NOTEBOOK"
                    c:identifier="GIMP_IS_COLOR_NOTEBOOK"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_NOTEBOOK_CLASS"
                    c:identifier="GIMP_IS_COLOR_NOTEBOOK_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolornotebook.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_PROFILE_CHOOSER_DIALOG"
                    c:identifier="GIMP_IS_COLOR_PROFILE_CHOOSER_DIALOG"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                       line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_PROFILE_CHOOSER_DIALOG_CLASS"
                    c:identifier="GIMP_IS_COLOR_PROFILE_CHOOSER_DIALOG_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilechooserdialog.h"
                       line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_PROFILE_COMBO_BOX"
                    c:identifier="GIMP_IS_COLOR_PROFILE_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_PROFILE_COMBO_BOX_CLASS"
                    c:identifier="GIMP_IS_COLOR_PROFILE_COMBO_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilecombobox.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_PROFILE_STORE"
                    c:identifier="GIMP_IS_COLOR_PROFILE_STORE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_PROFILE_STORE_CLASS"
                    c:identifier="GIMP_IS_COLOR_PROFILE_STORE_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofilestore.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_PROFILE_VIEW"
                    c:identifier="GIMP_IS_COLOR_PROFILE_VIEW"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                       line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_PROFILE_VIEW_CLASS"
                    c:identifier="GIMP_IS_COLOR_PROFILE_VIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorprofileview.h"
                       line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_SELECTION"
                    c:identifier="GIMP_IS_COLOR_SELECTION"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorselection.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_SELECTION_CLASS"
                    c:identifier="GIMP_IS_COLOR_SELECTION_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorselection.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_SELECTOR"
                    c:identifier="GIMP_IS_COLOR_SELECTOR"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorselector.h"
                       line="58"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_SELECTOR_CLASS"
                    c:identifier="GIMP_IS_COLOR_SELECTOR_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpcolorselector.h"
                       line="59"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DIALOG"
                    c:identifier="GIMP_IS_DIALOG"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpdialog.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DIALOG_CLASS"
                    c:identifier="GIMP_IS_DIALOG_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpdialog.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DRAWABLE_COMBO_BOX"
                    c:identifier="GIMP_IS_DRAWABLE_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimp/gimpitemcombobox.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DRAWABLE_PREVIEW"
                    c:identifier="GIMP_IS_DRAWABLE_PREVIEW"
                    introspectable="0">
      <source-position filename="libgimp/gimpdrawablepreview.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DRAWABLE_PREVIEW_CLASS"
                    c:identifier="GIMP_IS_DRAWABLE_PREVIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpdrawablepreview.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENUM_COMBO_BOX"
                    c:identifier="GIMP_IS_ENUM_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumcombobox.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENUM_COMBO_BOX_CLASS"
                    c:identifier="GIMP_IS_ENUM_COMBO_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumcombobox.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENUM_LABEL"
                    c:identifier="GIMP_IS_ENUM_LABEL"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumlabel.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENUM_LABEL_CLASS"
                    c:identifier="GIMP_IS_ENUM_LABEL_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumlabel.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENUM_STORE"
                    c:identifier="GIMP_IS_ENUM_STORE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumstore.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ENUM_STORE_CLASS"
                    c:identifier="GIMP_IS_ENUM_STORE_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpenumstore.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FILE_ENTRY"
                    c:identifier="GIMP_IS_FILE_ENTRY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpfileentry.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FILE_ENTRY_CLASS"
                    c:identifier="GIMP_IS_FILE_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpfileentry.h" line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FONT_SELECT_BUTTON"
                    c:identifier="GIMP_IS_FONT_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimpfontselectbutton.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FONT_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_IS_FONT_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpfontselectbutton.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FRAME"
                    c:identifier="GIMP_IS_FRAME"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpframe.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FRAME_CLASS"
                    c:identifier="GIMP_IS_FRAME_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpframe.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GRADIENT_SELECT_BUTTON"
                    c:identifier="GIMP_IS_GRADIENT_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimpgradientselectbutton.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GRADIENT_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_IS_GRADIENT_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpgradientselectbutton.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_HINT_BOX"
                    c:identifier="GIMP_IS_HINT_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimphintbox.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_HINT_BOX_CLASS"
                    c:identifier="GIMP_IS_HINT_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimphintbox.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_IMAGE_COMBO_BOX"
                    c:identifier="GIMP_IS_IMAGE_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimp/gimpimagecombobox.h" line="44"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INT_COMBO_BOX"
                    c:identifier="GIMP_IS_INT_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpintcombobox.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INT_COMBO_BOX_CLASS"
                    c:identifier="GIMP_IS_INT_COMBO_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpintcombobox.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INT_STORE"
                    c:identifier="GIMP_IS_INT_STORE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpintstore.h" line="59"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INT_STORE_CLASS"
                    c:identifier="GIMP_IS_INT_STORE_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpintstore.h" line="60"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LAYER_COMBO_BOX"
                    c:identifier="GIMP_IS_LAYER_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimp/gimpitemcombobox.h" line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEMSIZE_ENTRY"
                    c:identifier="GIMP_IS_MEMSIZE_ENTRY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpmemsizeentry.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_MEMSIZE_ENTRY_CLASS"
                    c:identifier="GIMP_IS_MEMSIZE_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpmemsizeentry.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_NUMBER_PAIR_ENTRY"
                    c:identifier="GIMP_IS_NUMBER_PAIR_ENTRY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_NUMBER_PAIR_ENTRY_CLASS"
                    c:identifier="GIMP_IS_NUMBER_PAIR_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OFFSET_AREA"
                    c:identifier="GIMP_IS_OFFSET_AREA"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OFFSET_AREA_CLASS"
                    c:identifier="GIMP_IS_OFFSET_AREA_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAGE_SELECTOR"
                    c:identifier="GIMP_IS_PAGE_SELECTOR"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppageselector.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAGE_SELECTOR_CLASS"
                    c:identifier="GIMP_IS_PAGE_SELECTOR_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppageselector.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PALETTE_SELECT_BUTTON"
                    c:identifier="GIMP_IS_PALETTE_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimppaletteselectbutton.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PALETTE_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_IS_PALETTE_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimppaletteselectbutton.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PATH_EDITOR"
                    c:identifier="GIMP_IS_PATH_EDITOR"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppatheditor.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PATH_EDITOR_CLASS"
                    c:identifier="GIMP_IS_PATH_EDITOR_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppatheditor.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PATTERN_SELECT_BUTTON"
                    c:identifier="GIMP_IS_PATTERN_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimppatternselectbutton.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PATTERN_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_IS_PATTERN_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimppatternselectbutton.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICK_BUTTON"
                    c:identifier="GIMP_IS_PICK_BUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppickbutton.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PICK_BUTTON_CLASS"
                    c:identifier="GIMP_IS_PICK_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppickbutton.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PREVIEW"
                    c:identifier="GIMP_IS_PREVIEW"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppreview.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PREVIEW_AREA"
                    c:identifier="GIMP_IS_PREVIEW_AREA"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppreviewarea.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PREVIEW_AREA_CLASS"
                    c:identifier="GIMP_IS_PREVIEW_AREA_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppreviewarea.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PREVIEW_CLASS"
                    c:identifier="GIMP_IS_PREVIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppreview.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROCEDURE_DIALOG"
                    c:identifier="GIMP_IS_PROCEDURE_DIALOG"
                    introspectable="0">
      <source-position filename="libgimp/gimpproceduredialog.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROCEDURE_DIALOG_CLASS"
                    c:identifier="GIMP_IS_PROCEDURE_DIALOG_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpproceduredialog.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROC_BROWSER_DIALOG"
                    c:identifier="GIMP_IS_PROC_BROWSER_DIALOG"
                    introspectable="0">
      <source-position filename="libgimp/gimpprocbrowserdialog.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROC_BROWSER_DIALOG_CLASS"
                    c:identifier="GIMP_IS_PROC_BROWSER_DIALOG_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpprocbrowserdialog.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROGRESS_BAR"
                    c:identifier="GIMP_IS_PROGRESS_BAR"
                    introspectable="0">
      <source-position filename="libgimp/gimpprogressbar.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROGRESS_BAR_CLASS"
                    c:identifier="GIMP_IS_PROGRESS_BAR_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpprogressbar.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RULER"
                    c:identifier="GIMP_IS_RULER"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpruler.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RULER_CLASS"
                    c:identifier="GIMP_IS_RULER_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpruler.h" line="32"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SCROLLED_PREVIEW"
                    c:identifier="GIMP_IS_SCROLLED_PREVIEW"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SCROLLED_PREVIEW_CLASS"
                    c:identifier="GIMP_IS_SCROLLED_PREVIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SELECT_BUTTON"
                    c:identifier="GIMP_IS_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimpselectbutton.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_IS_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpselectbutton.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SIZE_ENTRY"
                    c:identifier="GIMP_IS_SIZE_ENTRY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpsizeentry.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SIZE_ENTRY_CLASS"
                    c:identifier="GIMP_IS_SIZE_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpsizeentry.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SPIN_BUTTON"
                    c:identifier="GIMP_IS_SPIN_BUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpspinbutton.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SPIN_BUTTON_CLASS"
                    c:identifier="GIMP_IS_SPIN_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpspinbutton.h" line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STRING_COMBO_BOX"
                    c:identifier="GIMP_IS_STRING_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STRING_COMBO_BOX_CLASS"
                    c:identifier="GIMP_IS_STRING_COMBO_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_UNIT_COMBO_BOX"
                    c:identifier="GIMP_IS_UNIT_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpunitcombobox.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_UNIT_COMBO_BOX_CLASS"
                    c:identifier="GIMP_IS_UNIT_COMBO_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpunitcombobox.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_UNIT_STORE"
                    c:identifier="GIMP_IS_UNIT_STORE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpunitstore.h" line="52"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_UNIT_STORE_CLASS"
                    c:identifier="GIMP_IS_UNIT_STORE_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpunitstore.h" line="53"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_VECTORS_COMBO_BOX"
                    c:identifier="GIMP_IS_VECTORS_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimp/gimpitemcombobox.h" line="49"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ZOOM_MODEL"
                    c:identifier="GIMP_IS_ZOOM_MODEL"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpzoommodel.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ZOOM_MODEL_CLASS"
                    c:identifier="GIMP_IS_ZOOM_MODEL_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpzoommodel.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ZOOM_PREVIEW"
                    c:identifier="GIMP_IS_ZOOM_PREVIEW"
                    introspectable="0">
      <source-position filename="libgimp/gimpzoompreview.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ZOOM_PREVIEW_CLASS"
                    c:identifier="GIMP_IS_ZOOM_PREVIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpzoompreview.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="ImageComboBox"
           c:symbol-prefix="image_combo_box"
           c:type="GimpImageComboBox"
           parent="IntComboBox"
           glib:type-name="GimpImageComboBox"
           glib:get-type="gimp_image_combo_box_get_type">
      <doc xml:space="preserve"
           filename="libgimp/gimpimagecombobox.c"
           line="38">A widget providing a popup menu of images.</doc>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new"
                   c:identifier="gimp_image_combo_box_new"
                   version="2.2">
        <doc xml:space="preserve"
             filename="libgimp/gimpimagecombobox.c"
             line="129">Creates a new #GimpIntComboBox filled with all currently opened
images. If a @constraint function is specified, it is called for
each image and only if the function returns %TRUE, the image is
added to the combobox.

You should use gimp_int_combo_box_connect() to initialize and
connect the combo. Use gimp_int_combo_box_set_active() to get the
active image ID and gimp_int_combo_box_get_active() to retrieve the
ID of the selected image.</doc>
        <source-position filename="libgimp/gimpimagecombobox.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpimagecombobox.c"
               line="145">a new #GimpIntComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="constraint"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="libgimp/gimpimagecombobox.c"
                 line="131">a #GimpImageConstraintFunc or %NULL</doc>
            <type name="ImageConstraintFunc" c:type="GimpImageConstraintFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimp/gimpimagecombobox.c"
                 line="132">a pointer that is passed to @constraint</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="data_destroy"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="libgimp/gimpimagecombobox.c"
                 line="133">Destroy function for @data.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <callback name="ImageConstraintFunc" c:type="GimpImageConstraintFunc">
      <source-position filename="libgimp/gimpimagecombobox.h" line="38"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="image" transfer-ownership="none">
          <type name="Gimp.Image" c:type="GimpImage*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="IntComboBox"
           c:symbol-prefix="int_combo_box"
           c:type="GimpIntComboBox"
           parent="Gtk.ComboBox"
           glib:type-name="GimpIntComboBox"
           glib:get-type="gimp_int_combo_box_get_type"
           glib:type-struct="IntComboBoxClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpintcombobox.c"
           line="36">A widget providing a popup menu of integer values (e.g. enums).</doc>
      <source-position filename="libgimpwidgets/gimpintcombobox.h" line="63"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new"
                   c:identifier="gimp_int_combo_box_new"
                   version="2.2"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="254">Creates a GtkComboBox that has integer values associated with each
item. The items to fill the combo box with are specified as a %NULL
terminated list of label/value pairs.

If you need to construct an empty #GimpIntComboBox, it's best to use
g_object_new (GIMP_TYPE_INT_COMBO_BOX, NULL).</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintcombobox.c"
               line="267">a new #GimpIntComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="first_label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="256">the label of the first item</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="first_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="257">the value of the first item</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="258">a %NULL terminated list of more label, value pairs</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_array"
                   c:identifier="gimp_int_combo_box_new_array"
                   version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="320">A variant of gimp_int_combo_box_new() that takes an array of labels.
The array indices are used as values.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintcombobox.c"
               line="328">a new #GimpIntComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="n_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="322">the number of values</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="labels" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="323">an array of labels (array length must be @n_values)</doc>
            <type name="utf8" c:type="const gchar**"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_valist"
                   c:identifier="gimp_int_combo_box_new_valist"
                   version="2.2"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="288">A variant of gimp_int_combo_box_new() that takes a va_list of
label/value pairs.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintcombobox.c"
               line="297">a new #GimpIntComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="first_label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="290">the label of the first item</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="first_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="291">the value of the first item</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="292">a va_list with more values</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append"
              c:identifier="gimp_int_combo_box_append"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="397">This function provides a convenient way to append items to a
#GimpIntComboBox. It appends a row to the @combo_box's list store
and calls gtk_list_store_set() for you.

The column number must be taken from the enum #GimpIntStoreColumns.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="399">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="400">pairs of column number and value, terminated with -1</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="connect"
              c:identifier="gimp_int_combo_box_connect"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="562">A convenience function that sets the initial @value of a
#GimpIntComboBox and connects @callback to the "changed"
signal.

This function also calls the @callback once after setting the
initial @value. This is often convenient when working with combo
boxes that select a default active item, like for example
gimp_drawable_combo_box_new(). If you pass an invalid initial
@value, the @callback will be called with the default item active.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintcombobox.c"
               line="580">the signal handler ID as returned by g_signal_connect()</doc>
          <type name="gulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="564">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="565">the value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="566">a callback to connect to the @combo_box's "changed" signal</doc>
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="567">a pointer passed as data to g_signal_connect()</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="data_destroy"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="568">Destroy function for @data.</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_active"
              c:identifier="gimp_int_combo_box_get_active"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="463">Retrieves the value of the selected (active) item in the @combo_box.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintcombobox.c"
               line="470">%TRUE if @value has been set or %FALSE if no item was
              active.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="465">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="466">return location for the integer value</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_active_user_data"
              c:identifier="gimp_int_combo_box_get_active_user_data"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="529">Retrieves the user-data of the selected (active) item in the @combo_box.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintcombobox.c"
               line="536">%TRUE if @user_data has been set or %FALSE if no item was
              active.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="531">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
          <parameter name="user_data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="532">return location for the gpointer value</doc>
            <type name="gpointer" c:type="gpointer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="gimp_int_combo_box_get_label"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="657">Returns the label previously set with gimp_int_combo_box_set_label(),
or %NULL,</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintcombobox.c"
               line="664">the @combo_box' label.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="659">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_layout"
              c:identifier="gimp_int_combo_box_get_layout"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="705">Returns the layout of @combo_box</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintcombobox.c"
               line="711">the @combo_box's layout.</doc>
          <type name="IntComboBoxLayout" c:type="GimpIntComboBoxLayout"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="707">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="prepend"
              c:identifier="gimp_int_combo_box_prepend"
              version="2.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="364">This function provides a convenient way to prepend items to a
#GimpIntComboBox. It prepends a row to the @combo_box's list store
and calls gtk_list_store_set() for you.

The column number must be taken from the enum #GimpIntStoreColumns.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="366">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="367">pairs of column number and value, terminated with -1</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_active"
              c:identifier="gimp_int_combo_box_set_active"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="430">Looks up the item that belongs to the given @value and makes it the
selected item in the @combo_box.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintcombobox.c"
               line="438">%TRUE on success or %FALSE if there was no item for
              this value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="432">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="433">an integer value</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_active_by_user_data"
              c:identifier="gimp_int_combo_box_set_active_by_user_data"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="496">Looks up the item that has the given @user_data and makes it the
selected item in the @combo_box.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintcombobox.c"
               line="504">%TRUE on success or %FALSE if there was no item for
              this user-data.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="498">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="499">an integer value</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_label"
              c:identifier="gimp_int_combo_box_set_label"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="608">Sets a caption on the @combo_box that will be displayed
left-aligned inside the box. When a label is set, the remaining
contents of the box will be right-aligned. This is useful for
places where screen estate is rare, like in tool options.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="610">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="611">a string to be shown as label</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_layout"
              c:identifier="gimp_int_combo_box_set_layout"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="676">Sets the layout of @combo_box to @layout.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="678">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
          <parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="679">the combo box layout</doc>
            <type name="IntComboBoxLayout" c:type="GimpIntComboBoxLayout"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sensitivity"
              c:identifier="gimp_int_combo_box_set_sensitivity"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="724">Sets a function that is used to decide about the sensitivity of
rows in the @combo_box. Use this if you want to set certain rows
insensitive.

Calling gtk_widget_queue_draw() on the @combo_box will cause the
sensitivity to be updated.</doc>
        <source-position filename="libgimpwidgets/gimpintcombobox.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="726">a #GimpIntComboBox</doc>
            <type name="IntComboBox" c:type="GimpIntComboBox*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="727">a function that returns a boolean value, or %NULL to unset</doc>
            <type name="IntSensitivityFunc" c:type="GimpIntSensitivityFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="728">data to pass to @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintcombobox.c"
                 line="729">destroy notification for @data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <property name="ellipsize"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="106">Specifies the preferred place to ellipsize text in the combo-box,
if the cell renderer does not have enough room to display the
entire string.</doc>
        <type name="Pango.EllipsizeMode"/>
      </property>
      <property name="label"
                version="2.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="123">Sets a label on the combo-box, see gimp_int_combo_box_set_label().</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="layout"
                version="2.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintcombobox.c"
             line="137">Specifies the combo box layout.</doc>
        <type name="IntComboBoxLayout"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.ComboBox" c:type="GtkComboBox"/>
      </field>
      <field name="priv">
        <type name="IntComboBoxPrivate" c:type="GimpIntComboBoxPrivate*"/>
      </field>
    </class>
    <record name="IntComboBoxClass"
            c:type="GimpIntComboBoxClass"
            glib:is-gtype-struct-for="IntComboBox">
      <source-position filename="libgimpwidgets/gimpintcombobox.h" line="63"/>
      <field name="parent_class">
        <type name="Gtk.ComboBoxClass" c:type="GtkComboBoxClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpintcombobox.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpintcombobox.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpintcombobox.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpintcombobox.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpintcombobox.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpintcombobox.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpintcombobox.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpintcombobox.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="IntComboBoxLayout"
                 version="2.10"
                 glib:type-name="GimpIntComboBoxLayout"
                 glib:get-type="gimp_int_combo_box_layout_get_type"
                 c:type="GimpIntComboBoxLayout">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsenums.h"
           line="148">Possible layouts for #GimpIntComboBox.</doc>
      <member name="icon_only"
              value="0"
              c:identifier="GIMP_INT_COMBO_BOX_LAYOUT_ICON_ONLY"
              glib:nick="icon-only">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="150">show icons only</doc>
      </member>
      <member name="abbreviated"
              value="1"
              c:identifier="GIMP_INT_COMBO_BOX_LAYOUT_ABBREVIATED"
              glib:nick="abbreviated">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="151">show icons and abbreviated labels,
                                        when available</doc>
      </member>
      <member name="full"
              value="2"
              c:identifier="GIMP_INT_COMBO_BOX_LAYOUT_FULL"
              glib:nick="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="153">show icons and full labels</doc>
      </member>
    </enumeration>
    <record name="IntComboBoxPrivate"
            c:type="GimpIntComboBoxPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpintcombobox.h" line="40"/>
    </record>
    <callback name="IntSensitivityFunc" c:type="GimpIntSensitivityFunc">
      <source-position filename="libgimpwidgets/gimpintcombobox.h" line="71"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="IntStore"
           c:symbol-prefix="int_store"
           c:type="GimpIntStore"
           parent="Gtk.ListStore"
           glib:type-name="GimpIntStore"
           glib:get-type="gimp_int_store_get_type"
           glib:type-struct="IntStoreClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpintstore.c"
           line="37">A model for integer based name-value pairs (e.g. enums)</doc>
      <source-position filename="libgimpwidgets/gimpintstore.h" line="87"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.TreeDragDest"/>
      <implements name="Gtk.TreeDragSource"/>
      <implements name="Gtk.TreeModel"/>
      <implements name="Gtk.TreeSortable"/>
      <constructor name="new"
                   c:identifier="gimp_int_store_new"
                   version="2.2"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.c"
             line="261">Creates a #GtkListStore with a number of useful columns.
#GimpIntStore is especially useful if the items you want to store
are identified using an integer value.

If you need to construct an empty #GimpIntStore, it's best to use
g_object_new (GIMP_TYPE_INT_STORE, NULL).</doc>
        <source-position filename="libgimpwidgets/gimpintstore.h" line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintstore.c"
               line="274">a new #GimpIntStore.</doc>
          <type name="Gtk.ListStore" c:type="GtkListStore*"/>
        </return-value>
        <parameters>
          <parameter name="first_label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="263">the label of the first item</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="first_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="264">the value of the first item</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="265">a %NULL terminated list of more label, value pairs</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_valist"
                   c:identifier="gimp_int_store_new_valist"
                   version="3.0"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.c"
             line="295">A variant of gimp_int_store_new() that takes a va_list of
label/value pairs.</doc>
        <source-position filename="libgimpwidgets/gimpintstore.h" line="95"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintstore.c"
               line="304">a new #GimpIntStore.</doc>
          <type name="Gtk.ListStore" c:type="GtkListStore*"/>
        </return-value>
        <parameters>
          <parameter name="first_label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="297">the label of the first item</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="first_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="298">the value of the first item</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="299">a va_list with more values</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="lookup_by_user_data"
                c:identifier="gimp_int_store_lookup_by_user_data"
                version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.c"
             line="374">Iterate over the @model looking for @user_data.</doc>
        <source-position filename="libgimpwidgets/gimpintstore.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintstore.c"
               line="382">%TRUE if the user-data has been located and @iter is
              valid, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="376">a #GimpIntStore</doc>
            <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="377">a gpointer "user-data" to lookup in the @model</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="iter"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="378">return location for the iter of the given @user_data</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </function>
      <function name="lookup_by_value"
                c:identifier="gimp_int_store_lookup_by_value"
                version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.c"
             line="335">Iterate over the @model looking for @value.</doc>
        <source-position filename="libgimpwidgets/gimpintstore.h" line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpintstore.c"
               line="343">%TRUE if the value has been located and @iter is
              valid, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="337">a #GimpIntStore</doc>
            <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="338">an integer value to lookup in the @model</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="iter"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpintstore.c"
                 line="339">return location for the iter of the given @value</doc>
            <type name="Gtk.TreeIter" c:type="GtkTreeIter*"/>
          </parameter>
        </parameters>
      </function>
      <property name="user-data-type"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.c"
             line="104">Sets the #GType for the GIMP_INT_STORE_USER_DATA column.

You need to set this property when constructing the store if you want
to use the GIMP_INT_STORE_USER_DATA column and want to have the store
handle ref-counting of your user data.</doc>
        <type name="GType" c:type="GType"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.ListStore" c:type="GtkListStore"/>
      </field>
      <field name="priv">
        <type name="IntStorePrivate" c:type="GimpIntStorePrivate*"/>
      </field>
    </class>
    <record name="IntStoreClass"
            c:type="GimpIntStoreClass"
            glib:is-gtype-struct-for="IntStore">
      <source-position filename="libgimpwidgets/gimpintstore.h" line="87"/>
      <field name="parent_class">
        <type name="Gtk.ListStoreClass" c:type="GtkListStoreClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpintstore.h" line="79"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpintstore.h" line="80"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpintstore.h" line="81"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpintstore.h" line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpintstore.h" line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpintstore.h" line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpintstore.h" line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpintstore.h" line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="IntStoreColumns" c:type="GimpIntStoreColumns">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpintstore.h"
           line="32">The column types of #GimpIntStore.</doc>
      <source-position filename="libgimpwidgets/gimpintstore.h" line="53"/>
      <member name="value" value="0" c:identifier="GIMP_INT_STORE_VALUE">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.h"
             line="34">the integer value</doc>
      </member>
      <member name="label" value="1" c:identifier="GIMP_INT_STORE_LABEL">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.h"
             line="35">a human-readable label</doc>
      </member>
      <member name="abbrev" value="2" c:identifier="GIMP_INT_STORE_ABBREV">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.h"
             line="36">an abbreviated label</doc>
      </member>
      <member name="icon_name"
              value="3"
              c:identifier="GIMP_INT_STORE_ICON_NAME">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.h"
             line="37">an icon name</doc>
      </member>
      <member name="pixbuf" value="4" c:identifier="GIMP_INT_STORE_PIXBUF">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.h"
             line="38">a #GdkPixbuf</doc>
      </member>
      <member name="user_data"
              value="5"
              c:identifier="GIMP_INT_STORE_USER_DATA">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.h"
             line="39">arbitrary user data</doc>
      </member>
      <member name="num_columns"
              value="6"
              c:identifier="GIMP_INT_STORE_NUM_COLUMNS">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpintstore.h"
             line="40">the number of columns</doc>
      </member>
    </enumeration>
    <record name="IntStorePrivate" c:type="GimpIntStorePrivate" disguised="1">
      <source-position filename="libgimpwidgets/gimpintstore.h" line="64"/>
    </record>
    <callback name="ItemConstraintFunc" c:type="GimpItemConstraintFunc">
      <source-position filename="libgimp/gimpitemcombobox.h" line="63"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="image" transfer-ownership="none">
          <type name="Gimp.Image" c:type="GimpImage*"/>
        </parameter>
        <parameter name="item" transfer-ownership="none">
          <type name="Gimp.Item" c:type="GimpItem*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <function-macro name="LAYER_COMBO_BOX"
                    c:identifier="GIMP_LAYER_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimp/gimpitemcombobox.h" line="44"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="LayerComboBox"
           c:symbol-prefix="layer_combo_box"
           c:type="GimpLayerComboBox"
           parent="IntComboBox"
           glib:type-name="GimpLayerComboBox"
           glib:get-type="gimp_layer_combo_box_get_type">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new"
                   c:identifier="gimp_layer_combo_box_new"
                   version="2.2">
        <doc xml:space="preserve"
             filename="libgimp/gimpitemcombobox.c"
             line="273">Creates a new #GimpIntComboBox filled with all currently opened
layers. See gimp_drawable_combo_box_new() for more information.</doc>
        <source-position filename="libgimp/gimpitemcombobox.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpitemcombobox.c"
               line="282">a new #GimpIntComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="constraint"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="275">a #GimpItemConstraintFunc or %NULL</doc>
            <type name="ItemConstraintFunc" c:type="GimpItemConstraintFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="276">a pointer that is passed to @constraint</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="data_destroy"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="277">Destroy function for @data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <function-macro name="MEMSIZE_ENTRY"
                    c:identifier="GIMP_MEMSIZE_ENTRY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpmemsizeentry.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEMSIZE_ENTRY_CLASS"
                    c:identifier="GIMP_MEMSIZE_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpmemsizeentry.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="MEMSIZE_ENTRY_GET_CLASS"
                    c:identifier="GIMP_MEMSIZE_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpmemsizeentry.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="MemsizeEntry"
           c:symbol-prefix="memsize_entry"
           c:type="GimpMemsizeEntry"
           parent="Gtk.Box"
           glib:type-name="GimpMemsizeEntry"
           glib:get-type="gimp_memsize_entry_get_type"
           glib:type-struct="MemsizeEntryClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpmemsizeentry.c"
           line="35">Similar to a #GimpSizeEntry but instead of lengths, this widget is
used to let the user enter memory sizes. A combo box allows one to
switch between Kilobytes, Megabytes and Gigabytes. Used in the GIMP
preferences dialog.</doc>
      <source-position filename="libgimpwidgets/gimpmemsizeentry.h" line="65"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gimp_memsize_entry_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpmemsizeentry.c"
             line="189">Creates a new #GimpMemsizeEntry which is a #GtkHBox with a #GtkSpinButton
and a #GtkOptionMenu all setup to allow the user to enter memory sizes.</doc>
        <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpmemsizeentry.c"
               line="198">Pointer to the new #GimpMemsizeEntry.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpmemsizeentry.c"
                 line="191">the initial value (in Bytes)</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="lower" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpmemsizeentry.c"
                 line="192">the lower limit for the value (in Bytes)</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="upper" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpmemsizeentry.c"
                 line="193">the upper limit for the value (in Bytes)</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="value_changed">
        <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <type name="MemsizeEntry" c:type="GimpMemsizeEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_spinbutton"
              c:identifier="gimp_memsize_entry_get_spinbutton"
              version="3.0">
        <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpmemsizeentry.c"
               line="326">the entry's #GtkSpinbutton.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpmemsizeentry.c"
                 line="324">a #GimpMemsizeEntry</doc>
            <type name="MemsizeEntry" c:type="GimpMemsizeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="gimp_memsize_entry_get_value">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpmemsizeentry.c"
             line="306">Retrieves the current value from a #GimpMemsizeEntry.</doc>
        <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpmemsizeentry.c"
               line="312">the current value of @entry (in Bytes).</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpmemsizeentry.c"
                 line="308">a #GimpMemsizeEntry</doc>
            <type name="MemsizeEntry" c:type="GimpMemsizeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_value" c:identifier="gimp_memsize_entry_set_value">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpmemsizeentry.c"
             line="269">Sets the @entry's value. Please note that the #GimpMemsizeEntry rounds
the value to full Kilobytes.</doc>
        <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpmemsizeentry.c"
                 line="271">a #GimpMemsizeEntry</doc>
            <type name="MemsizeEntry" c:type="GimpMemsizeEntry*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpmemsizeentry.c"
                 line="272">the new value (in Bytes)</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="MemsizeEntryPrivate" c:type="GimpMemsizeEntryPrivate*"/>
      </field>
      <glib:signal name="value-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="MemsizeEntryClass"
            c:type="GimpMemsizeEntryClass"
            glib:is-gtype-struct-for="MemsizeEntry">
      <source-position filename="libgimpwidgets/gimpmemsizeentry.h" line="65"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="value_changed">
        <callback name="value_changed">
          <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <type name="MemsizeEntry" c:type="GimpMemsizeEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpmemsizeentry.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MemsizeEntryPrivate"
            c:type="GimpMemsizeEntryPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpmemsizeentry.h" line="40"/>
    </record>
    <function-macro name="NUMBER_PAIR_ENTRY"
                    c:identifier="GIMP_NUMBER_PAIR_ENTRY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NUMBER_PAIR_ENTRY_CLASS"
                    c:identifier="GIMP_NUMBER_PAIR_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="NUMBER_PAIR_ENTRY_GET_CLASS"
                    c:identifier="GIMP_NUMBER_PAIR_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="NumberPairEntry"
           c:symbol-prefix="number_pair_entry"
           c:type="GimpNumberPairEntry"
           parent="Gtk.Entry"
           glib:type-name="GimpNumberPairEntry"
           glib:get-type="gimp_number_pair_entry_get_type"
           glib:type-struct="NumberPairEntryClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpnumberpairentry.c"
           line="41">A #GtkEntry subclass to enter ratios.</doc>
      <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                       line="69"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <constructor name="new"
                   c:identifier="gimp_number_pair_entry_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpnumberpairentry.c"
             line="357">Creates a new #GimpNumberPairEntry widget, which is a GtkEntry that
accepts two numbers separated by a separator. Typical input example
with a 'x' separator: "377x233".

The widget supports simplification of the entered ratio when the
input ends in '=', if "allow-simplification" is TRUE.

The "separators" property contains a string of characters valid as
separators when parsing input. The first separator is used when
displaying the current values.

It is possible to specify what range of values that shall be
considered as valid when parsing user input, by changing
"min-valid-value" and "max-valid-value".

The first separator of @separators is used to display the current
value.</doc>
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpnumberpairentry.c"
               line="382">The new #GimpNumberPairEntry widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="separators" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="359">The allowed separators.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="allow_simplification" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="360">Whether to do simplification on the entered term.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="min_valid_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="361">The minimum allowed result value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="max_valid_value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="362">The maximum allowed result value.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="numbers_changed">
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="ratio_changed">
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_aspect"
              c:identifier="gimp_number_pair_entry_get_aspect"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpnumberpairentry.c"
             line="709">Gets the aspect of the ratio displayed by a #GimpNumberPairEntry.</doc>
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpnumberpairentry.c"
               line="715">The entry's current aspect.</doc>
          <type name="AspectType" c:type="GimpAspectType"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="711">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_text"
              c:identifier="gimp_number_pair_entry_get_default_text"
              version="2.4">
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="92"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpnumberpairentry.c"
               line="651">the string manually set to be shown,
         or %NULL if values are shown in a normal fashion.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="649">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_values"
              c:identifier="gimp_number_pair_entry_get_default_values"
              version="2.4">
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="1245">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
          <parameter name="left"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="1246">Location to put the default left value, or %NULL.</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="right"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="1247">Location to put the default right value, or %NULL.</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_ratio"
              c:identifier="gimp_number_pair_entry_get_ratio"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpnumberpairentry.c"
             line="478">Retrieves the ratio of the numbers displayed by a #GimpNumberPairEntry.</doc>
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpnumberpairentry.c"
               line="484">The ratio value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="480">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_override"
              c:identifier="gimp_number_pair_entry_get_user_override"
              version="2.4">
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpnumberpairentry.c"
               line="807">Whether or not the the widget is in user overridden mode.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="805">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="gimp_number_pair_entry_get_values"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpnumberpairentry.c"
             line="586">Gets the numbers displayed by a #GimpNumberPairEntry.</doc>
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="588">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
          <parameter name="left"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="589">Location to store the left number (may be %NULL).</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="right"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="590">Location to store the right number (may be %NULL).</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_aspect"
              c:identifier="gimp_number_pair_entry_set_aspect"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpnumberpairentry.c"
             line="668">Sets the aspect of the ratio by swapping the left_number and
right_number if necessary (or setting them to 1.0 in case that
@aspect is %GIMP_ASPECT_SQUARE).</doc>
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="670">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
          <parameter name="aspect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="671">The new aspect.</doc>
            <type name="AspectType" c:type="GimpAspectType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default_text"
              c:identifier="gimp_number_pair_entry_set_default_text"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpnumberpairentry.c"
             line="614">Causes the entry to show a given string when in automatic mode,
instead of the default numbers. The only thing this does is making
the #GimpNumberPairEntry showing this string, the internal state
and API calls are not affected.

Set the default string to %NULL to display default values as
normal.</doc>
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="616">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="617">Default string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default_values"
              c:identifier="gimp_number_pair_entry_set_default_values"
              version="2.4">
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="1215">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
          <parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="1216">Default left value in the entry.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="1217">Default right value in the entry.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ratio"
              c:identifier="gimp_number_pair_entry_set_ratio"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpnumberpairentry.c"
             line="450">Sets the numbers of the #GimpNumberPairEntry to have the desired
ratio. If the new ratio is different than the previous ratio, the
"ratio-changed" signal is emitted.

An attempt is made to convert the decimal number into a fraction
with left_number and right_number &lt; 1000.</doc>
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="452">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
          <parameter name="ratio" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="453">Ratio to set in the widget.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_override"
              c:identifier="gimp_number_pair_entry_set_user_override"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpnumberpairentry.c"
             line="767">When the entry is not in user overridden mode, the values will
change when the default values are changed. When in user overridden
mode, setting default values will not affect the active values.</doc>
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="769">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
          <parameter name="user_override" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="770">%TRUE sets the entry in user overridden mode,
                %FALSE disables.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_values"
              c:identifier="gimp_number_pair_entry_set_values"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpnumberpairentry.c"
             line="500">Forces setting the numbers displayed by a #GimpNumberPairEntry,
ignoring if the user has set his/her own value. The state of
user-override will not be changed.</doc>
        <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="502">A #GimpNumberPairEntry widget.</doc>
            <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
          </instance-parameter>
          <parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="503">Left number in the entry.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="right" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpnumberpairentry.c"
                 line="504">Right number in the entry.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <property name="allow-simplification"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="aspect" writable="1" transfer-ownership="none">
        <type name="AspectType"/>
      </property>
      <property name="default-left-number"
                writable="1"
                transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="default-right-number"
                writable="1"
                transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="default-text" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="left-number" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="max-valid-value" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="min-valid-value" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="ratio" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="right-number" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="separators"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="user-override" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Entry" c:type="GtkEntry"/>
      </field>
      <field name="priv">
        <type name="NumberPairEntryPrivate"
              c:type="GimpNumberPairEntryPrivate*"/>
      </field>
      <glib:signal name="numbers-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="ratio-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="NumberPairEntryClass"
            c:type="GimpNumberPairEntryClass"
            glib:is-gtype-struct-for="NumberPairEntry">
      <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                       line="69"/>
      <field name="parent_class">
        <type name="Gtk.EntryClass" c:type="GtkEntryClass"/>
      </field>
      <field name="numbers_changed">
        <callback name="numbers_changed">
          <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ratio_changed">
        <callback name="ratio_changed">
          <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="entry" transfer-ownership="none">
              <type name="NumberPairEntry" c:type="GimpNumberPairEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="NumberPairEntryPrivate"
            c:type="GimpNumberPairEntryPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpnumberpairentry.h"
                       line="42"/>
    </record>
    <function-macro name="OFFSET_AREA"
                    c:identifier="GIMP_OFFSET_AREA"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OFFSET_AREA_CLASS"
                    c:identifier="GIMP_OFFSET_AREA_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OFFSET_AREA_GET_CLASS"
                    c:identifier="GIMP_OFFSET_AREA_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="OffsetArea"
           c:symbol-prefix="offset_area"
           c:type="GimpOffsetArea"
           parent="Gtk.DrawingArea"
           glib:type-name="GimpOffsetArea"
           glib:get-type="gimp_offset_area_get_type"
           glib:type-struct="OffsetAreaClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpoffsetarea.c"
           line="32">Widget to control image offsets.</doc>
      <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="69"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gimp_offset_area_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpoffsetarea.c"
             line="125">Creates a new #GimpOffsetArea widget. A #GimpOffsetArea can be used
when resizing an image or a drawable to allow the user to interactively
specify the new offsets.</doc>
        <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpoffsetarea.c"
               line="134">the new #GimpOffsetArea widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="orig_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpoffsetarea.c"
                 line="127">the original width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="orig_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpoffsetarea.c"
                 line="128">the original height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="offsets_changed">
        <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="offset_area" transfer-ownership="none">
            <type name="OffsetArea" c:type="GimpOffsetArea*"/>
          </instance-parameter>
          <parameter name="offset_x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="offset_y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="set_offsets" c:identifier="gimp_offset_area_set_offsets">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpoffsetarea.c"
             line="240">Sets the offsets of the image/drawable displayed by the #GimpOffsetArea.
It does not emit the "offsets-changed" signal.</doc>
        <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="offset_area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpoffsetarea.c"
                 line="242">a #GimpOffsetArea.</doc>
            <type name="OffsetArea" c:type="GimpOffsetArea*"/>
          </instance-parameter>
          <parameter name="offset_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpoffsetarea.c"
                 line="243">the X offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="offset_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpoffsetarea.c"
                 line="244">the Y offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pixbuf"
              c:identifier="gimp_offset_area_set_pixbuf"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpoffsetarea.c"
             line="158">Sets the pixbuf which represents the original image/drawable which
is being offset.</doc>
        <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="offset_area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpoffsetarea.c"
                 line="160">a #GimpOffsetArea.</doc>
            <type name="OffsetArea" c:type="GimpOffsetArea*"/>
          </instance-parameter>
          <parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpoffsetarea.c"
                 line="161">a #GdkPixbuf.</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="gimp_offset_area_set_size">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpoffsetarea.c"
             line="182">Sets the size of the image/drawable displayed by the #GimpOffsetArea.
If the offsets change as a result of this change, the "offsets-changed"
signal is emitted.</doc>
        <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="offset_area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpoffsetarea.c"
                 line="184">a #GimpOffsetArea.</doc>
            <type name="OffsetArea" c:type="GimpOffsetArea*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpoffsetarea.c"
                 line="185">the new width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpoffsetarea.c"
                 line="186">the new height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.DrawingArea" c:type="GtkDrawingArea"/>
      </field>
      <field name="priv">
        <type name="OffsetAreaPrivate" c:type="GimpOffsetAreaPrivate*"/>
      </field>
      <glib:signal name="offsets-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="OffsetAreaClass"
            c:type="GimpOffsetAreaClass"
            glib:is-gtype-struct-for="OffsetArea">
      <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="69"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
      <field name="offsets_changed">
        <callback name="offsets_changed">
          <source-position filename="libgimpwidgets/gimpoffsetarea.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="offset_area" transfer-ownership="none">
              <type name="OffsetArea" c:type="GimpOffsetArea*"/>
            </parameter>
            <parameter name="offset_x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="offset_y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpoffsetarea.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpoffsetarea.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpoffsetarea.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpoffsetarea.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpoffsetarea.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpoffsetarea.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpoffsetarea.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpoffsetarea.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="OffsetAreaPrivate"
            c:type="GimpOffsetAreaPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpoffsetarea.h" line="42"/>
    </record>
    <function-macro name="PAGE_SELECTOR"
                    c:identifier="GIMP_PAGE_SELECTOR"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppageselector.h" line="32"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAGE_SELECTOR_CLASS"
                    c:identifier="GIMP_PAGE_SELECTOR_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppageselector.h" line="33"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAGE_SELECTOR_GET_CLASS"
                    c:identifier="GIMP_PAGE_SELECTOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppageselector.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PALETTE_SELECT_BUTTON"
                    c:identifier="GIMP_PALETTE_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimppaletteselectbutton.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PALETTE_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_PALETTE_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimppaletteselectbutton.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PALETTE_SELECT_BUTTON_GET_CLASS"
                    c:identifier="GIMP_PALETTE_SELECT_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimppaletteselectbutton.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PATH_EDITOR"
                    c:identifier="GIMP_PATH_EDITOR"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppatheditor.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PATH_EDITOR_CLASS"
                    c:identifier="GIMP_PATH_EDITOR_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppatheditor.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PATH_EDITOR_GET_CLASS"
                    c:identifier="GIMP_PATH_EDITOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppatheditor.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PATTERN_SELECT_BUTTON"
                    c:identifier="GIMP_PATTERN_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimppatternselectbutton.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PATTERN_SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_PATTERN_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimppatternselectbutton.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PATTERN_SELECT_BUTTON_GET_CLASS"
                    c:identifier="GIMP_PATTERN_SELECT_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimppatternselectbutton.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICK_BUTTON"
                    c:identifier="GIMP_PICK_BUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppickbutton.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICK_BUTTON_CLASS"
                    c:identifier="GIMP_PICK_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppickbutton.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PICK_BUTTON_GET_CLASS"
                    c:identifier="GIMP_PICK_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppickbutton.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PREVIEW"
                    c:identifier="GIMP_PREVIEW"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppreview.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PREVIEW_AREA"
                    c:identifier="GIMP_PREVIEW_AREA"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppreviewarea.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PREVIEW_AREA_CLASS"
                    c:identifier="GIMP_PREVIEW_AREA_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppreviewarea.h" line="31"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PREVIEW_AREA_GET_CLASS"
                    c:identifier="GIMP_PREVIEW_AREA_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppreviewarea.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PREVIEW_CLASS"
                    c:identifier="GIMP_PREVIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppreview.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PREVIEW_GET_CLASS"
                    c:identifier="GIMP_PREVIEW_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimppreview.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROCEDURE_DIALOG"
                    c:identifier="GIMP_PROCEDURE_DIALOG"
                    introspectable="0">
      <source-position filename="libgimp/gimpproceduredialog.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROCEDURE_DIALOG_CLASS"
                    c:identifier="GIMP_PROCEDURE_DIALOG_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpproceduredialog.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROCEDURE_DIALOG_GET_CLASS"
                    c:identifier="GIMP_PROCEDURE_DIALOG_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpproceduredialog.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROC_BROWSER_DIALOG"
                    c:identifier="GIMP_PROC_BROWSER_DIALOG"
                    introspectable="0">
      <source-position filename="libgimp/gimpprocbrowserdialog.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROC_BROWSER_DIALOG_CLASS"
                    c:identifier="GIMP_PROC_BROWSER_DIALOG_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpprocbrowserdialog.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROC_BROWSER_DIALOG_GET_CLASS"
                    c:identifier="GIMP_PROC_BROWSER_DIALOG_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpprocbrowserdialog.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROGRESS_BAR"
                    c:identifier="GIMP_PROGRESS_BAR"
                    introspectable="0">
      <source-position filename="libgimp/gimpprogressbar.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROGRESS_BAR_CLASS"
                    c:identifier="GIMP_PROGRESS_BAR_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpprogressbar.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROGRESS_BAR_GET_CLASS"
                    c:identifier="GIMP_PROGRESS_BAR_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpprogressbar.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="PageSelector"
           c:symbol-prefix="page_selector"
           c:type="GimpPageSelector"
           parent="Gtk.Box"
           glib:type-name="GimpPageSelector"
           glib:get-type="gimp_page_selector_get_type"
           glib:type-struct="PageSelectorClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppageselector.c"
           line="42">Use this for example for specifying what pages to import from
a PDF or PS document.</doc>
      <source-position filename="libgimpwidgets/gimppageselector.h" line="65"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gimp_page_selector_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="406">Creates a new #GimpPageSelector widget.</doc>
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppageselector.c"
               line="411">Pointer to the new #GimpPageSelector widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="activate">
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="selection_changed">
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_n_pages"
              c:identifier="gimp_page_selector_get_n_pages"
              version="2.4">
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppageselector.c"
               line="485">the number of pages in the document to open.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="483">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_page_label"
              c:identifier="gimp_page_selector_get_page_label"
              version="2.4">
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="90"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppageselector.c"
               line="679">The page's label, or %NULL if none is
         set. This is a newly allocated string that should be g_free()'d
         when no longer needed.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="676">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="page_no" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="677">The number of the page to get the thumbnail for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_page_thumbnail"
              c:identifier="gimp_page_selector_get_page_thumbnail"
              version="2.4">
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="84"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppageselector.c"
               line="598">The page's thumbnail, or %NULL if none
         is set. The returned pixbuf is owned by #GimpPageSelector and must
         not be unref'ed when no longer needed.</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="595">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="page_no" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="596">The number of the page to get the thumbnail for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selected_pages"
              c:identifier="gimp_page_selector_get_selected_pages"
              version="2.4">
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppageselector.c"
               line="861">A sorted array of page numbers of
         selected pages. Use g_free() if you don't need the array any longer</doc>
          <array length="0" zero-terminated="0" c:type="gint*">
            <type name="gint" c:type="gint"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="858">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="n_selected_pages"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="859">Returns the number of selected pages.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selected_range"
              c:identifier="gimp_page_selector_get_selected_range"
              version="2.4">
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="106"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppageselector.c"
               line="1008">A newly allocated string representing the set of selected
         pages. See gimp_page_selector_select_range() for the
         format of the string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="1006">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_target"
              c:identifier="gimp_page_selector_get_target"
              version="2.4">
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppageselector.c"
               line="531">How the selected pages should be opened.</doc>
          <type name="PageSelectorTarget" c:type="GimpPageSelectorTarget"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="529">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="page_is_selected"
              c:identifier="gimp_page_selector_page_is_selected"
              version="2.4">
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppageselector.c"
               line="825">%TRUE if the page is selected, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="822">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="page_no" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="823">The number of the page to check.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_all"
              c:identifier="gimp_page_selector_select_all"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="716">Selects all pages.</doc>
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="718">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="select_page"
              c:identifier="gimp_page_selector_select_page"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="756">Adds a page to the selection.</doc>
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="758">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="page_no" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="759">The number of the page to select.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_range"
              c:identifier="gimp_page_selector_select_range"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="901">Selects the pages described by @range. The range string is a
user-editable list of pages and ranges, e.g. "1,3,5-7,9-12,14".
Note that the page numbering in the range string starts with 1,
not 0.

Invalid pages and ranges will be silently ignored, duplicate and
overlapping pages and ranges will be merged.</doc>
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="903">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="904">A string representing the set of selected pages.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_n_pages"
              c:identifier="gimp_page_selector_set_n_pages"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="421">Sets the number of pages in the document to open.</doc>
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="423">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="n_pages" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="424">The number of pages.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_page_label"
              c:identifier="gimp_page_selector_set_page_label"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="633">Sets the label of the specified page.</doc>
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="635">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="page_no" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="636">The number of the page to set the label for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="637">The label.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_page_thumbnail"
              c:identifier="gimp_page_selector_set_page_thumbnail"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="548">Sets the thumbnail for given @page_no. A default "page" icon will
be used if no page thumbnail is set.</doc>
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="550">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="page_no" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="551">The number of the page to set the thumbnail for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="thumbnail" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="552">The thumbnail pixbuf.</doc>
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_target"
              c:identifier="gimp_page_selector_set_target"
              version="2.4">
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="503">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="504">How to open the selected pages.</doc>
            <type name="PageSelectorTarget" c:type="GimpPageSelectorTarget"/>
          </parameter>
        </parameters>
      </method>
      <method name="unselect_all"
              c:identifier="gimp_page_selector_unselect_all"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="736">Unselects all pages.</doc>
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="738">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unselect_page"
              c:identifier="gimp_page_selector_unselect_page"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="788">Removes a page from the selection.</doc>
        <source-position filename="libgimpwidgets/gimppageselector.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="selector" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="790">Pointer to a #GimpPageSelector.</doc>
            <type name="PageSelector" c:type="GimpPageSelector*"/>
          </instance-parameter>
          <parameter name="page_no" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppageselector.c"
                 line="791">The number of the page to unselect.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="n-pages"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="176">The number of pages of the document to open.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="target"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="190">The target to open the document to.</doc>
        <type name="PageSelectorTarget"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="PageSelectorPrivate" c:type="GimpPageSelectorPrivate*"/>
      </field>
      <glib:signal name="activate" when="first" action="1" version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="158">The "activate" signal on GimpPageSelector is an action signal. It
is emitted when a user double-clicks an item in the page selection.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="selection-changed" when="first" version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppageselector.c"
             line="142">This signal is emitted whenever the set of selected pages changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="PageSelectorClass"
            c:type="GimpPageSelectorClass"
            glib:is-gtype-struct-for="PageSelector">
      <source-position filename="libgimpwidgets/gimppageselector.h" line="65"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="selection_changed">
        <callback name="selection_changed">
          <source-position filename="libgimpwidgets/gimppageselector.h"
                           line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <type name="PageSelector" c:type="GimpPageSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="libgimpwidgets/gimppageselector.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="selector" transfer-ownership="none">
              <type name="PageSelector" c:type="GimpPageSelector*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimppageselector.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimppageselector.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimppageselector.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimppageselector.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimppageselector.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimppageselector.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimppageselector.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimppageselector.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PageSelectorPrivate"
            c:type="GimpPageSelectorPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimppageselector.h" line="39"/>
    </record>
    <enumeration name="PageSelectorTarget"
                 glib:type-name="GimpPageSelectorTarget"
                 glib:get-type="gimp_page_selector_target_get_type"
                 c:type="GimpPageSelectorTarget">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsenums.h"
           line="171">Import targets for #GimpPageSelector.</doc>
      <member name="layers"
              value="0"
              c:identifier="GIMP_PAGE_SELECTOR_TARGET_LAYERS"
              glib:nick="layers">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="173">import as layers of one image</doc>
      </member>
      <member name="images"
              value="1"
              c:identifier="GIMP_PAGE_SELECTOR_TARGET_IMAGES"
              glib:nick="images">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="174">import as separate images</doc>
      </member>
    </enumeration>
    <class name="PaletteSelectButton"
           c:symbol-prefix="palette_select_button"
           c:type="GimpPaletteSelectButton"
           parent="SelectButton"
           glib:type-name="GimpPaletteSelectButton"
           glib:get-type="gimp_palette_select_button_get_type"
           glib:type-struct="PaletteSelectButtonClass">
      <doc xml:space="preserve"
           filename="libgimp/gimppaletteselectbutton.c"
           line="38">A button which pops up a palette select dialog.</doc>
      <source-position filename="libgimp/gimppaletteselectbutton.h" line="71"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gimp_palette_select_button_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimppaletteselectbutton.c"
             line="184">Creates a new #GtkWidget that completely controls the selection of
a palette.  This widget is suitable for placement in a table in a
plug-in dialog.</doc>
        <source-position filename="libgimp/gimppaletteselectbutton.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimppaletteselectbutton.c"
               line="193">A #GtkWidget that you can use in your UI.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppaletteselectbutton.c"
                 line="186">Title of the dialog to use or %NULL to use the default title.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="palette_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppaletteselectbutton.c"
                 line="187">Initial palette name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="palette_set">
        <source-position filename="libgimp/gimppaletteselectbutton.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <type name="PaletteSelectButton"
                  c:type="GimpPaletteSelectButton*"/>
          </instance-parameter>
          <parameter name="palette_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="dialog_closing" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_palette"
              c:identifier="gimp_palette_select_button_get_palette"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimppaletteselectbutton.c"
             line="216">Retrieves the name of currently selected palette.</doc>
        <source-position filename="libgimp/gimppaletteselectbutton.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimppaletteselectbutton.c"
               line="222">an internal copy of the palette name which must not be freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppaletteselectbutton.c"
                 line="218">A #GimpPaletteSelectButton</doc>
            <type name="PaletteSelectButton"
                  c:type="GimpPaletteSelectButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_palette"
              c:identifier="gimp_palette_select_button_set_palette"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimppaletteselectbutton.c"
             line="234">Sets the current palette for the palette select button.</doc>
        <source-position filename="libgimp/gimppaletteselectbutton.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppaletteselectbutton.c"
                 line="236">A #GimpPaletteSelectButton</doc>
            <type name="PaletteSelectButton"
                  c:type="GimpPaletteSelectButton*"/>
          </instance-parameter>
          <parameter name="palette_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppaletteselectbutton.c"
                 line="237">Palette name to set; %NULL means no change.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="palette-name"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimppaletteselectbutton.c"
             line="139">The name of the currently selected palette.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimppaletteselectbutton.c"
             line="124">The title to be used for the palette selection popup dialog.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="SelectButton" c:type="GimpSelectButton"/>
      </field>
      <field name="priv">
        <type name="PaletteSelectButtonPrivate"
              c:type="GimpPaletteSelectButtonPrivate*"/>
      </field>
      <glib:signal name="palette-set" when="first" version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimppaletteselectbutton.c"
             line="153">The ::palette-set signal is emitted when the user selects a palette.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="palette_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppaletteselectbutton.c"
                 line="156">the name of the currently selected palette.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="dialog_closing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppaletteselectbutton.c"
                 line="157">whether the dialog was closed or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="PaletteSelectButtonClass"
            c:type="GimpPaletteSelectButtonClass"
            glib:is-gtype-struct-for="PaletteSelectButton">
      <source-position filename="libgimp/gimppaletteselectbutton.h" line="71"/>
      <field name="parent_class">
        <type name="SelectButtonClass" c:type="GimpSelectButtonClass"/>
      </field>
      <field name="palette_set">
        <callback name="palette_set">
          <source-position filename="libgimp/gimppaletteselectbutton.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="button" transfer-ownership="none">
              <type name="PaletteSelectButton"
                    c:type="GimpPaletteSelectButton*"/>
            </parameter>
            <parameter name="palette_name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="dialog_closing" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimppaletteselectbutton.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimppaletteselectbutton.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimppaletteselectbutton.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimppaletteselectbutton.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimppaletteselectbutton.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimppaletteselectbutton.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimppaletteselectbutton.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimppaletteselectbutton.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PaletteSelectButtonPrivate"
            c:type="GimpPaletteSelectButtonPrivate"
            disguised="1">
      <source-position filename="libgimp/gimppaletteselectbutton.h" line="43"/>
    </record>
    <class name="PathEditor"
           c:symbol-prefix="path_editor"
           c:type="GimpPathEditor"
           parent="Gtk.Box"
           glib:type-name="GimpPathEditor"
           glib:get-type="gimp_path_editor_get_type"
           glib:type-struct="PathEditorClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppatheditor.c"
           line="42">This widget is used to edit file search paths.

It shows a list of all directories which are in the search
path. You can click a directory to select it. The widget provides a
#GimpFileEntry to change the currently selected directory.

There are buttons to add or delete directories as well as "up" and
"down" buttons to change the order in which the directories will be
searched.

Whenever the user adds, deletes, changes or reorders a directory of
the search path, the "path_changed" signal will be emitted.</doc>
      <source-position filename="libgimpwidgets/gimppatheditor.h" line="87"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gimp_path_editor_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppatheditor.c"
             line="283">Creates a new #GimpPathEditor widget.

The elements of the initial search path must be separated with the
#G_SEARCHPATH_SEPARATOR character.</doc>
        <source-position filename="libgimpwidgets/gimppatheditor.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppatheditor.c"
               line="293">A pointer to the new #GimpPathEditor widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppatheditor.c"
                 line="285">The title of the #GtkFileChooser dialog which can be popped up.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppatheditor.c"
                 line="286">The initial search path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="path_changed">
        <source-position filename="libgimpwidgets/gimppatheditor.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="PathEditor" c:type="GimpPathEditor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="writable_changed">
        <source-position filename="libgimpwidgets/gimppatheditor.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="PathEditor" c:type="GimpPathEditor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_dir_writable"
              c:identifier="gimp_path_editor_get_dir_writable">
        <source-position filename="libgimpwidgets/gimppatheditor.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="PathEditor" c:type="GimpPathEditor*"/>
          </instance-parameter>
          <parameter name="directory" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_path" c:identifier="gimp_path_editor_get_path">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppatheditor.c"
             line="321">The elements of the returned search path string are separated with the
#G_SEARCHPATH_SEPARATOR character.

Note that you have to g_free() the returned string.</doc>
        <source-position filename="libgimpwidgets/gimppatheditor.h" line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppatheditor.c"
               line="330">The search path the user has selected in the path editor.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppatheditor.c"
                 line="323">The path editor you want to get the search path from.</doc>
            <type name="PathEditor" c:type="GimpPathEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_writable_path"
              c:identifier="gimp_path_editor_get_writable_path">
        <source-position filename="libgimpwidgets/gimppatheditor.h"
                         line="101"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="PathEditor" c:type="GimpPathEditor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_dir_writable"
              c:identifier="gimp_path_editor_set_dir_writable">
        <source-position filename="libgimpwidgets/gimppatheditor.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="PathEditor" c:type="GimpPathEditor*"/>
          </instance-parameter>
          <parameter name="directory" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="writable" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_path" c:identifier="gimp_path_editor_set_path">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppatheditor.c"
             line="367">The elements of the initial search path must be separated with the
#G_SEARCHPATH_SEPARATOR character.</doc>
        <source-position filename="libgimpwidgets/gimppatheditor.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppatheditor.c"
                 line="369">The path editor you want to set the search path from.</doc>
            <type name="PathEditor" c:type="GimpPathEditor*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppatheditor.c"
                 line="370">The new path to set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_writable_path"
              c:identifier="gimp_path_editor_set_writable_path">
        <source-position filename="libgimpwidgets/gimppatheditor.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="editor" transfer-ownership="none">
            <type name="PathEditor" c:type="GimpPathEditor*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="PathEditorPrivate" c:type="GimpPathEditorPrivate*"/>
      </field>
      <field name="upper_hbox">
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </field>
      <field name="new_button">
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </field>
      <field name="up_button">
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </field>
      <field name="down_button">
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </field>
      <field name="delete_button">
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </field>
      <field name="file_entry">
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </field>
      <field name="dir_list">
        <type name="Gtk.ListStore" c:type="GtkListStore*"/>
      </field>
      <field name="sel">
        <type name="Gtk.TreeSelection" c:type="GtkTreeSelection*"/>
      </field>
      <field name="sel_path">
        <type name="Gtk.TreePath" c:type="GtkTreePath*"/>
      </field>
      <field name="writable_column">
        <type name="Gtk.TreeViewColumn" c:type="GtkTreeViewColumn*"/>
      </field>
      <field name="num_items">
        <type name="gint" c:type="gint"/>
      </field>
      <glib:signal name="path-changed" when="first">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppatheditor.c"
             line="104">This signal is emitted whenever the user adds, deletes, modifies
or reorders an element of the search path.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="writable-changed" when="first">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppatheditor.c"
             line="118">This signal is emitted whenever the "writable" column of a directory
is changed, either by the user clicking on it or by calling
gimp_path_editor_set_dir_writable().</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="PathEditorClass"
            c:type="GimpPathEditorClass"
            glib:is-gtype-struct-for="PathEditor">
      <source-position filename="libgimpwidgets/gimppatheditor.h" line="87"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="path_changed">
        <callback name="path_changed">
          <source-position filename="libgimpwidgets/gimppatheditor.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="editor" transfer-ownership="none">
              <type name="PathEditor" c:type="GimpPathEditor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="writable_changed">
        <callback name="writable_changed">
          <source-position filename="libgimpwidgets/gimppatheditor.h"
                           line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="editor" transfer-ownership="none">
              <type name="PathEditor" c:type="GimpPathEditor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimppatheditor.h"
                           line="79"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimppatheditor.h"
                           line="80"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimppatheditor.h"
                           line="81"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimppatheditor.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimppatheditor.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimppatheditor.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimppatheditor.h"
                           line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimppatheditor.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PathEditorPrivate"
            c:type="GimpPathEditorPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimppatheditor.h" line="42"/>
    </record>
    <class name="PatternSelectButton"
           c:symbol-prefix="pattern_select_button"
           c:type="GimpPatternSelectButton"
           parent="SelectButton"
           glib:type-name="GimpPatternSelectButton"
           glib:get-type="gimp_pattern_select_button_get_type"
           glib:type-struct="PatternSelectButtonClass">
      <doc xml:space="preserve"
           filename="libgimp/gimppatternselectbutton.c"
           line="38">A button which pops up a pattern select dialog.</doc>
      <source-position filename="libgimp/gimppatternselectbutton.h" line="75"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gimp_pattern_select_button_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimppatternselectbutton.c"
             line="231">Creates a new #GtkWidget that completely controls the selection of
a pattern.  This widget is suitable for placement in a table in a
plug-in dialog.</doc>
        <source-position filename="libgimp/gimppatternselectbutton.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimppatternselectbutton.c"
               line="240">A #GtkWidget that you can use in your UI.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="233">Title of the dialog to use or %NULL to use the default title.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="pattern_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="234">Initial pattern name or %NULL to use current selection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="pattern_set">
        <source-position filename="libgimp/gimppatternselectbutton.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <type name="PatternSelectButton"
                  c:type="GimpPatternSelectButton*"/>
          </instance-parameter>
          <parameter name="pattern_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="bpp" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="mask_data" transfer-ownership="none">
            <type name="guint8" c:type="const guchar*"/>
          </parameter>
          <parameter name="dialog_closing" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_pattern"
              c:identifier="gimp_pattern_select_button_get_pattern"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimppatternselectbutton.c"
             line="263">Retrieves the name of currently selected pattern.</doc>
        <source-position filename="libgimp/gimppatternselectbutton.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimppatternselectbutton.c"
               line="269">an internal copy of the pattern name which must not be freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="265">A #GimpPatternSelectButton</doc>
            <type name="PatternSelectButton"
                  c:type="GimpPatternSelectButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_pattern"
              c:identifier="gimp_pattern_select_button_set_pattern"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimppatternselectbutton.c"
             line="281">Sets the current pattern for the pattern select button.</doc>
        <source-position filename="libgimp/gimppatternselectbutton.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="283">A #GimpPatternSelectButton</doc>
            <type name="PatternSelectButton"
                  c:type="GimpPatternSelectButton*"/>
          </instance-parameter>
          <parameter name="pattern_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="284">Pattern name to set; %NULL means no change.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="pattern-name"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimppatternselectbutton.c"
             line="168">The name of the currently selected pattern.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimppatternselectbutton.c"
             line="153">The title to be used for the pattern selection popup dialog.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="SelectButton" c:type="GimpSelectButton"/>
      </field>
      <field name="priv">
        <type name="PatternSelectButtonPrivate"
              c:type="GimpPatternSelectButtonPrivate*"/>
      </field>
      <glib:signal name="pattern-set" when="first" version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimppatternselectbutton.c"
             line="182">The ::pattern-set signal is emitted when the user selects a pattern.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pattern_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="185">the name of the currently selected pattern.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="186">width of the pattern</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="187">height of the pattern</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="bpp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="188">bpp of the pattern</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="mask_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="189">pattern mask data</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="dialog_closing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimppatternselectbutton.c"
                 line="190">whether the dialog was closed or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="PatternSelectButtonClass"
            c:type="GimpPatternSelectButtonClass"
            glib:is-gtype-struct-for="PatternSelectButton">
      <source-position filename="libgimp/gimppatternselectbutton.h" line="75"/>
      <field name="parent_class">
        <type name="SelectButtonClass" c:type="GimpSelectButtonClass"/>
      </field>
      <field name="pattern_set">
        <callback name="pattern_set">
          <source-position filename="libgimp/gimppatternselectbutton.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="button" transfer-ownership="none">
              <type name="PatternSelectButton"
                    c:type="GimpPatternSelectButton*"/>
            </parameter>
            <parameter name="pattern_name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="bpp" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="mask_data" transfer-ownership="none">
              <type name="guint8" c:type="const guchar*"/>
            </parameter>
            <parameter name="dialog_closing" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimppatternselectbutton.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimppatternselectbutton.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimppatternselectbutton.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimppatternselectbutton.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimppatternselectbutton.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimppatternselectbutton.h"
                           line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimppatternselectbutton.h"
                           line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimppatternselectbutton.h"
                           line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PatternSelectButtonPrivate"
            c:type="GimpPatternSelectButtonPrivate"
            disguised="1">
      <source-position filename="libgimp/gimppatternselectbutton.h" line="43"/>
    </record>
    <class name="PickButton"
           c:symbol-prefix="pick_button"
           c:type="GimpPickButton"
           parent="Gtk.Button"
           glib:type-name="GimpPickButton"
           glib:get-type="gimp_pick_button_get_type"
           glib:type-struct="PickButtonClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppickbutton.c"
           line="43">#GimpPickButton is a specialized button. When clicked, it changes
the cursor to a color-picker pipette and allows the user to pick a
color from any point on the screen.</doc>
      <source-position filename="libgimpwidgets/gimppickbutton.h" line="63"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Activatable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gimp_pick_button_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppickbutton.c"
             line="156">Creates a new #GimpPickButton widget.</doc>
        <source-position filename="libgimpwidgets/gimppickbutton.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppickbutton.c"
               line="161">A new #GimpPickButton widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="color_picked">
        <source-position filename="libgimpwidgets/gimppickbutton.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <type name="PickButton" c:type="GimpPickButton*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <type name="Gimp.RGB" c:type="const GimpRGB*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <field name="parent_instance">
        <type name="Gtk.Button" c:type="GtkButton"/>
      </field>
      <field name="priv">
        <type name="PickButtonPrivate" c:type="GimpPickButtonPrivate*"/>
      </field>
      <glib:signal name="color-picked" when="first">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppickbutton.c"
             line="79">This signal is emitted when the user has picked a color.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppickbutton.c"
                 line="82">pointer to a #GimpRGB structure that holds the picked color</doc>
            <type name="Gimp.RGB"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="PickButtonClass"
            c:type="GimpPickButtonClass"
            glib:is-gtype-struct-for="PickButton">
      <source-position filename="libgimpwidgets/gimppickbutton.h" line="63"/>
      <field name="parent_class">
        <type name="Gtk.ButtonClass" c:type="GtkButtonClass"/>
      </field>
      <field name="color_picked">
        <callback name="color_picked">
          <source-position filename="libgimpwidgets/gimppickbutton.h"
                           line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="button" transfer-ownership="none">
              <type name="PickButton" c:type="GimpPickButton*"/>
            </parameter>
            <parameter name="color" transfer-ownership="none">
              <type name="Gimp.RGB" c:type="const GimpRGB*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimppickbutton.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimppickbutton.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimppickbutton.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimppickbutton.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimppickbutton.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimppickbutton.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimppickbutton.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimppickbutton.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PickButtonPrivate"
            c:type="GimpPickButtonPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimppickbutton.h" line="37"/>
    </record>
    <class name="Preview"
           c:symbol-prefix="preview"
           c:type="GimpPreview"
           parent="Gtk.Box"
           abstract="1"
           glib:type-name="GimpPreview"
           glib:get-type="gimp_preview_get_type"
           glib:type-struct="PreviewClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppreview.c"
           line="36">A widget providing a #GimpPreviewArea plus framework to update the
preview.</doc>
      <source-position filename="libgimpwidgets/gimppreview.h" line="90"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <virtual-method name="draw" invoker="draw" version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="851">Calls the GimpPreview::draw method. GimpPreview itself doesn't
implement a default draw method so the behaviour is determined by
the derived class implementing this method.

#GimpDrawablePreview implements gimp_preview_draw() by drawing the
original, unmodified drawable to the @preview.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="853">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_buffer" invoker="draw_buffer" version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="873">Calls the GimpPreview::draw_buffer method. GimpPreview itself
doesn't implement this method so the behaviour is determined by the
derived class implementing this method.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="875">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="876">a pixel buffer the size of the preview</doc>
            <array zero-terminated="0" c:type="const guchar*">
              <type name="guint8" c:type="guchar"/>
            </array>
          </parameter>
          <parameter name="rowstride" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="877">the @buffer's rowstride</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw_thumb">
        <source-position filename="libgimpwidgets/gimppreview.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="area" transfer-ownership="none">
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="invalidated">
        <source-position filename="libgimpwidgets/gimppreview.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_cursor">
        <source-position filename="libgimpwidgets/gimppreview.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="transform" invoker="transform" version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="746">Transforms from image to widget coordinates.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="748">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="src_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="749">horizontal position on the previewed image</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="src_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="750">vertical position on the previewed image</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="751">returns the transformed horizontal position</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="dest_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="752">returns the transformed vertical position</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="untransform" invoker="untransform" version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="772">Transforms from widget to image coordinates.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="774">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="src_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="775">horizontal position relative to the preview area's origin</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="src_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="776">vertical position relative to  preview area's origin</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="777">returns the untransformed horizontal position</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="dest_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="778">returns the untransformed vertical position</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="draw" c:identifier="gimp_preview_draw" version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="851">Calls the GimpPreview::draw method. GimpPreview itself doesn't
implement a default draw method so the behaviour is determined by
the derived class implementing this method.

#GimpDrawablePreview implements gimp_preview_draw() by drawing the
original, unmodified drawable to the @preview.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="143"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="853">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="draw_buffer"
              c:identifier="gimp_preview_draw_buffer"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="873">Calls the GimpPreview::draw_buffer method. GimpPreview itself
doesn't implement this method so the behaviour is determined by the
derived class implementing this method.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="875">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="876">a pixel buffer the size of the preview</doc>
            <array zero-terminated="0" c:type="const guchar*">
              <type name="guint8" c:type="guchar"/>
            </array>
          </parameter>
          <parameter name="rowstride" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="877">the @buffer's rowstride</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_area"
              c:identifier="gimp_preview_get_area"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="830">In most cases, you shouldn't need to access the #GimpPreviewArea
that is being used in the @preview. Sometimes however, you need to.
For example if you want to receive mouse events from the area. In
such cases, use gimp_preview_get_area().</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppreview.c"
               line="839">a pointer to the #GimpPreviewArea used in the @preview.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="832">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_bounds" c:identifier="gimp_preview_get_bounds">
        <source-position filename="libgimpwidgets/gimppreview.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="622">A #GimpPreview:</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="xmin"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="623">Lower bound for x</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="ymin"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="624">Lower bound for y</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="xmax"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="625">Higher bound for x</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="ymax"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="626">Higher bound for y</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_controls"
              c:identifier="gimp_preview_get_controls"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="975">Gives access to the #GtkHBox at the bottom of the preview that
contains the update toggle. Derived widgets can use this function
if they need to add controls to this area.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppreview.c"
               line="983">the #GtkHBox at the bottom of the preview.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="977">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_cursor"
              c:identifier="gimp_preview_get_default_cursor"
              version="3.0">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="957">See gimp_preview_set_default_cursor():</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppreview.c"
               line="963">The @preview's default #GdkCursor.</doc>
          <type name="Gdk.Cursor" c:type="GdkCursor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="959">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_frame"
              c:identifier="gimp_preview_get_frame"
              version="3.0">
        <source-position filename="libgimpwidgets/gimppreview.h" line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppreview.c"
               line="802">a pointer to the #GtkAspectFrame used in the @preview.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="800">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_grid"
              c:identifier="gimp_preview_get_grid"
              version="3.0">
        <source-position filename="libgimpwidgets/gimppreview.h" line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppreview.c"
               line="818">a pointer to the #GtkGrid used in the @preview.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="816">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_offsets" c:identifier="gimp_preview_get_offsets">
        <source-position filename="libgimpwidgets/gimppreview.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="704">A #GimpPreview:</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="xoff"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="705">X offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="yoff"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="706">Y offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="gimp_preview_get_position"
              version="2.2">
        <source-position filename="libgimpwidgets/gimppreview.h" line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="725">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="726">return location for the horizontal offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="727">return location for the vertical offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="gimp_preview_get_size"
              version="2.2">
        <source-position filename="libgimpwidgets/gimppreview.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="666">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="667">return location for the preview area width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="668">return location for the preview area height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_update"
              c:identifier="gimp_preview_get_update"
              version="2.2">
        <source-position filename="libgimpwidgets/gimppreview.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppreview.c"
               line="569">the state of the "Preview" check button.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="567">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="invalidate"
              c:identifier="gimp_preview_invalidate"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="896">This function starts or renews a short low-priority timeout. When
the timeout expires, the GimpPreview::invalidated signal is emitted
which will usually cause the @preview to be updated.

This function does nothing unless the "Preview" button is checked.

During the emission of the signal a busy cursor is set on the
toplevel window containing the @preview and on the preview area
itself.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="898">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_bounds"
              c:identifier="gimp_preview_set_bounds"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="581">Sets the lower and upper limits for the previewed area. The
difference between the upper and lower value is used to set the
maximum size of the #GimpPreviewArea used in the @preview.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="583">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="xmin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="584">the minimum X value</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="ymin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="585">the minimum Y value</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="xmax" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="586">the maximum X value</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="ymax" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="587">the maximum Y value</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default_cursor"
              c:identifier="gimp_preview_set_default_cursor"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="933">Sets the default mouse cursor for the preview.  Note that this will
be overridden by a %GDK_FLEUR if the preview has scrollbars, or by a
%GDK_WATCH when the preview is invalidated.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="150"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="935">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="936">a #GdkCursor or %NULL</doc>
            <type name="Gdk.Cursor" c:type="GdkCursor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_offsets" c:identifier="gimp_preview_set_offsets">
        <source-position filename="libgimpwidgets/gimppreview.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="xoff" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="yoff" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="gimp_preview_set_size">
        <source-position filename="libgimpwidgets/gimppreview.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_update"
              c:identifier="gimp_preview_set_update"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="544">Sets the state of the "Preview" check button.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="546">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="update" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="547">%TRUE if the preview should invalidate itself when being
         scrolled or when gimp_preview_invalidate() is being called</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="transform"
              c:identifier="gimp_preview_transform"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="746">Transforms from image to widget coordinates.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="748">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="src_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="749">horizontal position on the previewed image</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="src_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="750">vertical position on the previewed image</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="751">returns the transformed horizontal position</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="dest_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="752">returns the transformed vertical position</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="untransform"
              c:identifier="gimp_preview_untransform"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreview.c"
             line="772">Transforms from widget to image coordinates.</doc>
        <source-position filename="libgimpwidgets/gimppreview.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="774">a #GimpPreview widget</doc>
            <type name="Preview" c:type="GimpPreview*"/>
          </instance-parameter>
          <parameter name="src_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="775">horizontal position relative to the preview area's origin</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="src_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="776">vertical position relative to  preview area's origin</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dest_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="777">returns the untransformed horizontal position</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="dest_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreview.c"
                 line="778">returns the untransformed vertical position</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <property name="update"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="PreviewPrivate" c:type="GimpPreviewPrivate*"/>
      </field>
      <glib:signal name="invalidated" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <class name="PreviewArea"
           c:symbol-prefix="preview_area"
           c:type="GimpPreviewArea"
           parent="Gtk.DrawingArea"
           glib:type-name="GimpPreviewArea"
           glib:get-type="gimp_preview_area_get_type"
           glib:type-struct="PreviewAreaClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppreviewarea.c"
           line="38">A general purpose preview widget which caches its pixel data.</doc>
      <source-position filename="libgimpwidgets/gimppreviewarea.h" line="60"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gimp_preview_area_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="419">Creates a new #GimpPreviewArea widget.</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppreviewarea.c"
               line="424">a new #GimpPreviewArea widget.

Since GIMP 2.2</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="blend" c:identifier="gimp_preview_area_blend">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="688">Composites @buf1 on @buf2 with the given @opacity, draws the result
to @area and queues a redraw on the given rectangle.

Since GIMP 2.2</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="690">a #GimpPreviewArea widget.</doc>
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="691">x offset in preview</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="692">y offset in preview</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="693">buffer width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="694">buffer height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="695">the #GimpImageType of @buf1 and @buf2</doc>
            <type name="Gimp.ImageType" c:type="GimpImageType"/>
          </parameter>
          <parameter name="buf1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="696">a #guchar buffer that contains the pixel data for
                the lower layer</doc>
            <array zero-terminated="0" c:type="const guchar*">
              <type name="guint8" c:type="guchar"/>
            </array>
          </parameter>
          <parameter name="rowstride1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="698">rowstride of @buf1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="buf2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="699">a #guchar buffer that contains the pixel data for
                the upper layer</doc>
            <array zero-terminated="0" c:type="const guchar*">
              <type name="guint8" c:type="guchar"/>
            </array>
          </parameter>
          <parameter name="rowstride2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="701">rowstride of @buf2</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="702">The opacity of the first layer.</doc>
            <type name="guint8" c:type="guchar"/>
          </parameter>
        </parameters>
      </method>
      <method name="draw" c:identifier="gimp_preview_area_draw">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="434">Draws @buf on @area and queues a redraw on the given rectangle.

Since GIMP 2.2</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="436">a #GimpPreviewArea widget.</doc>
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="437">x offset in preview</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="438">y offset in preview</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="439">buffer width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="440">buffer height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="441">the #GimpImageType of @buf</doc>
            <type name="Gimp.ImageType" c:type="GimpImageType"/>
          </parameter>
          <parameter name="buf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="442">a #guchar buffer that contains the preview pixel data.</doc>
            <array zero-terminated="0" c:type="const guchar*">
              <type name="guint8" c:type="guchar"/>
            </array>
          </parameter>
          <parameter name="rowstride" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="443">rowstride of @buf</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill" c:identifier="gimp_preview_area_fill">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="1636">Fills the given rectangle of @area in the given color and queues a
redraw.

Since GIMP 2.2</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1638">a #GimpPreviewArea widget.</doc>
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1639">x offset in preview</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1640">y offset in preview</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1641">width of the rectangle to fill</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1642">height of the rectangle to fill</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="red" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1643">red component of the fill color (0-255)</doc>
            <type name="guint8" c:type="guchar"/>
          </parameter>
          <parameter name="green" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1644">green component of the fill color (0-255)</doc>
            <type name="guint8" c:type="guchar"/>
          </parameter>
          <parameter name="blue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1645">red component of the fill color (0-255)</doc>
            <type name="guint8" c:type="guchar"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_size" c:identifier="gimp_preview_area_get_size">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="1835">Gets the preview area size</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1837">a #GimpPreviewArea widget.</doc>
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1838">The preview areay width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1839">The preview areay height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="mask" c:identifier="gimp_preview_area_mask">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="1072">Composites @buf1 on @buf2 with the given @mask, draws the result on
@area and queues a redraw on the given rectangle.

Since GIMP 2.2</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1074">a #GimpPreviewArea widget.</doc>
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1075">x offset in preview</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1076">y offset in preview</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1077">buffer width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1078">buffer height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1079">the #GimpImageType of @buf1 and @buf2</doc>
            <type name="Gimp.ImageType" c:type="GimpImageType"/>
          </parameter>
          <parameter name="buf1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1080">a #guchar buffer that contains the pixel data for
                 the lower layer</doc>
            <array zero-terminated="0" c:type="const guchar*">
              <type name="guint8" c:type="guchar"/>
            </array>
          </parameter>
          <parameter name="rowstride1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1082">rowstride of @buf1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="buf2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1083">a #guchar buffer that contains the pixel data for
                 the upper layer</doc>
            <array zero-terminated="0" c:type="const guchar*">
              <type name="guint8" c:type="guchar"/>
            </array>
          </parameter>
          <parameter name="rowstride2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1085">rowstride of @buf2</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1086">a #guchar buffer representing the mask of the second
                 layer.</doc>
            <array zero-terminated="0" c:type="const guchar*">
              <type name="guint8" c:type="guchar"/>
            </array>
          </parameter>
          <parameter name="rowstride_mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1088">rowstride for the mask.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="menu_popup"
              c:identifier="gimp_preview_area_menu_popup"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="1972">Creates a popup menu that allows one to configure the size and type of
the checkerboard pattern that the @area uses to visualize transparency.</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1974">a #GimpPreviewArea</doc>
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </instance-parameter>
          <parameter name="event"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1975">the button event that causes the menu to popup or %NULL</doc>
            <type name="Gdk.EventButton" c:type="GdkEventButton*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color_config"
              c:identifier="gimp_preview_area_set_color_config"
              version="2.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="1793">Sets the color management configuration to use with this preview area.</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1795">a #GimpPreviewArea widget.</doc>
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </instance-parameter>
          <parameter name="config" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1796">a #GimpColorConfig object.</doc>
            <type name="Gimp.ColorConfig" c:type="GimpColorConfig*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_colormap"
              c:identifier="gimp_preview_area_set_colormap">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="1752">Sets the colormap for the #GimpPreviewArea widget. You need to
call this function before you use gimp_preview_area_draw() with
an image type of %GIMP_INDEXED_IMAGE or %GIMP_INDEXEDA_IMAGE.

Since GIMP 2.2</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1754">a #GimpPreviewArea</doc>
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </instance-parameter>
          <parameter name="colormap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1755">a #guchar buffer that contains the colormap</doc>
            <array zero-terminated="0" c:type="const guchar*">
              <type name="guint8" c:type="guchar"/>
            </array>
          </parameter>
          <parameter name="num_colors" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1756">the number of colors in the colormap</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_size"
              c:identifier="gimp_preview_area_set_max_size"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="1858">Usually a #GimpPreviewArea fills the size that it is
allocated. This function allows you to limit the preview area to a
maximum size. If a larger size is allocated for the widget, the
preview will draw itself centered into the allocated area.</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1860">a #GimpPreviewArea widget</doc>
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1861">the maximum width in pixels or -1 to unset the limit</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1862">the maximum height in pixels or -1 to unset the limit</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_offsets"
              c:identifier="gimp_preview_area_set_offsets"
              version="2.2">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppreviewarea.c"
             line="1726">Sets the offsets of the previewed area. This information is used
when drawing the checkerboard and to determine the dither offsets.</doc>
        <source-position filename="libgimpwidgets/gimppreviewarea.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1728">a #GimpPreviewArea</doc>
            <type name="PreviewArea" c:type="GimpPreviewArea*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1729">horizontal offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimppreviewarea.c"
                 line="1730">vertical offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="check-size" writable="1" transfer-ownership="none">
        <type name="Gimp.CheckSize"/>
      </property>
      <property name="check-type" writable="1" transfer-ownership="none">
        <type name="Gimp.CheckType"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.DrawingArea" c:type="GtkDrawingArea"/>
      </field>
      <field name="priv">
        <type name="PreviewAreaPrivate" c:type="GimpPreviewAreaPrivate*"/>
      </field>
    </class>
    <record name="PreviewAreaClass"
            c:type="GimpPreviewAreaClass"
            glib:is-gtype-struct-for="PreviewArea">
      <source-position filename="libgimpwidgets/gimppreviewarea.h" line="60"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimppreviewarea.h"
                           line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimppreviewarea.h"
                           line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimppreviewarea.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimppreviewarea.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimppreviewarea.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimppreviewarea.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimppreviewarea.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimppreviewarea.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PreviewAreaPrivate"
            c:type="GimpPreviewAreaPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimppreviewarea.h" line="37"/>
    </record>
    <record name="PreviewClass"
            c:type="GimpPreviewClass"
            glib:is-gtype-struct-for="Preview">
      <source-position filename="libgimpwidgets/gimppreview.h" line="90"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="draw">
        <callback name="draw">
          <source-position filename="libgimpwidgets/gimppreview.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="preview" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="853">a #GimpPreview widget</doc>
              <type name="Preview" c:type="GimpPreview*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_thumb">
        <callback name="draw_thumb">
          <source-position filename="libgimpwidgets/gimppreview.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="preview" transfer-ownership="none">
              <type name="Preview" c:type="GimpPreview*"/>
            </parameter>
            <parameter name="area" transfer-ownership="none">
              <type name="PreviewArea" c:type="GimpPreviewArea*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw_buffer">
        <callback name="draw_buffer">
          <source-position filename="libgimpwidgets/gimppreview.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="preview" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="875">a #GimpPreview widget</doc>
              <type name="Preview" c:type="GimpPreview*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="876">a pixel buffer the size of the preview</doc>
              <array zero-terminated="0" c:type="const guchar*">
                <type name="guint8" c:type="guchar"/>
              </array>
            </parameter>
            <parameter name="rowstride" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="877">the @buffer's rowstride</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_cursor">
        <callback name="set_cursor">
          <source-position filename="libgimpwidgets/gimppreview.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="preview" transfer-ownership="none">
              <type name="Preview" c:type="GimpPreview*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="transform">
        <callback name="transform">
          <source-position filename="libgimpwidgets/gimppreview.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="preview" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="748">a #GimpPreview widget</doc>
              <type name="Preview" c:type="GimpPreview*"/>
            </parameter>
            <parameter name="src_x" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="749">horizontal position on the previewed image</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="src_y" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="750">vertical position on the previewed image</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="dest_x"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="751">returns the transformed horizontal position</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="dest_y"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="752">returns the transformed vertical position</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="untransform">
        <callback name="untransform">
          <source-position filename="libgimpwidgets/gimppreview.h" line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="preview" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="774">a #GimpPreview widget</doc>
              <type name="Preview" c:type="GimpPreview*"/>
            </parameter>
            <parameter name="src_x" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="775">horizontal position relative to the preview area's origin</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="src_y" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="776">vertical position relative to  preview area's origin</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="dest_x"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="777">returns the untransformed horizontal position</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="dest_y"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="libgimpwidgets/gimppreview.c"
                   line="778">returns the untransformed vertical position</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="invalidated">
        <callback name="invalidated">
          <source-position filename="libgimpwidgets/gimppreview.h" line="79"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="preview" transfer-ownership="none">
              <type name="Preview" c:type="GimpPreview*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimppreview.h" line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimppreview.h" line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimppreview.h" line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimppreview.h" line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimppreview.h" line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimppreview.h" line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimppreview.h" line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimppreview.h" line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PreviewPrivate" c:type="GimpPreviewPrivate" disguised="1">
      <source-position filename="libgimpwidgets/gimppreview.h" line="42"/>
    </record>
    <class name="ProcBrowserDialog"
           c:symbol-prefix="proc_browser_dialog"
           c:type="GimpProcBrowserDialog"
           parent="Dialog"
           glib:type-name="GimpProcBrowserDialog"
           glib:get-type="gimp_proc_browser_dialog_get_type"
           glib:type-struct="ProcBrowserDialogClass">
      <doc xml:space="preserve"
           filename="libgimp/gimpprocbrowserdialog.c"
           line="39">The dialog for the procedure and plugin browsers.</doc>
      <source-position filename="libgimp/gimpprocbrowserdialog.h" line="68"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="gimp_proc_browser_dialog_new"
                   version="2.4"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="libgimp/gimpprocbrowserdialog.c"
             line="231">Create a new #GimpProcBrowserDialog.</doc>
        <source-position filename="libgimp/gimpprocbrowserdialog.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpprocbrowserdialog.c"
               line="242">a newly created #GimpProcBrowserDialog.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpprocbrowserdialog.c"
                 line="233">The dialog's title.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="role" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpprocbrowserdialog.c"
                 line="234">The dialog's role, see gtk_window_set_role().</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="help_func" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="libgimp/gimpprocbrowserdialog.c"
                 line="235">The function which will be called if
            the user presses "F1".</doc>
            <type name="HelpFunc" c:type="GimpHelpFunc"/>
          </parameter>
          <parameter name="help_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpprocbrowserdialog.c"
                 line="237">The help_id which will be passed to @help_func.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpprocbrowserdialog.c"
                 line="238">A %NULL-terminated list destribing the action_area buttons.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="row_activated">
        <source-position filename="libgimp/gimpprocbrowserdialog.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <type name="ProcBrowserDialog" c:type="GimpProcBrowserDialog*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="selection_changed">
        <source-position filename="libgimp/gimpprocbrowserdialog.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <type name="ProcBrowserDialog" c:type="GimpProcBrowserDialog*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_selected"
              c:identifier="gimp_proc_browser_dialog_get_selected"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpprocbrowserdialog.c"
             line="278">Retrieves the name of the currently selected procedure.</doc>
        <source-position filename="libgimp/gimpprocbrowserdialog.h" line="79"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="libgimp/gimpprocbrowserdialog.c"
               line="284">The name of the selected procedure of %NULL if no
              procedure is selected.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpprocbrowserdialog.c"
                 line="280">a #GimpProcBrowserDialog</doc>
            <type name="ProcBrowserDialog" c:type="GimpProcBrowserDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Dialog" c:type="GimpDialog"/>
      </field>
      <field name="priv">
        <type name="ProcBrowserDialogPrivate"
              c:type="GimpProcBrowserDialogPrivate*"/>
      </field>
      <glib:signal name="row-activated" when="last">
        <doc xml:space="preserve"
             filename="libgimp/gimpprocbrowserdialog.c"
             line="128">Emitted when one of the rows in the contained #GtkTreeView is activated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="selection-changed" when="last">
        <doc xml:space="preserve"
             filename="libgimp/gimpprocbrowserdialog.c"
             line="113">Emitted when the selection in the contained #GtkTreeView changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ProcBrowserDialogClass"
            c:type="GimpProcBrowserDialogClass"
            glib:is-gtype-struct-for="ProcBrowserDialog">
      <source-position filename="libgimp/gimpprocbrowserdialog.h" line="68"/>
      <field name="parent_class">
        <type name="DialogClass" c:type="GimpDialogClass"/>
      </field>
      <field name="selection_changed">
        <callback name="selection_changed">
          <source-position filename="libgimp/gimpprocbrowserdialog.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="dialog" transfer-ownership="none">
              <type name="ProcBrowserDialog" c:type="GimpProcBrowserDialog*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="row_activated">
        <callback name="row_activated">
          <source-position filename="libgimp/gimpprocbrowserdialog.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="dialog" transfer-ownership="none">
              <type name="ProcBrowserDialog" c:type="GimpProcBrowserDialog*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimpprocbrowserdialog.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimpprocbrowserdialog.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimpprocbrowserdialog.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimpprocbrowserdialog.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimpprocbrowserdialog.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimpprocbrowserdialog.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimpprocbrowserdialog.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimpprocbrowserdialog.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ProcBrowserDialogPrivate"
            c:type="GimpProcBrowserDialogPrivate"
            disguised="1">
      <source-position filename="libgimp/gimpprocbrowserdialog.h" line="42"/>
    </record>
    <class name="ProcedureDialog"
           c:symbol-prefix="procedure_dialog"
           c:type="GimpProcedureDialog"
           parent="Dialog"
           glib:type-name="GimpProcedureDialog"
           glib:get-type="gimp_procedure_dialog_get_type"
           glib:type-struct="ProcedureDialogClass">
      <source-position filename="libgimp/gimpproceduredialog.h" line="64"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gimp_procedure_dialog_new">
        <source-position filename="libgimp/gimpproceduredialog.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="procedure" transfer-ownership="none">
            <type name="Gimp.Procedure" c:type="GimpProcedure*"/>
          </parameter>
          <parameter name="config" transfer-ownership="none">
            <type name="Gimp.ProcedureConfig" c:type="GimpProcedureConfig*"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="run" c:identifier="gimp_procedure_dialog_run">
        <source-position filename="libgimp/gimpproceduredialog.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="dialog" transfer-ownership="none">
            <type name="ProcedureDialog" c:type="GimpProcedureDialog*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="config"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="Gimp.ProcedureConfig"/>
      </property>
      <property name="procedure" writable="1" transfer-ownership="none">
        <type name="Gimp.Procedure"/>
      </property>
      <field name="parent_instance">
        <type name="Dialog" c:type="GimpDialog"/>
      </field>
      <field name="priv">
        <type name="ProcedureDialogPrivate"
              c:type="GimpProcedureDialogPrivate*"/>
      </field>
    </class>
    <record name="ProcedureDialogClass"
            c:type="GimpProcedureDialogClass"
            glib:is-gtype-struct-for="ProcedureDialog">
      <source-position filename="libgimp/gimpproceduredialog.h" line="64"/>
      <field name="parent_class">
        <type name="DialogClass" c:type="GimpDialogClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimpproceduredialog.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimpproceduredialog.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimpproceduredialog.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimpproceduredialog.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimpproceduredialog.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimpproceduredialog.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimpproceduredialog.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimpproceduredialog.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ProcedureDialogPrivate"
            c:type="GimpProcedureDialogPrivate"
            disguised="1">
      <source-position filename="libgimp/gimpproceduredialog.h" line="42"/>
    </record>
    <class name="ProgressBar"
           c:symbol-prefix="progress_bar"
           c:type="GimpProgressBar"
           parent="Gtk.ProgressBar"
           glib:type-name="GimpProgressBar"
           glib:get-type="gimp_progress_bar_get_type"
           glib:type-struct="ProgressBarClass">
      <doc xml:space="preserve"
           filename="libgimp/gimpprogressbar.c"
           line="41">A widget providing a progress bar that automatically redirects any
progress calls to itself.</doc>
      <source-position filename="libgimp/gimpprogressbar.h" line="59"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gimp_progress_bar_new"
                   version="2.2">
        <doc xml:space="preserve"
             filename="libgimp/gimpprogressbar.c"
             line="217">Creates a new #GimpProgressBar widget.</doc>
        <source-position filename="libgimp/gimpprogressbar.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpprogressbar.c"
               line="222">the new widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="Gtk.ProgressBar" c:type="GtkProgressBar"/>
      </field>
      <field name="progress_callback">
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="cancelable">
        <type name="gboolean" c:type="gboolean"/>
      </field>
    </class>
    <record name="ProgressBarClass"
            c:type="GimpProgressBarClass"
            glib:is-gtype-struct-for="ProgressBar">
      <source-position filename="libgimp/gimpprogressbar.h" line="59"/>
      <field name="parent_class">
        <type name="Gtk.ProgressBarClass" c:type="GtkProgressBarClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimpprogressbar.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimpprogressbar.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimpprogressbar.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimpprogressbar.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <function-macro name="QUERY_BOX_VBOX"
                    c:identifier="GIMP_QUERY_BOX_VBOX"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.h"
           line="97">A macro to access the vertical #GtkBox in a #libgimpwidgets-gimpquerybox.
Useful if you want to add more widgets.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="104"/>
      <parameters>
        <parameter name="qbox">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="99">The query box.</doc>
        </parameter>
      </parameters>
    </function-macro>
    <callback name="QueryBooleanCallback" c:type="GimpQueryBooleanCallback">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.h"
           line="84">The callback for a boolean query box.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="92"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="query_box" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="86">The query box.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="87">The entered boolean value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="88">user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="QueryDoubleCallback" c:type="GimpQueryDoubleCallback">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.h"
           line="58">The callback for a double query box.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="66"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="query_box" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="60">The query box.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="61">The entered double value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="62">user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="QueryIntCallback" c:type="GimpQueryIntCallback">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.h"
           line="46">The callback for an int query box.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="54"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="query_box" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="48">The query box.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="49">The entered integer value.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="50">user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="QuerySizeCallback" c:type="GimpQuerySizeCallback">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.h"
           line="70">The callback for a size query box.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="79"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="query_box" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="72">The query box.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="73">The entered size in pixels.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="unit" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="74">The selected unit from the #GimpUnitMenu.</doc>
          <type name="Gimp.Unit" c:type="GimpUnit"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="3">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="75">user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="QueryStringCallback" c:type="GimpQueryStringCallback">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.h"
           line="34">Note that you must not g_free() the passed string.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="42"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="query_box" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="36">The query box.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="37">The entered string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.h"
               line="38">user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <function-macro name="RANDOM_SEED_SPINBUTTON"
                    c:identifier="GIMP_RANDOM_SEED_SPINBUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="119"/>
      <parameters>
        <parameter name="hbox">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.h"
               line="115">The #GtkBox returned by gimp_random_seed_new().</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RANDOM_SEED_SPINBUTTON_ADJ"
                    c:identifier="GIMP_RANDOM_SEED_SPINBUTTON_ADJ"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="128"/>
      <parameters>
        <parameter name="hbox">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.h"
               line="124">The #GtkBox returned by gimp_random_seed_new().</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RANDOM_SEED_TOGGLE"
                    c:identifier="GIMP_RANDOM_SEED_TOGGLE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="138"/>
      <parameters>
        <parameter name="hbox">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.h"
               line="134">The #GtkBox returned by gimp_random_seed_new().</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RULER" c:identifier="GIMP_RULER" introspectable="0">
      <source-position filename="libgimpwidgets/gimpruler.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RULER_CLASS"
                    c:identifier="GIMP_RULER_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpruler.h" line="30"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RULER_GET_CLASS"
                    c:identifier="GIMP_RULER_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpruler.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Ruler"
           c:symbol-prefix="ruler"
           c:type="GimpRuler"
           parent="Gtk.Widget"
           glib:type-name="GimpRuler"
           glib:get-type="gimp_ruler_get_type"
           glib:type-struct="RulerClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpruler.c"
           line="33">A ruler widget with configurable unit and orientation.</doc>
      <source-position filename="libgimpwidgets/gimpruler.h" line="59"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="gimp_ruler_new" version="2.8">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpruler.c"
             line="378">Creates a new ruler.</doc>
        <source-position filename="libgimpwidgets/gimpruler.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpruler.c"
               line="384">a new #GimpRuler widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="380">the ruler's orientation.</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_track_widget"
              c:identifier="gimp_ruler_add_track_widget"
              version="2.8">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpruler.c"
             line="517">Adds a "track widget" to the ruler. The ruler will connect to
GtkWidget:motion-notify-event: on the track widget and update its
position marker accordingly. The marker is correctly updated also
for the track widget's children, regardless of whether they are
ordinary children of off-screen children.</doc>
        <source-position filename="libgimpwidgets/gimpruler.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="519">a #GimpRuler</doc>
            <type name="Ruler" c:type="GimpRuler*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="520">the track widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="gimp_ruler_get_position"
              version="2.8">
        <source-position filename="libgimpwidgets/gimpruler.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpruler.c"
               line="698">the current position of the @ruler widget.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="696">a #GimpRuler</doc>
            <type name="Ruler" c:type="GimpRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_range"
              c:identifier="gimp_ruler_get_range"
              version="2.8">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpruler.c"
             line="756">Retrieves values indicating the range and current position of a #GimpRuler.
See gimp_ruler_set_range().</doc>
        <source-position filename="libgimpwidgets/gimpruler.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="758">a #GimpRuler</doc>
            <type name="Ruler" c:type="GimpRuler*"/>
          </instance-parameter>
          <parameter name="lower"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="759">location to store lower limit of the ruler,
                          or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="upper"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="761">location to store upper limit of the ruler,
                          or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="max_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="763">location to store the maximum size of the ruler
                             used when calculating the space to leave for
                             the text, or %NULL.</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_unit" c:identifier="gimp_ruler_get_unit" version="2.8">
        <source-position filename="libgimpwidgets/gimpruler.h" line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpruler.c"
               line="619">the unit currently used in the @ruler widget.</doc>
          <type name="Gimp.Unit" c:type="GimpUnit"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="617">a #GimpRuler</doc>
            <type name="Ruler" c:type="GimpRuler*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_track_widget"
              c:identifier="gimp_ruler_remove_track_widget"
              version="2.8">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpruler.c"
             line="553">Removes a previously added track widget from the ruler. See
gimp_ruler_add_track_widget().</doc>
        <source-position filename="libgimpwidgets/gimpruler.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="555">a #GimpRuler</doc>
            <type name="Ruler" c:type="GimpRuler*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="556">the track widget to remove</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_position"
              c:identifier="gimp_ruler_set_position"
              version="2.8">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpruler.c"
             line="631">This sets the position of the ruler.</doc>
        <source-position filename="libgimpwidgets/gimpruler.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="633">a #GimpRuler</doc>
            <type name="Ruler" c:type="GimpRuler*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="634">the position to set the ruler to</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_range"
              c:identifier="gimp_ruler_set_range"
              version="2.8">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpruler.c"
             line="710">This sets the range of the ruler.</doc>
        <source-position filename="libgimpwidgets/gimpruler.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="712">a #GimpRuler</doc>
            <type name="Ruler" c:type="GimpRuler*"/>
          </instance-parameter>
          <parameter name="lower" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="713">the lower limit of the ruler</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="upper" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="714">the upper limit of the ruler</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="max_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="715">the maximum size of the ruler used when calculating the space to
leave for the text</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_unit" c:identifier="gimp_ruler_set_unit" version="2.8">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpruler.c"
             line="586">This sets the unit of the ruler.</doc>
        <source-position filename="libgimpwidgets/gimpruler.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ruler" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="588">a #GimpRuler</doc>
            <type name="Ruler" c:type="GimpRuler*"/>
          </instance-parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpruler.c"
                 line="589">the #GimpUnit to set the ruler to</doc>
            <type name="Gimp.Unit" c:type="GimpUnit"/>
          </parameter>
        </parameters>
      </method>
      <property name="lower" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="max-size" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="orientation" writable="1" transfer-ownership="none">
        <type name="Gtk.Orientation"/>
      </property>
      <property name="position" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="unit" writable="1" transfer-ownership="none">
        <type name="Gimp.Unit"/>
      </property>
      <property name="upper" writable="1" transfer-ownership="none">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Widget" c:type="GtkWidget"/>
      </field>
      <field name="priv">
        <type name="RulerPrivate" c:type="GimpRulerPrivate*"/>
      </field>
    </class>
    <record name="RulerClass"
            c:type="GimpRulerClass"
            glib:is-gtype-struct-for="Ruler">
      <source-position filename="libgimpwidgets/gimpruler.h" line="59"/>
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpruler.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpruler.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpruler.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpruler.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpruler.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpruler.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpruler.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpruler.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="RulerPrivate" c:type="GimpRulerPrivate" disguised="1">
      <source-position filename="libgimpwidgets/gimpruler.h" line="36"/>
    </record>
    <function-macro name="SCALE_ENTRY_LABEL"
                    c:identifier="GIMP_SCALE_ENTRY_LABEL"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpscaleentry.h" line="39"/>
      <parameters>
        <parameter name="adj">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.h"
               line="35">The #GtkAdjustment returned by gimp_scale_entry_new().</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCALE_ENTRY_SCALE"
                    c:identifier="GIMP_SCALE_ENTRY_SCALE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpscaleentry.h" line="48"/>
      <parameters>
        <parameter name="adj">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.h"
               line="44">The #GtkAdjustment returned by gimp_scale_entry_new().</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCALE_ENTRY_SCALE_ADJ"
                    c:identifier="GIMP_SCALE_ENTRY_SCALE_ADJ"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpscaleentry.h" line="57"/>
      <parameters>
        <parameter name="adj">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.h"
               line="53">The #GtkAdjustment returned by gimp_scale_entry_new().</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCALE_ENTRY_SPINBUTTON"
                    c:identifier="GIMP_SCALE_ENTRY_SPINBUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpscaleentry.h" line="67"/>
      <parameters>
        <parameter name="adj">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.h"
               line="63">The #GtkAdjustment returned by gimp_scale_entry_new().</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCALE_ENTRY_SPINBUTTON_ADJ"
                    c:identifier="GIMP_SCALE_ENTRY_SPINBUTTON_ADJ"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpscaleentry.h" line="76"/>
      <parameters>
        <parameter name="adj">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.h"
               line="72">The #GtkAdjustment returned by gimp_scale_entry_new().</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCROLLED_PREVIEW"
                    c:identifier="GIMP_SCROLLED_PREVIEW"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCROLLED_PREVIEW_CLASS"
                    c:identifier="GIMP_SCROLLED_PREVIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCROLLED_PREVIEW_GET_CLASS"
                    c:identifier="GIMP_SCROLLED_PREVIEW_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SELECT_BUTTON"
                    c:identifier="GIMP_SELECT_BUTTON"
                    introspectable="0">
      <source-position filename="libgimp/gimpselectbutton.h" line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SELECT_BUTTON_CLASS"
                    c:identifier="GIMP_SELECT_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpselectbutton.h" line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SELECT_BUTTON_GET_CLASS"
                    c:identifier="GIMP_SELECT_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpselectbutton.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SIZE_ENTRY"
                    c:identifier="GIMP_SIZE_ENTRY"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpsizeentry.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SIZE_ENTRY_CLASS"
                    c:identifier="GIMP_SIZE_ENTRY_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpsizeentry.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SIZE_ENTRY_GET_CLASS"
                    c:identifier="GIMP_SIZE_ENTRY_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpsizeentry.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SPIN_BUTTON"
                    c:identifier="GIMP_SPIN_BUTTON"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpspinbutton.h" line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SPIN_BUTTON_CLASS"
                    c:identifier="GIMP_SPIN_BUTTON_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpspinbutton.h" line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SPIN_BUTTON_GET_CLASS"
                    c:identifier="GIMP_SPIN_BUTTON_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpspinbutton.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STRING_COMBO_BOX"
                    c:identifier="GIMP_STRING_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STRING_COMBO_BOX_CLASS"
                    c:identifier="GIMP_STRING_COMBO_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STRING_COMBO_BOX_GET_CLASS"
                    c:identifier="GIMP_STRING_COMBO_BOX_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="ScrolledPreview"
           c:symbol-prefix="scrolled_preview"
           c:type="GimpScrolledPreview"
           parent="Preview"
           abstract="1"
           glib:type-name="GimpScrolledPreview"
           glib:get-type="gimp_scrolled_preview_get_type"
           glib:type-struct="ScrolledPreviewClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpscrolledpreview.c"
           line="36">A widget providing a #GimpPreview enhanced by scrolling capabilities.</doc>
      <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                       line="67"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <method name="freeze"
              c:identifier="gimp_scrolled_preview_freeze"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpscrolledpreview.c"
             line="883">While the @preview is frozen, it is not going to redraw itself in
response to scroll events.

This function should only be used to implement widgets derived from
#GimpScrolledPreview. There is no point in calling this from a plug-in.</doc>
        <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="885">a #GimpScrolledPreview</doc>
            <type name="ScrolledPreview" c:type="GimpScrolledPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_adjustments"
              c:identifier="gimp_scrolled_preview_get_adjustments">
        <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="864">a #GimpScrolledPreview</doc>
            <type name="ScrolledPreview" c:type="GimpScrolledPreview*"/>
          </instance-parameter>
          <parameter name="hadj"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="865">Horizontal adjustment</doc>
            <type name="Gtk.Adjustment" c:type="GtkAdjustment**"/>
          </parameter>
          <parameter name="vadj"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="866">Vertical adjustment</doc>
            <type name="Gtk.Adjustment" c:type="GtkAdjustment**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="gimp_scrolled_preview_set_policy"
              version="2.4">
        <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="839">a #GimpScrolledPreview</doc>
            <type name="ScrolledPreview" c:type="GimpScrolledPreview*"/>
          </instance-parameter>
          <parameter name="hscrollbar_policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="840">policy for horizontal scrollbar</doc>
            <type name="Gtk.PolicyType" c:type="GtkPolicyType"/>
          </parameter>
          <parameter name="vscrollbar_policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="841">policy for vertical scrollbar</doc>
            <type name="Gtk.PolicyType" c:type="GtkPolicyType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_position"
              c:identifier="gimp_scrolled_preview_set_position"
              version="2.4">
        <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="802">a #GimpScrolledPreview</doc>
            <type name="ScrolledPreview" c:type="GimpScrolledPreview*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="803">horizontal scroll offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="804">vertical scroll offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="thaw"
              c:identifier="gimp_scrolled_preview_thaw"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpscrolledpreview.c"
             line="907">While the @preview is frozen, it is not going to redraw itself in
response to scroll events.

This function should only be used to implement widgets derived from
#GimpScrolledPreview. There is no point in calling this from a plug-in.</doc>
        <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpscrolledpreview.c"
                 line="909">a #GimpScrolledPreview</doc>
            <type name="ScrolledPreview" c:type="GimpScrolledPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Preview" c:type="GimpPreview"/>
      </field>
      <field name="priv">
        <type name="ScrolledPreviewPrivate"
              c:type="GimpScrolledPreviewPrivate*"/>
      </field>
    </class>
    <record name="ScrolledPreviewClass"
            c:type="GimpScrolledPreviewClass"
            glib:is-gtype-struct-for="ScrolledPreview">
      <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                       line="67"/>
      <field name="parent_class">
        <type name="PreviewClass" c:type="GimpPreviewClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ScrolledPreviewPrivate"
            c:type="GimpScrolledPreviewPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                       line="44"/>
    </record>
    <class name="SelectButton"
           c:symbol-prefix="select_button"
           c:type="GimpSelectButton"
           parent="Gtk.Box"
           glib:type-name="GimpSelectButton"
           glib:get-type="gimp_select_button_get_type"
           glib:type-struct="SelectButtonClass">
      <doc xml:space="preserve"
           filename="libgimp/gimpselectbutton.c"
           line="32">The base class of the brush, pattern, gradient, palette and font
select buttons.</doc>
      <source-position filename="libgimp/gimpselectbutton.h" line="71"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <method name="close_popup"
              c:identifier="gimp_select_button_close_popup"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpselectbutton.c"
             line="73">Closes the popup window associated with @button.</doc>
        <source-position filename="libgimp/gimpselectbutton.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpselectbutton.c"
                 line="75">A #GimpSelectButton</doc>
            <type name="SelectButton" c:type="GimpSelectButton*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <field name="priv">
        <type name="SelectButtonPrivate" c:type="GimpSelectButtonPrivate*"/>
      </field>
      <field name="temp_callback">
        <type name="utf8" c:type="const gchar*"/>
      </field>
    </class>
    <record name="SelectButtonClass"
            c:type="GimpSelectButtonClass"
            glib:is-gtype-struct-for="SelectButton">
      <source-position filename="libgimp/gimpselectbutton.h" line="71"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="default_title">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="select_destroy">
        <callback name="select_destroy">
          <source-position filename="libgimp/gimpselectbutton.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="callback" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimpselectbutton.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimpselectbutton.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimpselectbutton.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimpselectbutton.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimpselectbutton.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimpselectbutton.h" line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimpselectbutton.h" line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimpselectbutton.h" line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SelectButtonPrivate"
            c:type="GimpSelectButtonPrivate"
            disguised="1">
      <source-position filename="libgimp/gimpselectbutton.h" line="41"/>
    </record>
    <class name="SizeEntry"
           c:symbol-prefix="size_entry"
           c:type="GimpSizeEntry"
           parent="Gtk.Grid"
           glib:type-name="GimpSizeEntry"
           glib:get-type="gimp_size_entry_get_type"
           glib:type-struct="SizeEntryClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpsizeentry.c"
           line="38">This widget is used to enter pixel distances/sizes and resolutions.

You can specify the number of fields the widget should provide. For
each field automatic mappings are performed between the field's
"reference value" and its "value".

There is a #GimpUnitComboBox right of the entry fields which lets
you specify the #GimpUnit of the displayed values.

For each field, there can be one or two #GtkSpinButton's to enter
"value" and "reference value". If you specify @show_refval as
%FALSE in gimp_size_entry_new() there will be only one
#GtkSpinButton and the #GimpUnitComboBox will contain an item for
selecting GIMP_UNIT_PIXEL.

The "reference value" is either of GIMP_UNIT_PIXEL or dpi,
depending on which #GimpSizeEntryUpdatePolicy you specify in
gimp_size_entry_new().  The "value" is either the size in pixels
mapped to the size in a real-world-unit (see #GimpUnit) or the dpi
value mapped to pixels per real-world-unit.</doc>
      <source-position filename="libgimpwidgets/gimpsizeentry.h" line="72"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="gimp_size_entry_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="225">Creates a new #GimpSizeEntry widget.

To have all automatic calculations performed correctly, set up the
widget in the following order:

1. gimp_size_entry_new()

2. (for each additional input field) gimp_size_entry_add_field()

3. gimp_size_entry_set_unit()

For each input field:

4. gimp_size_entry_set_resolution()

5. gimp_size_entry_set_refval_boundaries()
   (or gimp_size_entry_set_value_boundaries())

6. gimp_size_entry_set_size()

7. gimp_size_entry_set_refval() (or gimp_size_entry_set_value())

The #GimpSizeEntry is derived from #GtkGrid and will have
an empty border of one cell width on each side plus an empty column left
of the #GimpUnitComboBox to allow the caller to add labels or a
#GimpChainButton.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpsizeentry.c"
               line="269">A Pointer to the new #GimpSizeEntry widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="number_of_fields" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="227">The number of input fields.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="228">The initial unit.</doc>
            <type name="Gimp.Unit" c:type="GimpUnit"/>
          </parameter>
          <parameter name="unit_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="229">A printf-like unit-format string as is used with
                    gimp_unit_menu_new().</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="menu_show_pixels" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="231">%TRUE if the unit menu should contain an item for
                    GIMP_UNIT_PIXEL (ignored if the @update_policy is not
                    GIMP_SIZE_ENTRY_UPDATE_NONE).</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="menu_show_percent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="234">%TRUE if the unit menu should contain an item for
                    GIMP_UNIT_PERCENT.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="show_refval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="236">%TRUE if you want an extra "reference value"
                    spinbutton per input field.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="spinbutton_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="238">The minimal horizontal size of the #GtkSpinButton's.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="update_policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="239">How the automatic pixel &lt;-&gt; real-world-unit
                    calculations should be done.</doc>
            <type name="SizeEntryUpdatePolicy"
                  c:type="GimpSizeEntryUpdatePolicy"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="refval_changed">
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unit_changed">
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="value_changed">
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_field" c:identifier="gimp_size_entry_add_field">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="442">Adds an input field to the #GimpSizeEntry.

The new input field will have the index 0. If you specified @show_refval
as %TRUE in gimp_size_entry_new() you have to pass an additional
#GtkSpinButton to hold the reference value. If @show_refval was %FALSE,
@refval_spinbutton will be ignored.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="444">The sizeentry you want to add a field to.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="value_spinbutton" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="445">The spinbutton to display the field's value.</doc>
            <type name="Gtk.SpinButton" c:type="GtkSpinButton*"/>
          </parameter>
          <parameter name="refval_spinbutton" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="446">The spinbutton to display the field's reference value.</doc>
            <type name="Gtk.SpinButton" c:type="GtkSpinButton*"/>
          </parameter>
        </parameters>
      </method>
      <method name="attach_label" c:identifier="gimp_size_entry_attach_label">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="556">Attaches a #GtkLabel to the #GimpSizeEntry (which is a #GtkGrid).</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpsizeentry.c"
               line="566">A pointer to the new #GtkLabel widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="558">The sizeentry you want to add a label to.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="559">The text of the label.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="560">The row where the label will be attached.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="561">The column where the label will be attached.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="alignment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="562">The horizontal alignment of the label.</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_help_widget"
              c:identifier="gimp_size_entry_get_help_widget">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="1668">You shouldn't fiddle with the internals of a #GimpSizeEntry but
if you want to set tooltips using gimp_help_set_help_data() you
can use this function to get a pointer to the spinbuttons.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpsizeentry.c"
               line="1677">a #GtkWidget pointer that you can attach a tooltip to.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1670">a #GimpSizeEntry</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1671">the index of the widget you want to get a pointer to</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_fields" c:identifier="gimp_size_entry_get_n_fields">
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_refval" c:identifier="gimp_size_entry_get_refval">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="1100">Returns the reference value for field # @field of the #GimpSizeEntry.

The reference value is either a distance in pixels or a resolution
in dpi, depending on which #GimpSizeEntryUpdatePolicy you chose in
gimp_size_entry_new().</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="132"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpsizeentry.c"
               line="1111">The reference value of the chosen @field.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1102">The sizeentry you want to know a reference value of.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1103">The index of the field you want to know the reference value of.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_unit" c:identifier="gimp_size_entry_get_unit">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="1235">Returns the #GimpUnit the user has selected in the #GimpSizeEntry's
#GimpUnitComboBox.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpsizeentry.c"
               line="1242">The sizeentry's unit.</doc>
          <type name="Gimp.Unit" c:type="GimpUnit"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1237">The sizeentry you want to know the unit of.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_unit_combo"
              c:identifier="gimp_size_entry_get_unit_combo">
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpsizeentry.c"
               line="546">the size entry's #GimpUnitComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="544">a #GimpSizeEntry.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_update_policy"
              c:identifier="gimp_size_entry_get_update_policy">
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="SizeEntryUpdatePolicy"
                c:type="GimpSizeEntryUpdatePolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="gimp_size_entry_get_value">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="811">Returns the value of field # @field of the #GimpSizeEntry.

The @value returned is a distance or resolution
in the #GimpUnit the user has selected in the #GimpSizeEntry's
#GimpUnitComboBox.

NOTE: In most cases you won't be interested in this value because the
      #GimpSizeEntry's purpose is to shield the programmer from unit
      calculations. Use gimp_size_entry_get_refval() instead.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpsizeentry.c"
               line="826">The value of the chosen @field.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="813">The sizeentry you want to know a value of.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="814">The index of the field you want to know the value of.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="grab_focus" c:identifier="gimp_size_entry_grab_focus">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="1610">This function is rather ugly and just a workaround for the fact that
it's impossible to implement gtk_widget_grab_focus() for a #GtkGrid (is this actually true after the Table-&gt;Grid conversion?).</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1612">The sizeentry you want to grab the keyboard focus.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_activates_default"
              c:identifier="gimp_size_entry_set_activates_default"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="1633">Iterates over all entries in the #GimpSizeEntry and calls
gtk_entry_set_activates_default() on them.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1635">A #GimpSizeEntry</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1636">%TRUE to activate window's default widget on Enter keypress</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pixel_digits"
              c:identifier="gimp_size_entry_set_pixel_digits">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="1586">This function allows you set up a #GimpSizeEntry so that sub-pixel
sizes can be entered.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1588">a #GimpSizeEntry</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="digits" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1589">the number of digits to display for a pixel size</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_refval" c:identifier="gimp_size_entry_set_refval">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="1183">Sets the reference value for field # @field of the #GimpSizeEntry.

The @refval passed is either a distance in pixels or a resolution in dpi,
depending on which #GimpSizeEntryUpdatePolicy you chose in
gimp_size_entry_new().</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1185">The sizeentry you want to set a reference value for.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1186">The index of the field you want to set the reference value for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="refval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1187">The new reference value for @field.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_refval_boundaries"
              c:identifier="gimp_size_entry_set_refval_boundaries">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="953">Limits the range of possible reference values which can be entered in
field # @field of the #GimpSizeEntry.

The current reference value of the @field will be clamped to fit in the
@field's new boundaries.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="955">The sizeentry you want to set the reference value boundaries for.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="956">The index of the field you want to set the reference value
        boundaries for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="lower" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="958">The new lower boundary of the reference value of the chosen @field.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="upper" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="959">The new upper boundary of the reference value of the chosen @field.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_refval_digits"
              c:identifier="gimp_size_entry_set_refval_digits">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="1057">Sets the decimal digits of field # @field of the #GimpSizeEntry to
@digits.

If you don't specify this value explicitly, the reference value's number
of digits will equal to 0 for #GIMP_SIZE_ENTRY_UPDATE_SIZE and to 2 for
#GIMP_SIZE_ENTRY_UPDATE_RESOLUTION.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1059">The sizeentry you want to set the reference value digits for.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1060">The index of the field you want to set the reference value for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="digits" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1061">The new number of decimal digits for the #GtkSpinButton which
         displays @field's reference value.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_resolution"
              c:identifier="gimp_size_entry_set_resolution">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="619">Sets the resolution (in dpi) for field # @field of the #GimpSizeEntry.

The @resolution passed will be clamped to fit in
[#GIMP_MIN_RESOLUTION..#GIMP_MAX_RESOLUTION].

This function does nothing if the #GimpSizeEntryUpdatePolicy specified in
gimp_size_entry_new() doesn't equal to #GIMP_SIZE_ENTRY_UPDATE_SIZE.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="621">The sizeentry you want to set a resolution for.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="622">The index of the field you want to set the resolution for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="resolution" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="623">The new resolution (in dpi) for the chosen @field.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="keep_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="624">%TRUE if the @field's size in pixels should stay the same.
             %FALSE if the @field's size in units should stay the same.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="gimp_size_entry_set_size">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="667">Sets the pixel values for field # @field of the #GimpSizeEntry
which will be treated as 0% and 100%.

These values will be used if you specified @menu_show_percent as %TRUE
in gimp_size_entry_new() and the user has selected GIMP_UNIT_PERCENT in
the #GimpSizeEntry's #GimpUnitComboBox.

This function does nothing if the #GimpSizeEntryUpdatePolicy specified in
gimp_size_entry_new() doesn't equal to GIMP_SIZE_ENTRY_UPDATE_SIZE.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="669">The sizeentry you want to set a size for.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="670">The index of the field you want to set the size for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="lower" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="671">The reference value which will be treated as 0%.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="upper" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="672">The reference value which will be treated as 100%.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_unit" c:identifier="gimp_size_entry_set_unit">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="1301">Sets the #GimpSizeEntry's unit. The reference value for all fields will
stay the same but the value in units or pixels per unit will change
according to which #GimpSizeEntryUpdatePolicy you chose in
gimp_size_entry_new().</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1303">The sizeentry you want to change the unit for.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1304">The new unit.</doc>
            <type name="Gimp.Unit" c:type="GimpUnit"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value" c:identifier="gimp_size_entry_set_value">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="899">Sets the value for field # @field of the #GimpSizeEntry.

The @value passed is treated to be a distance or resolution
in the #GimpUnit the user has selected in the #GimpSizeEntry's
#GimpUnitComboBox.

NOTE: In most cases you won't be interested in this value because the
      #GimpSizeEntry's purpose is to shield the programmer from unit
      calculations. Use gimp_size_entry_set_refval() instead.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="901">The sizeentry you want to set a value for.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="902">The index of the field you want to set a value for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="903">The new value for @field.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_boundaries"
              c:identifier="gimp_size_entry_set_value_boundaries">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="708">Limits the range of possible values which can be entered in field # @field
of the #GimpSizeEntry.

The current value of the @field will be clamped to fit in the @field's
new boundaries.

NOTE: In most cases you won't be interested in this function because the
      #GimpSizeEntry's purpose is to shield the programmer from unit
      calculations. Use gimp_size_entry_set_refval_boundaries() instead.
      Whatever you do, don't mix these calls. A size entry should either
      be clamped by the value or the reference value.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="710">The sizeentry you want to set value boundaries for.</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="field" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="711">The index of the field you want to set value boundaries for.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="lower" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="712">The new lower boundary of the value of the chosen @field.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="upper" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="713">The new upper boundary of the value of the chosen @field.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_unit_menu"
              c:identifier="gimp_size_entry_show_unit_menu"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpsizeentry.c"
             line="1566">Controls whether a unit menu is shown in the size entry.  If
@show is %TRUE, the menu is shown; otherwise it is hidden.</doc>
        <source-position filename="libgimpwidgets/gimpsizeentry.h" line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1568">a #GimpSizeEntry</doc>
            <type name="SizeEntry" c:type="GimpSizeEntry*"/>
          </instance-parameter>
          <parameter name="show" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpsizeentry.c"
                 line="1569">Boolean</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.Grid" c:type="GtkGrid"/>
      </field>
      <field name="priv">
        <type name="SizeEntryPrivate" c:type="GimpSizeEntryPrivate*"/>
      </field>
      <glib:signal name="refval-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="unit-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="value-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="SizeEntryClass"
            c:type="GimpSizeEntryClass"
            glib:is-gtype-struct-for="SizeEntry">
      <source-position filename="libgimpwidgets/gimpsizeentry.h" line="72"/>
      <field name="parent_class">
        <type name="Gtk.GridClass" c:type="GtkGridClass"/>
      </field>
      <field name="value_changed">
        <callback name="value_changed">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gse" transfer-ownership="none">
              <type name="SizeEntry" c:type="GimpSizeEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="refval_changed">
        <callback name="refval_changed">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gse" transfer-ownership="none">
              <type name="SizeEntry" c:type="GimpSizeEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unit_changed">
        <callback name="unit_changed">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gse" transfer-ownership="none">
              <type name="SizeEntry" c:type="GimpSizeEntry*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpsizeentry.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SizeEntryField" c:type="GimpSizeEntryField" disguised="1">
      <source-position filename="libgimpwidgets/gimpsizeentry.h" line="46"/>
    </record>
    <record name="SizeEntryPrivate"
            c:type="GimpSizeEntryPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpsizeentry.h" line="43"/>
    </record>
    <enumeration name="SizeEntryUpdatePolicy"
                 glib:type-name="GimpSizeEntryUpdatePolicy"
                 glib:get-type="gimp_size_entry_update_policy_get_type"
                 c:type="GimpSizeEntryUpdatePolicy">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsenums.h"
           line="189">Update policies for #GimpSizeEntry.</doc>
      <member name="none"
              value="0"
              c:identifier="GIMP_SIZE_ENTRY_UPDATE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="191">the size entry's meaning is up to the user</doc>
      </member>
      <member name="size"
              value="1"
              c:identifier="GIMP_SIZE_ENTRY_UPDATE_SIZE"
              glib:nick="size">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="192">the size entry displays values</doc>
      </member>
      <member name="resolution"
              value="2"
              c:identifier="GIMP_SIZE_ENTRY_UPDATE_RESOLUTION"
              glib:nick="resolution">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="193">the size entry displays resolutions</doc>
      </member>
    </enumeration>
    <class name="SpinButton"
           c:symbol-prefix="spin_button"
           c:type="GimpSpinButton"
           parent="Gtk.SpinButton"
           glib:type-name="GimpSpinButton"
           glib:get-type="gimp_spin_button_get_type"
           glib:type-struct="SpinButtonClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpspinbutton.c"
           line="37">#GimpSpinButton is a drop-in replacement for #GtkSpinButton, with the
following changes:

  - When the spin-button loses focus, its adjustment value is only
    updated if the entry text has been changed.

  - When the spin-button's "wrap" property is TRUE, values input through the
    entry are wrapped around.

  - Modifiers can be used during scrolling for smaller/bigger increments.</doc>
      <source-position filename="libgimpwidgets/gimpspinbutton.h" line="61"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="gimp_spin_button_new"
                   version="2.10.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpspinbutton.c"
             line="297">Creates a new #GimpSpinButton.</doc>
        <source-position filename="libgimpwidgets/gimpspinbutton.h" line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpspinbutton.c"
               line="308">The new spin button as a #GtkWidget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="adjustment"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpspinbutton.c"
                 line="299">the #GtkAdjustment object that this spin
                           button should use, or %NULL</doc>
            <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
          </parameter>
          <parameter name="climb_rate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpspinbutton.c"
                 line="301">specifies by how much the rate of change in the
                           value will accelerate if you continue to hold
                           down an up/down button or arrow key</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="digits" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpspinbutton.c"
                 line="304">the number of decimal places to display</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_range"
                   c:identifier="gimp_spin_button_new_with_range"
                   version="2.10.10">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpspinbutton.c"
             line="330">This is a convenience constructor that allows creation of a numeric
#GimpSpinButton without manually creating an adjustment.  The value is
initially set to the minimum value and a page increment of 10 * @step
is the default.  The precision of the spin button is equivalent to the
precision of @step.

Note that the way in which the precision is derived works best if @step
is a power of ten. If the resulting precision is not suitable for your
needs, use gtk_spin_button_set_digits() to correct it.</doc>
        <source-position filename="libgimpwidgets/gimpspinbutton.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpspinbutton.c"
               line="346">The new spin button as a #GtkWidget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="min" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpspinbutton.c"
                 line="332">Minimum allowable value</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpspinbutton.c"
                 line="333">Maximum allowable value</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="step" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpspinbutton.c"
                 line="334">Increment added or subtracted by spinning the widget</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent_instance">
        <type name="Gtk.SpinButton" c:type="GtkSpinButton"/>
      </field>
      <field name="priv">
        <type name="SpinButtonPrivate" c:type="GimpSpinButtonPrivate*"/>
      </field>
    </class>
    <record name="SpinButtonClass"
            c:type="GimpSpinButtonClass"
            glib:is-gtype-struct-for="SpinButton">
      <source-position filename="libgimpwidgets/gimpspinbutton.h" line="61"/>
      <field name="parent_class">
        <type name="Gtk.SpinButtonClass" c:type="GtkSpinButtonClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpspinbutton.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpspinbutton.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpspinbutton.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpspinbutton.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SpinButtonPrivate"
            c:type="GimpSpinButtonPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpspinbutton.h" line="42"/>
    </record>
    <class name="StringComboBox"
           c:symbol-prefix="string_combo_box"
           c:type="GimpStringComboBox"
           parent="Gtk.ComboBox"
           glib:type-name="GimpStringComboBox"
           glib:get-type="gimp_string_combo_box_get_type"
           glib:type-struct="StringComboBoxClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpstringcombobox.c"
           line="35">A #GtkComboBox subclass to select strings.</doc>
      <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                       line="63"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new"
                   c:identifier="gimp_string_combo_box_new"
                   version="2.4">
        <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpstringcombobox.c"
               line="264">a new #GimpStringComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpstringcombobox.c"
                 line="260">a #GtkTreeModel</doc>
            <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
          </parameter>
          <parameter name="id_column" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpstringcombobox.c"
                 line="261">the model column of the ID</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="label_column" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpstringcombobox.c"
                 line="262">the modl column of the label</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_active"
              c:identifier="gimp_string_combo_box_get_active"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpstringcombobox.c"
             line="331">Retrieves the value of the selected (active) item in the @combo_box.</doc>
        <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                         line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpstringcombobox.c"
               line="337">newly allocated ID string or %NULL if nothing was selected</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpstringcombobox.c"
                 line="333">a #GimpStringComboBox</doc>
            <type name="StringComboBox" c:type="GimpStringComboBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_active"
              c:identifier="gimp_string_combo_box_set_active"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpstringcombobox.c"
             line="286">Looks up the item that belongs to the given @id and makes it the
selected item in the @combo_box.</doc>
        <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpstringcombobox.c"
               line="294">%TRUE on success or %FALSE if there was no item for
              this value.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo_box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpstringcombobox.c"
                 line="288">a #GimpStringComboBox</doc>
            <type name="StringComboBox" c:type="GimpStringComboBox*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpstringcombobox.c"
                 line="289">the ID of the item to select</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="ellipsize"
                version="2.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpstringcombobox.c"
             line="124">Specifies the preferred place to ellipsize text in the combo-box,
if the cell renderer does not have enough room to display the
entire string.</doc>
        <type name="Pango.EllipsizeMode"/>
      </property>
      <property name="id-column"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpstringcombobox.c"
             line="89">The column in the associated GtkTreeModel that holds unique
string IDs.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="label-column"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpstringcombobox.c"
             line="106">The column in the associated GtkTreeModel that holds strings to
be used as labels in the combo-box.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.ComboBox" c:type="GtkComboBox"/>
      </field>
      <field name="priv">
        <type name="StringComboBoxPrivate"
              c:type="GimpStringComboBoxPrivate*"/>
      </field>
    </class>
    <record name="StringComboBoxClass"
            c:type="GimpStringComboBoxClass"
            glib:is-gtype-struct-for="StringComboBox">
      <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                       line="63"/>
      <field name="parent_class">
        <type name="Gtk.ComboBoxClass" c:type="GtkComboBoxClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="StringComboBoxPrivate"
            c:type="GimpStringComboBoxPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpstringcombobox.h"
                       line="40"/>
    </record>
    <function-macro name="UNIT_COMBO_BOX"
                    c:identifier="GIMP_UNIT_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpunitcombobox.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="UNIT_COMBO_BOX_CLASS"
                    c:identifier="GIMP_UNIT_COMBO_BOX_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpunitcombobox.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="UNIT_COMBO_BOX_GET_CLASS"
                    c:identifier="GIMP_UNIT_COMBO_BOX_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpunitcombobox.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="UNIT_STORE"
                    c:identifier="GIMP_UNIT_STORE"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpunitstore.h" line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="UNIT_STORE_CLASS"
                    c:identifier="GIMP_UNIT_STORE_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpunitstore.h" line="51"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="UNIT_STORE_GET_CLASS"
                    c:identifier="GIMP_UNIT_STORE_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpunitstore.h" line="54"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="UnitComboBox"
           c:symbol-prefix="unit_combo_box"
           c:type="GimpUnitComboBox"
           parent="Gtk.ComboBox"
           glib:type-name="GimpUnitComboBox"
           glib:get-type="gimp_unit_combo_box_get_type"
           glib:type-struct="UnitComboBoxClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpunitcombobox.c"
           line="32">#GimpUnitComboBox selects units stored in a #GimpUnitStore.</doc>
      <source-position filename="libgimpwidgets/gimpunitcombobox.h" line="63"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new" c:identifier="gimp_unit_combo_box_new">
        <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpunitcombobox.c"
               line="121">a new #GimpUnitComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_model"
                   c:identifier="gimp_unit_combo_box_new_with_model">
        <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpunitcombobox.c"
               line="144">a new #GimpUnitComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpunitcombobox.c"
                 line="142">a #GimpUnitStore</doc>
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_active" c:identifier="gimp_unit_combo_box_get_active">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpunitcombobox.c"
             line="154">Returns the #GimpUnit currently selected in the combo box.</doc>
        <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpunitcombobox.c"
               line="160">The selected #GimpUnit.</doc>
          <type name="Gimp.Unit" c:type="GimpUnit"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpunitcombobox.c"
                 line="156">a #GimpUnitComboBox</doc>
            <type name="UnitComboBox" c:type="GimpUnitComboBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_active" c:identifier="gimp_unit_combo_box_set_active">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpunitcombobox.c"
             line="179">Sets @unit as the currently selected #GimpUnit on @combo.</doc>
        <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="combo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpunitcombobox.c"
                 line="181">a #GimpUnitComboBox</doc>
            <type name="UnitComboBox" c:type="GimpUnitComboBox*"/>
          </instance-parameter>
          <parameter name="unit" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpunitcombobox.c"
                 line="182">a #GimpUnit</doc>
            <type name="Gimp.Unit" c:type="GimpUnit"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="Gtk.ComboBox" c:type="GtkComboBox"/>
      </field>
      <field name="priv">
        <type name="UnitComboBoxPrivate" c:type="GimpUnitComboBoxPrivate*"/>
      </field>
    </class>
    <record name="UnitComboBoxClass"
            c:type="GimpUnitComboBoxClass"
            glib:is-gtype-struct-for="UnitComboBox">
      <source-position filename="libgimpwidgets/gimpunitcombobox.h" line="63"/>
      <field name="parent_class">
        <type name="Gtk.ComboBoxClass" c:type="GtkComboBoxClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                           line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                           line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                           line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpunitcombobox.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnitComboBoxPrivate"
            c:type="GimpUnitComboBoxPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpunitcombobox.h" line="40"/>
    </record>
    <class name="UnitStore"
           c:symbol-prefix="unit_store"
           c:type="GimpUnitStore"
           parent="GObject.Object"
           glib:type-name="GimpUnitStore"
           glib:get-type="gimp_unit_store_get_type"
           glib:type-struct="UnitStoreClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpunitstore.c"
           line="33">A model for #GimpUnit views</doc>
      <source-position filename="libgimpwidgets/gimpunitstore.h" line="80"/>
      <implements name="Gtk.TreeModel"/>
      <constructor name="new" c:identifier="gimp_unit_store_new">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="85"/>
        <return-value transfer-ownership="full">
          <type name="UnitStore" c:type="GimpUnitStore*"/>
        </return-value>
        <parameters>
          <parameter name="num_values" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_has_percent"
              c:identifier="gimp_unit_store_get_has_percent">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_pixels"
              c:identifier="gimp_unit_store_get_has_pixels">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nth_value"
              c:identifier="gimp_unit_store_get_nth_value">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </instance-parameter>
          <parameter name="unit" transfer-ownership="none">
            <type name="Gimp.Unit" c:type="GimpUnit"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_values"
              c:identifier="gimp_unit_store_get_values"
              introspectable="0">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </instance-parameter>
          <parameter name="unit" transfer-ownership="none">
            <type name="Gimp.Unit" c:type="GimpUnit"/>
          </parameter>
          <parameter name="first_value" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_has_percent"
              c:identifier="gimp_unit_store_set_has_percent">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </instance-parameter>
          <parameter name="has_percent" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_has_pixels"
              c:identifier="gimp_unit_store_set_has_pixels">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </instance-parameter>
          <parameter name="has_pixels" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pixel_value"
              c:identifier="gimp_unit_store_set_pixel_value">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pixel_values"
              c:identifier="gimp_unit_store_set_pixel_values"
              introspectable="0">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </instance-parameter>
          <parameter name="first_value" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_resolution"
              c:identifier="gimp_unit_store_set_resolution">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="resolution" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_resolutions"
              c:identifier="gimp_unit_store_set_resolutions"
              introspectable="0">
        <source-position filename="libgimpwidgets/gimpunitstore.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="store" transfer-ownership="none">
            <type name="UnitStore" c:type="GimpUnitStore*"/>
          </instance-parameter>
          <parameter name="first_resolution" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <property name="has-percent" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="has-pixels" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="long-format" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="num-values"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="short-format" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="UnitStorePrivate" c:type="GimpUnitStorePrivate*"/>
      </field>
    </class>
    <record name="UnitStoreClass"
            c:type="GimpUnitStoreClass"
            glib:is-gtype-struct-for="UnitStore">
      <source-position filename="libgimpwidgets/gimpunitstore.h" line="80"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpunitstore.h"
                           line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpunitstore.h"
                           line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpunitstore.h"
                           line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpunitstore.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpunitstore.h"
                           line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpunitstore.h"
                           line="77"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpunitstore.h"
                           line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpunitstore.h"
                           line="79"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnitStorePrivate"
            c:type="GimpUnitStorePrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpunitstore.h" line="57"/>
    </record>
    <function-macro name="VECTORS_COMBO_BOX"
                    c:identifier="GIMP_VECTORS_COMBO_BOX"
                    introspectable="0">
      <source-position filename="libgimp/gimpitemcombobox.h" line="48"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="VectorsComboBox"
           c:symbol-prefix="vectors_combo_box"
           c:type="GimpVectorsComboBox"
           parent="IntComboBox"
           glib:type-name="GimpVectorsComboBox"
           glib:get-type="gimp_vectors_combo_box_get_type">
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.CellLayout"/>
      <constructor name="new"
                   c:identifier="gimp_vectors_combo_box_new"
                   version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpitemcombobox.c"
             line="323">Creates a new #GimpIntComboBox filled with all currently opened
vectors objects. If a @constraint function is specified, it is called for
each vectors object and only if the function returns %TRUE, the vectors
object is added to the combobox.

You should use gimp_int_combo_box_connect() to initialize and connect
the combo.  Use gimp_int_combo_box_set_active() to set the active
vectors ID and gimp_int_combo_box_get_active() to retrieve the ID
of the selected vectors object.</doc>
        <source-position filename="libgimp/gimpitemcombobox.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpitemcombobox.c"
               line="339">a new #GimpIntComboBox.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="constraint"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="325">a #GimpItemConstraintFunc or %NULL</doc>
            <type name="ItemConstraintFunc" c:type="GimpItemConstraintFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="326">a pointer that is passed to @constraint</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="data_destroy"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="libgimp/gimpitemcombobox.c"
                 line="327">Destroy function for @data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <enumeration name="WidgetsError"
                 c:type="GimpWidgetsError"
                 glib:error-domain="gimp-widgets-error-quark">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgets-error.h"
           line="32">Types of errors returned by libgimpwidgets functions</doc>
      <source-position filename="libgimpwidgets/gimpwidgets-error.h"
                       line="41"/>
      <member name="widgets_parse_error"
              value="0"
              c:identifier="GIMP_WIDGETS_PARSE_ERROR">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgets-error.h"
             line="34">A parse error has occurred</doc>
      </member>
    </enumeration>
    <function-macro name="ZOOM_MODEL"
                    c:identifier="GIMP_ZOOM_MODEL"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpzoommodel.h" line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ZOOM_MODEL_CLASS"
                    c:identifier="GIMP_ZOOM_MODEL_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpzoommodel.h" line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ZOOM_MODEL_GET_CLASS"
                    c:identifier="GIMP_ZOOM_MODEL_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimpwidgets/gimpzoommodel.h" line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ZOOM_PREVIEW"
                    c:identifier="GIMP_ZOOM_PREVIEW"
                    introspectable="0">
      <source-position filename="libgimp/gimpzoompreview.h" line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ZOOM_PREVIEW_CLASS"
                    c:identifier="GIMP_ZOOM_PREVIEW_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpzoompreview.h" line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ZOOM_PREVIEW_GET_CLASS"
                    c:identifier="GIMP_ZOOM_PREVIEW_GET_CLASS"
                    introspectable="0">
      <source-position filename="libgimp/gimpzoompreview.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="ZoomModel"
           c:symbol-prefix="zoom_model"
           c:type="GimpZoomModel"
           parent="GObject.Object"
           glib:type-name="GimpZoomModel"
           glib:get-type="gimp_zoom_model_get_type"
           glib:type-struct="ZoomModelClass">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpzoommodel.c"
           line="36">A model for zoom values.</doc>
      <source-position filename="libgimpwidgets/gimpzoommodel.h" line="67"/>
      <constructor name="new" c:identifier="gimp_zoom_model_new">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="315">Creates a new #GimpZoomModel.</doc>
        <source-position filename="libgimpwidgets/gimpzoommodel.h" line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpzoommodel.c"
               line="320">a new #GimpZoomModel.

Since GIMP 2.4</doc>
          <type name="ZoomModel" c:type="GimpZoomModel*"/>
        </return-value>
      </constructor>
      <function name="zoom_step" c:identifier="gimp_zoom_model_zoom_step">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="605">Utility function to calculate a new scale factor.</doc>
        <source-position filename="libgimpwidgets/gimpzoommodel.h" line="88"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpzoommodel.c"
               line="613">the new scale factor

Since GIMP 2.4</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <parameter name="zoom_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="607">the zoom type</doc>
            <type name="ZoomType" c:type="GimpZoomType"/>
          </parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="608">ignored unless @zoom_type == %GIMP_ZOOM_TO</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="delta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="609">the delta from a smooth zoom event</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="zoomed">
        <source-position filename="libgimpwidgets/gimpzoommodel.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="model" transfer-ownership="none">
            <type name="ZoomModel" c:type="GimpZoomModel*"/>
          </instance-parameter>
          <parameter name="old_factor" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="new_factor" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_factor" c:identifier="gimp_zoom_model_get_factor">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="385">Retrieves the current zoom factor of @model.</doc>
        <source-position filename="libgimpwidgets/gimpzoommodel.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpzoommodel.c"
               line="391">the current scale factor

Since GIMP 2.4</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="387">a #GimpZoomModel</doc>
            <type name="ZoomModel" c:type="GimpZoomModel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_fraction" c:identifier="gimp_zoom_model_get_fraction">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="404">Retrieves the current zoom factor of @model as a fraction.

Since GIMP 2.4</doc>
        <source-position filename="libgimpwidgets/gimpzoommodel.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="406">a #GimpZoomModel</doc>
            <type name="ZoomModel" c:type="GimpZoomModel*"/>
          </instance-parameter>
          <parameter name="numerator"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="407">return location for numerator</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="denominator"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="408">return location for denominator</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_range" c:identifier="gimp_zoom_model_set_range">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="331">Sets the allowed range of the @model.

Since GIMP 2.4</doc>
        <source-position filename="libgimpwidgets/gimpzoommodel.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="333">a #GimpZoomModel</doc>
            <type name="ZoomModel" c:type="GimpZoomModel*"/>
          </instance-parameter>
          <parameter name="min" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="334">new lower limit for zoom factor</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="335">new upper limit for zoom factor</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="zoom" c:identifier="gimp_zoom_model_zoom">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="357">Since GIMP 2.4</doc>
        <source-position filename="libgimpwidgets/gimpzoommodel.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="359">a #GimpZoomModel</doc>
            <type name="ZoomModel" c:type="GimpZoomModel*"/>
          </instance-parameter>
          <parameter name="zoom_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="360">the #GimpZoomType</doc>
            <type name="ZoomType" c:type="GimpZoomType"/>
          </parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="361">ignored unless @zoom_type == %GIMP_ZOOM_TO</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <property name="fraction" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="156">The zoom factor expressed as a fraction.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="maximum" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="143">The maximum zoom factor.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="minimum" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="131">The minimum zoom factor.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="percentage" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="167">The zoom factor expressed as percentage.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="value" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="119">The zoom factor.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ZoomModelPrivate" c:type="GimpZoomModelPrivate*"/>
      </field>
      <glib:signal name="zoomed" when="last">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="97">Emitted when the zoom factor of the zoom model changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="old_factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="100">the zoom factor before it changes</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="new_factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimpwidgets/gimpzoommodel.c"
                 line="101">the zoom factor after it has changed.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ZoomModelClass"
            c:type="GimpZoomModelClass"
            glib:is-gtype-struct-for="ZoomModel">
      <source-position filename="libgimpwidgets/gimpzoommodel.h" line="67"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="zoomed">
        <callback name="zoomed">
          <source-position filename="libgimpwidgets/gimpzoommodel.h"
                           line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="model" transfer-ownership="none">
              <type name="ZoomModel" c:type="GimpZoomModel*"/>
            </parameter>
            <parameter name="old_factor" transfer-ownership="none">
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
            <parameter name="new_factor" transfer-ownership="none">
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimpwidgets/gimpzoommodel.h"
                           line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimpwidgets/gimpzoommodel.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimpwidgets/gimpzoommodel.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimpwidgets/gimpzoommodel.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimpwidgets/gimpzoommodel.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimpwidgets/gimpzoommodel.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimpwidgets/gimpzoommodel.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimpwidgets/gimpzoommodel.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ZoomModelPrivate"
            c:type="GimpZoomModelPrivate"
            disguised="1">
      <source-position filename="libgimpwidgets/gimpzoommodel.h" line="40"/>
    </record>
    <class name="ZoomPreview"
           c:symbol-prefix="zoom_preview"
           c:type="GimpZoomPreview"
           parent="ScrolledPreview"
           glib:type-name="GimpZoomPreview"
           glib:get-type="gimp_zoom_preview_get_type"
           glib:type-struct="ZoomPreviewClass">
      <doc xml:space="preserve"
           filename="libgimp/gimpzoompreview.c"
           line="37">A drawable preview with zooming capabilities.</doc>
      <source-position filename="libgimp/gimpzoompreview.h" line="66"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new_from_drawable"
                   c:identifier="gimp_zoom_preview_new_from_drawable"
                   version="3.0">
        <doc xml:space="preserve"
             filename="libgimp/gimpzoompreview.c"
             line="761">Creates a new #GimpZoomPreview widget for @drawable.</doc>
        <source-position filename="libgimp/gimpzoompreview.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpzoompreview.c"
               line="769">a new #GimpZoomPreview.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpzoompreview.c"
                 line="763">a drawable</doc>
            <type name="Gimp.Drawable" c:type="GimpDrawable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_model_from_drawable"
                   c:identifier="gimp_zoom_preview_new_with_model_from_drawable"
                   version="2.10">
        <doc xml:space="preserve"
             filename="libgimp/gimpzoompreview.c"
             line="782">Creates a new #GimpZoomPreview widget for @drawable using the
given @model.

This variant of gimp_zoom_preview_new_from_drawable() allows you
to create a preview using an existing zoom model. This may be
useful if for example you want to have two zoom previews that keep
their zoom factor in sync.</doc>
        <source-position filename="libgimp/gimpzoompreview.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpzoompreview.c"
               line="797">a new #GimpZoomPreview.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="drawable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpzoompreview.c"
                 line="784">a #GimpDrawable</doc>
            <type name="Gimp.Drawable" c:type="GimpDrawable*"/>
          </parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpzoompreview.c"
                 line="785">a #GimpZoomModel</doc>
            <type name="ZoomModel" c:type="GimpZoomModel*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_drawable"
              c:identifier="gimp_zoom_preview_get_drawable"
              version="3.0">
        <doc xml:space="preserve"
             filename="libgimp/gimpzoompreview.c"
             line="813">Returns the drawable the #GimpZoomPreview is attached to.</doc>
        <source-position filename="libgimp/gimpzoompreview.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpzoompreview.c"
               line="819">the drawable that was passed to
         gimp_zoom_preview_new_from_drawable().</doc>
          <type name="Gimp.Drawable" c:type="GimpDrawable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpzoompreview.c"
                 line="815">a #GimpZoomPreview widget</doc>
            <type name="ZoomPreview" c:type="GimpZoomPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_factor"
              c:identifier="gimp_zoom_preview_get_factor"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpzoompreview.c"
             line="851">Returns the zoom factor the preview is currently using.</doc>
        <source-position filename="libgimp/gimpzoompreview.h" line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpzoompreview.c"
               line="857">the current zoom factor</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpzoompreview.c"
                 line="853">a #GimpZoomPreview widget</doc>
            <type name="ZoomPreview" c:type="GimpZoomPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model"
              c:identifier="gimp_zoom_preview_get_model"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpzoompreview.c"
             line="832">Returns the #GimpZoomModel the preview is using.</doc>
        <source-position filename="libgimp/gimpzoompreview.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpzoompreview.c"
               line="838">a pointer to the #GimpZoomModel owned
         by the @preview</doc>
          <type name="ZoomModel" c:type="GimpZoomModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpzoompreview.c"
                 line="834">a #GimpZoomPreview widget</doc>
            <type name="ZoomPreview" c:type="GimpZoomPreview*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="gimp_zoom_preview_get_source"
              version="2.4">
        <doc xml:space="preserve"
             filename="libgimp/gimpzoompreview.c"
             line="873">Returns the scaled image data of the part of the drawable the
#GimpZoomPreview is currently showing, as a newly allocated array of guchar.
This function also allow to get the current width, height and bpp of the
#GimpZoomPreview.</doc>
        <source-position filename="libgimp/gimpzoompreview.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="libgimp/gimpzoompreview.c"
               line="887">newly allocated data that should be
         released using g_free() when it is not any longer needed</doc>
          <array zero-terminated="0" c:type="guchar*">
            <type name="guint8" c:type="guchar"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="preview" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="libgimp/gimpzoompreview.c"
                 line="875">a #GimpZoomPreview widget</doc>
            <type name="ZoomPreview" c:type="GimpZoomPreview*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimp/gimpzoompreview.c"
                 line="876">a pointer to an int where the current width of the zoom widget
        will be put.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimp/gimpzoompreview.c"
                 line="878">a pointer to an int where the current width of the zoom widget
         will be put.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="bpp"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="libgimp/gimpzoompreview.c"
                 line="880">return location for the number of bytes per pixel</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <property name="drawable"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Gimp.Drawable"/>
      </property>
      <property name="model"
                version="2.4"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimpzoompreview.c"
             line="168">The #GimpZoomModel used by this #GimpZoomPreview.</doc>
        <type name="ZoomModel"/>
      </property>
      <field name="parent_instance">
        <type name="ScrolledPreview" c:type="GimpScrolledPreview"/>
      </field>
      <field name="priv">
        <type name="ZoomPreviewPrivate" c:type="GimpZoomPreviewPrivate*"/>
      </field>
    </class>
    <record name="ZoomPreviewClass"
            c:type="GimpZoomPreviewClass"
            glib:is-gtype-struct-for="ZoomPreview">
      <source-position filename="libgimp/gimpzoompreview.h" line="66"/>
      <field name="parent_class">
        <type name="ScrolledPreviewClass" c:type="GimpScrolledPreviewClass"/>
      </field>
      <field name="_gimp_reserved1" introspectable="0">
        <callback name="_gimp_reserved1">
          <source-position filename="libgimp/gimpzoompreview.h" line="58"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved2" introspectable="0">
        <callback name="_gimp_reserved2">
          <source-position filename="libgimp/gimpzoompreview.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved3" introspectable="0">
        <callback name="_gimp_reserved3">
          <source-position filename="libgimp/gimpzoompreview.h" line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved4" introspectable="0">
        <callback name="_gimp_reserved4">
          <source-position filename="libgimp/gimpzoompreview.h" line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved5" introspectable="0">
        <callback name="_gimp_reserved5">
          <source-position filename="libgimp/gimpzoompreview.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved6" introspectable="0">
        <callback name="_gimp_reserved6">
          <source-position filename="libgimp/gimpzoompreview.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved7" introspectable="0">
        <callback name="_gimp_reserved7">
          <source-position filename="libgimp/gimpzoompreview.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_gimp_reserved8" introspectable="0">
        <callback name="_gimp_reserved8">
          <source-position filename="libgimp/gimpzoompreview.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ZoomPreviewPrivate"
            c:type="GimpZoomPreviewPrivate"
            disguised="1">
      <source-position filename="libgimp/gimpzoompreview.h" line="43"/>
    </record>
    <enumeration name="ZoomType"
                 glib:type-name="GimpZoomType"
                 glib:get-type="gimp_zoom_type_get_type"
                 c:type="GimpZoomType">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsenums.h"
           line="209">the zoom types for #GimpZoomModel.</doc>
      <member name="in" value="0" c:identifier="GIMP_ZOOM_IN" glib:nick="in">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="211">zoom in</doc>
      </member>
      <member name="out"
              value="1"
              c:identifier="GIMP_ZOOM_OUT"
              glib:nick="out">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsenums.h"
             line="212">zoom out</doc>
      </member>
    </enumeration>
    <function name="cairo_set_focus_line_pattern"
              c:identifier="gimp_cairo_set_focus_line_pattern"
              version="2.6">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcairo-utils.c"
           line="45">Sets color and dash pattern for stroking a focus line on the given
@cr. The line pattern is taken from @widget.</doc>
      <source-position filename="libgimpwidgets/gimpcairo-utils.h" line="30"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcairo-utils.c"
             line="53">%TRUE if the widget style has a focus line pattern,
              %FALSE otherwise</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcairo-utils.c"
               line="47">Cairo context</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcairo-utils.c"
               line="48">widget to draw the focus indicator on</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="cairo_surface_create_from_pixbuf"
              c:identifier="gimp_cairo_surface_create_from_pixbuf"
              version="2.6">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpcairo-utils.c"
           line="99">Create a Cairo image surface from a GdkPixbuf.

You should avoid calling this function as there are probably more
efficient ways of achieving the result you are looking for.</doc>
      <source-position filename="libgimpwidgets/gimpcairo-utils.h" line="33"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpcairo-utils.c"
             line="108">a #cairo_surface_t.</doc>
        <type name="cairo.Surface" c:type="cairo_surface_t*"/>
      </return-value>
      <parameters>
        <parameter name="pixbuf" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpcairo-utils.c"
               line="101">a #GdkPixbuf</doc>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_scale_entry_new"
              c:identifier="gimp_color_scale_entry_new"
              moved-to="ColorScale.entry_new">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpscaleentry.c"
           line="272">This function creates a #GtkLabel, a #GimpColorScale and a
#GtkSpinButton and attaches them to a 3-column #GtkGrid.</doc>
      <source-position filename="libgimpwidgets/gimpscaleentry.h" line="99"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpscaleentry.c"
             line="293">The #GtkSpinButton's #GtkAdjustment.</doc>
        <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
      </return-value>
      <parameters>
        <parameter name="grid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="274">The #GtkGrid the widgets will be attached to.</doc>
          <type name="Gtk.Grid" c:type="GtkGrid*"/>
        </parameter>
        <parameter name="column" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="275">The column to start with.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="row" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="276">The row to attach the widgets.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="277">The text for the #GtkLabel which will appear
                      left of the #GtkHScale.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="scale_width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="279">The minimum horizontal size of the #GtkHScale.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="spinbutton_width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="280">The minimum horizontal size of the #GtkSpinButton.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="281">The initial value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="lower" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="282">The lower boundary.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="upper" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="283">The upper boundary.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="step_increment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="284">The step increment.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="page_increment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="285">The page increment.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="digits" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="286">The number of decimal digits.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="tooltip" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="287">A tooltip message for the scale and the spinbutton.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="288">The widgets' help_id (see gimp_help_set_help_data()).</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_help" c:identifier="gimp_context_help">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimphelpui.c"
           line="218">This function invokes the context help inspector.

The mouse cursor will turn turn into a question mark and the user can
click on any widget of the application which started the inspector.

If the widget the user clicked on has a @help_id string attached
(see gimp_help_set_help_data()), the corresponding help page will
be displayed. Otherwise the help system will ascend the widget hierarchy
until it finds an attached @help_id string (which should be the
case at least for every window/dialog).</doc>
      <source-position filename="libgimpwidgets/gimphelpui.h" line="57"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="220">Any #GtkWidget on the screen.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="coordinates_new" c:identifier="gimp_coordinates_new">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgets.c"
           line="413">Convenience function that creates a #GimpSizeEntry with two fields for x/y
coordinates/sizes with a #GimpChainButton attached to constrain either the
two fields' values or the ratio between them.</doc>
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="154"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgets.c"
             line="449">The new #GimpSizeEntry.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="unit" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="415">The initial unit of the #GimpUnitMenu.</doc>
          <type name="Gimp.Unit" c:type="GimpUnit"/>
        </parameter>
        <parameter name="unit_format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="416">A printf-like unit-format string as is used with
                         gimp_unit_menu_new().</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="menu_show_pixels" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="418">%TRUE if the #GimpUnitMenu should contain an item
                         for GIMP_UNIT_PIXEL.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="menu_show_percent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="420">%TRUE if the #GimpUnitMenu should contain an item
                         for GIMP_UNIT_PERCENT.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="spinbutton_width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="422">The horizontal size of the #GimpSizeEntry's
                          #GtkSpinButton's.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="update_policy" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="424">The update policy for the #GimpSizeEntry.</doc>
          <type name="SizeEntryUpdatePolicy"
                c:type="GimpSizeEntryUpdatePolicy"/>
        </parameter>
        <parameter name="chainbutton_active" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="425">%TRUE if the attached #GimpChainButton should be
                         active.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="chain_constrains_ratio" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="427">%TRUE if the chainbutton should constrain the
                         fields' aspect ratio. If %FALSE, the values will
                         be constrained.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="xlabel" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="430">The label for the X coordinate.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="431">The initial value of the X coordinate.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="xres" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="432">The horizontal resolution in DPI.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="lower_boundary_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="433">The lower boundary of the X coordinate.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="upper_boundary_x" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="434">The upper boundary of the X coordinate.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="xsize_0" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="435">The X value which will be treated as 0%.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="xsize_100" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="436">The X value which will be treated as 100%.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="ylabel" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="437">The label for the Y coordinate.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="438">The initial value of the Y coordinate.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="yres" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="439">The vertical resolution in DPI.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="lower_boundary_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="440">The lower boundary of the Y coordinate.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="upper_boundary_y" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="441">The upper boundary of the Y coordinate.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="ysize_0" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="442">The Y value which will be treated as 0%.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="ysize_100" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="443">The Y value which will be treated as 100%.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="dialogs_show_help_button"
              c:identifier="gimp_dialogs_show_help_button"
              version="2.2"
              introspectable="0">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpdialog.c"
           line="703">This function is for internal use only.</doc>
      <source-position filename="libgimpwidgets/gimpdialog.h" line="102"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="show" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpdialog.c"
               line="705">whether a help button should be added when creating a GimpDialog</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="double_adjustment_update"
              c:identifier="gimp_double_adjustment_update">
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="200"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adjustment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="665">A #GtkAdjustment.</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="666">A pointer to a #gdouble variable which will store the
             @adjustment's value.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_icon_box_new"
              c:identifier="gimp_enum_icon_box_new"
              version="2.10">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpenumwidgets.c"
           line="280">Creates a horizontal box of radio buttons with named icons. The
icon name for each icon is created by appending the enum_value's
nick to the given @icon_prefix.</doc>
      <source-position filename="libgimpwidgets/gimpenumwidgets.h" line="60"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumwidgets.c"
             line="296">a new horizontal #GtkBox holding a group of #GtkRadioButtons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="282">the #GType of an enum.</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="icon_prefix" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="283">the prefix of the group of icon names to use.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="icon_size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="284">the icon size for the icons</doc>
          <type name="Gtk.IconSize" c:type="GtkIconSize"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="notified"
                   closure="4"
                   destroy="5">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="285">a callback to connect to the "toggled" signal of each
                       #GtkRadioButton that is created.</doc>
          <type name="GObject.Callback" c:type="GCallback"/>
        </parameter>
        <parameter name="callback_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="287">data to pass to the @callback.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="callback_data_destroy"
                   transfer-ownership="none"
                   scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="288">Destroy function for @callback_data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="first_button"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="none"
                   optional="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="289">
               Returns the first button in the created group.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget**"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_icon_box_new_with_range"
              c:identifier="gimp_enum_icon_box_new_with_range"
              version="2.10">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpenumwidgets.c"
           line="329">Just like gimp_enum_icon_box_new(), this function creates a group
of radio buttons, but additionally it supports limiting the range
of available enum values.</doc>
      <source-position filename="libgimpwidgets/gimpenumwidgets.h" line="67"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumwidgets.c"
             line="347">a new horizontal #GtkBox holding a group of #GtkRadioButtons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="331">the #GType of an enum.</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="minimum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="332">the minumim enum value</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="maximum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="333">the maximum enum value</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="icon_prefix" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="334">the prefix of the group of icon names to use.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="icon_size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="335">the icon size for the icons</doc>
          <type name="Gtk.IconSize" c:type="GtkIconSize"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="notified"
                   closure="6"
                   destroy="7">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="336">a callback to connect to the "toggled" signal of each
                       #GtkRadioButton that is created.</doc>
          <type name="GObject.Callback" c:type="GCallback"/>
        </parameter>
        <parameter name="callback_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="338">data to pass to the @callback.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="callback_data_destroy"
                   transfer-ownership="none"
                   scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="339">Destroy function for @callback_data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="first_button"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="none"
                   optional="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="340">
               Returns the first button in the created group.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget**"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_icon_box_set_child_padding"
              c:identifier="gimp_enum_icon_box_set_child_padding"
              version="2.10">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpenumwidgets.c"
           line="431">Sets the padding of all buttons in a box created by
gimp_enum_icon_box_new().</doc>
      <source-position filename="libgimpwidgets/gimpenumwidgets.h" line="76"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="icon_box" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="433">an icon box widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="xpad" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="434">horizontal padding</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="ypad" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="435">vertical padding</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_radio_box_new"
              c:identifier="gimp_enum_radio_box_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpenumwidgets.c"
           line="45">Creates a new group of #GtkRadioButtons representing the enum
values.  A group of radiobuttons is a good way to represent enums
with up to three or four values. Often it is better to use a
#GimpEnumComboBox instead.</doc>
      <source-position filename="libgimpwidgets/gimpenumwidgets.h" line="32"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumwidgets.c"
             line="60">a new #GtkBox holding a group of #GtkRadioButtons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="47">the #GType of an enum.</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="notified"
                   closure="2"
                   destroy="3">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="48">a callback to connect to the "toggled" signal of each
                       #GtkRadioButton that is created.</doc>
          <type name="GObject.Callback" c:type="GCallback"/>
        </parameter>
        <parameter name="callback_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="50">data to pass to the @callback.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="callback_data_destroy"
                   transfer-ownership="none"
                   scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="51">Destroy function for @callback_data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="first_button"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="none"
                   optional="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="52">
               Returns the first button in the created group.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget**"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_radio_box_new_with_range"
              c:identifier="gimp_enum_radio_box_new_with_range"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpenumwidgets.c"
           line="90">Just like gimp_enum_radio_box_new(), this function creates a group
of radio buttons, but additionally it supports limiting the range
of available enum values.</doc>
      <source-position filename="libgimpwidgets/gimpenumwidgets.h" line="37"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumwidgets.c"
             line="106">a new vertical #GtkBox holding a group of
                          #GtkRadioButtons</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="94">the #GType of an enum.</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="minimum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="92">the minimum enum value</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="maximum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="93">the maximum enum value</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="notified"
                   closure="4"
                   destroy="5">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="95">a callback to connect to the "toggled" signal of each
                #GtkRadioButton that is created.</doc>
          <type name="GObject.Callback" c:type="GCallback"/>
        </parameter>
        <parameter name="callback_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="97">data to pass to the @callback.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="callback_data_destroy"
                   transfer-ownership="none"
                   scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="98">Destroy function for @callback_data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="first_button"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="none"
                   optional="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="99">
               Returns the first button in the created group.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget**"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_radio_frame_new"
              c:identifier="gimp_enum_radio_frame_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpenumwidgets.c"
           line="171">Calls gimp_enum_radio_box_new() and puts the resulting vbox into a
#GtkFrame.</doc>
      <source-position filename="libgimpwidgets/gimpenumwidgets.h" line="45"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumwidgets.c"
             line="186">a new #GtkFrame holding a group of #GtkRadioButtons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="173">the #GType of an enum.</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="label_widget"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="174">a #GtkWidget to use as label for the frame
                           that will hold the radio box.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="notified"
                   closure="3"
                   destroy="4">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="176">a callback to connect to the "toggled" signal of each
                       #GtkRadioButton that is created.</doc>
          <type name="GObject.Callback" c:type="GCallback"/>
        </parameter>
        <parameter name="callback_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="178">data to pass to the @callback.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="callback_data_destroy"
                   transfer-ownership="none"
                   scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="179">Destroy function for @callback_data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="first_button"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="none"
                   optional="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="180">
               Returns the first button in the created group.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget**"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_radio_frame_new_with_range"
              c:identifier="gimp_enum_radio_frame_new_with_range"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpenumwidgets.c"
           line="223">Calls gimp_enum_radio_box_new_with_range() and puts the resulting
vertical box into a #GtkFrame.</doc>
      <source-position filename="libgimpwidgets/gimpenumwidgets.h" line="51"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpenumwidgets.c"
             line="239">a new #GtkFrame holding a group of #GtkRadioButtons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="enum_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="225">the #GType of an enum.</doc>
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="minimum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="226">the minimum enum value</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="maximum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="227">the maximum enum value</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="label_widget"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="228">a widget to put into the frame that will hold the radio box.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="notified"
                   closure="5"
                   destroy="6">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="229">a callback to connect to the "toggled" signal of each
                       #GtkRadioButton that is created.</doc>
          <type name="GObject.Callback" c:type="GCallback"/>
        </parameter>
        <parameter name="callback_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="231">data to pass to the @callback.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="callback_data_destroy"
                   transfer-ownership="none"
                   scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="232">Destroy function for @callback_data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="first_button"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="none"
                   optional="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpenumwidgets.c"
               line="233">
               Returns the first button in the created group.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget**"/>
        </parameter>
      </parameters>
    </function>
    <function name="export_dialog_get_content_area"
              c:identifier="gimp_export_dialog_get_content_area"
              version="2.8">
      <doc xml:space="preserve"
           filename="libgimp/gimpexport.c"
           line="1216">Returns the vertical #GtkBox of the passed export dialog to be filled with
export options.</doc>
      <source-position filename="libgimp/gimpexport.h" line="83"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.c"
             line="1223">The #GtkBox to fill with export options.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="dialog" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpexport.c"
               line="1218">A dialog created with gimp_export_dialog_new()</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="export_dialog_new"
              c:identifier="gimp_export_dialog_new"
              version="2.8">
      <doc xml:space="preserve"
           filename="libgimp/gimpexport.c"
           line="1165">Creates a new export dialog. All file plug-ins should use this
dialog to get a consistent look on the export dialogs. Use
gimp_export_dialog_get_content_area() to get a vertical #GtkBox to be
filled with export options. The export dialog is a wrapped
#GimpDialog.

The dialog response when the user clicks on the Export button is
%GTK_RESPONSE_OK, and when the Cancel button is clicked it is
%GTK_RESPONSE_CANCEL.</doc>
      <source-position filename="libgimp/gimpexport.h" line="80"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.c"
             line="1182">The new export dialog.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="format_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpexport.c"
               line="1167">The short name of the image_format (e.g. JPEG or PNG).</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="role" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpexport.c"
               line="1168">The dialog's @role which will be set with
              gtk_window_set_role().</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpexport.c"
               line="1170">The GIMP help id.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="export_image" c:identifier="gimp_export_image">
      <doc xml:space="preserve"
           filename="libgimp/gimpexport.c"
           line="766">Takes an image and a drawable to be saved together with a
description of the capabilities of the image_format. If the
type of image doesn't match the capabilities of the format
a dialog is opened that informs the user that the image has
to be exported and offers to do the necessary conversions.

If the user chooses to export the image, a copy is created.
This copy is then converted, @image and @drawables are changed to
point to the new image and the procedure returns GIMP_EXPORT_EXPORT.
The save_plugin has to take care of deleting the created image using
gimp_image_delete() and the drawables list with g_free() once the
image has been saved.

If the user chooses to Ignore the export problem, @image and
@drawables are not altered, GIMP_EXPORT_IGNORE is returned and the
save_plugin should try to save the original image. If the user
chooses Cancel, GIMP_EXPORT_CANCEL is returned and the save_plugin
should quit itself with status %GIMP_PDB_CANCEL.

If @format_name is NULL, no dialogs will be shown and this function
will behave as if the user clicked on the 'Export' button, if a
dialog would have been shown.</doc>
      <source-position filename="libgimp/gimpexport.h" line="85"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimp/gimpexport.c"
             line="797">An enum of #GimpExportReturn describing the user_action.</doc>
        <type name="ExportReturn" c:type="GimpExportReturn"/>
      </return-value>
      <parameters>
        <parameter name="image" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpexport.c"
               line="768">Pointer to the image.</doc>
          <type name="Gimp.Image" c:type="GimpImage**"/>
        </parameter>
        <parameter name="n_drawables" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpexport.c"
               line="769">Size of @drawables.</doc>
          <type name="gint" c:type="gint*"/>
        </parameter>
        <parameter name="drawables" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpexport.c"
               line="770">Array of pointers to drawables.</doc>
          <type name="Gimp.Drawable" c:type="GimpDrawable***"/>
        </parameter>
        <parameter name="format_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpexport.c"
               line="771">The (short) name of the image_format (e.g. JPEG or GIF).</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="capabilities" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpexport.c"
               line="772">What can the image_format do?</doc>
          <type name="ExportCapabilities" c:type="GimpExportCapabilities"/>
        </parameter>
      </parameters>
    </function>
    <function name="float_adjustment_update"
              c:identifier="gimp_float_adjustment_update">
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="197"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adjustment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="649">A #GtkAdjustment.</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="650">A pointer to a #gfloat variable which will store the
             @adjustment's value.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_monitor_at_pointer"
              c:identifier="gimp_get_monitor_at_pointer">
      <source-position filename="libgimpwidgets/gimpwidgetsutils.h" line="46"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsutils.c"
             line="330">the #GdkMonitor where the pointer is.</doc>
        <type name="Gdk.Monitor" c:type="GdkMonitor*"/>
      </return-value>
    </function>
    <function name="grid_attach_aligned"
              c:identifier="gimp_grid_attach_aligned">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsutils.c"
           line="106">Note that the @label_text can be %NULL and that the widget will be
attached starting at (@column + 1) in this case, too.</doc>
      <source-position filename="libgimpwidgets/gimpwidgetsutils.h" line="33"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsutils.c"
             line="121">The created #GtkLabel.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="grid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="108">The #GtkGrid the widgets will be attached to.</doc>
          <type name="Gtk.Grid" c:type="GtkGrid*"/>
        </parameter>
        <parameter name="left" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="109">The column to start with.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="top" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="110">The row to attach the widgets.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="label_text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="111">The text for the #GtkLabel which will be attached left of
             the widget.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="xalign" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="113">The horizontal alignment of the #GtkLabel.</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="yalign" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="114">The vertical alignment of the #GtkLabel.</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="115">The #GtkWidget to attach right of the label.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="columns" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="116">The number of columns the widget will use.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="help_connect" c:identifier="gimp_help_connect">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimphelpui.c"
           line="104">Note that this function is automatically called by all libgimp dialog
constructors. You only have to call it for windows/dialogs you created
"manually".</doc>
      <source-position filename="libgimpwidgets/gimphelpui.h" line="40"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="106">The widget you want to connect the help accelerator for.
                    Will be a #GtkWindow in most cases.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="help_func"
                   transfer-ownership="none"
                   scope="notified"
                   closure="3"
                   destroy="4">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="108">The function which will be called if the user presses "F1".</doc>
          <type name="HelpFunc" c:type="GimpHelpFunc"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="109">The @help_id which will be passed to @help_func.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="help_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="110">The @help_data pointer which will be passed to @help_func.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="help_data_destroy"
                   transfer-ownership="none"
                   scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="111">Destroy function for @help_data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="help_id_quark"
              c:identifier="gimp_help_id_quark"
              version="2.2">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimphelpui.c"
           line="241">This function returns the #GQuark which should be used as key when
attaching help IDs to widgets and objects.</doc>
      <source-position filename="libgimpwidgets/gimphelpui.h" line="69"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimphelpui.c"
             line="247">The #GQuark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="help_set_help_data" c:identifier="gimp_help_set_help_data">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimphelpui.c"
           line="162">The reason why we don't use gtk_widget_set_tooltip_text() is that
elements in the GIMP user interface should, if possible, also have
a @help_id set for context-sensitive help.

This function can be called with %NULL for @tooltip. Use this feature
if you want to set a help link for a widget which shouldn't have
a visible tooltip.</doc>
      <source-position filename="libgimpwidgets/gimphelpui.h" line="47"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="164">The #GtkWidget you want to set a @tooltip and/or @help_id for.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="tooltip" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="165">The text for this widget's tooltip (or %NULL).</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="166">The @help_id for the #GtkTipsQuery tooltips inspector.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="help_set_help_data_with_markup"
              c:identifier="gimp_help_set_help_data_with_markup"
              version="2.6">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimphelpui.c"
           line="191">Just like gimp_help_set_help_data(), but supports to pass text
which is marked up with &lt;link linkend="PangoMarkupFormat"&gt;Pango
text markup language&lt;/link&gt;.</doc>
      <source-position filename="libgimpwidgets/gimphelpui.h" line="52"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="193">The #GtkWidget you want to set a @tooltip and/or @help_id for.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="tooltip" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="194">The markup for this widget's tooltip (or %NULL).</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="195">The @help_id for the #GtkTipsQuery tooltips inspector.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="icons_init" c:identifier="gimp_icons_init">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpicons.c"
           line="227">Initializes the GIMP stock icon factory.

You don't need to call this function as gimp_ui_init() already does
this for you.</doc>
      <source-position filename="libgimpwidgets/gimpicons.h" line="417"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="icons_set_icon_theme"
              c:identifier="gimp_icons_set_icon_theme">
      <source-position filename="libgimpwidgets/gimpicons.h" line="419"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="Gio.File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="image_metadata_load_finish"
              c:identifier="gimp_image_metadata_load_finish"
              version="2.10">
      <doc xml:space="preserve"
           filename="libgimp/gimpimagemetadata.c"
           line="95">Applies the @metadata previously loaded with
gimp_image_metadata_load_prepare() to the image, taking into account
the passed @flags.</doc>
      <source-position filename="libgimp/gimpimagemetadata.h" line="37"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="image" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpimagemetadata.c"
               line="97">The image</doc>
          <type name="Gimp.Image" c:type="GimpImage*"/>
        </parameter>
        <parameter name="mime_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpimagemetadata.c"
               line="98">The loaded file's mime-type</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="metadata" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpimagemetadata.c"
               line="99">The metadata to set on the image</doc>
          <type name="Gimp.Metadata" c:type="GimpMetadata*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpimagemetadata.c"
               line="100">Flags to specify what of the metadata to apply to the image</doc>
          <type name="Gimp.MetadataLoadFlags" c:type="GimpMetadataLoadFlags"/>
        </parameter>
        <parameter name="interactive" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpimagemetadata.c"
               line="101">Whether this function is allowed to query info with dialogs</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="image_metadata_load_prepare"
              c:identifier="gimp_image_metadata_load_prepare"
              version="2.10"
              throws="1">
      <doc xml:space="preserve"
           filename="libgimp/gimpimagemetadata.c"
           line="58">Loads and returns metadata from @file to be passed into
gimp_image_metadata_load_finish().</doc>
      <source-position filename="libgimp/gimpimagemetadata.h" line="33"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimp/gimpimagemetadata.c"
             line="68">The file's metadata.</doc>
        <type name="Gimp.Metadata" c:type="GimpMetadata*"/>
      </return-value>
      <parameters>
        <parameter name="image" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpimagemetadata.c"
               line="60">The image</doc>
          <type name="Gimp.Image" c:type="GimpImage*"/>
        </parameter>
        <parameter name="mime_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpimagemetadata.c"
               line="61">The loaded file's mime-type</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="file" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpimagemetadata.c"
               line="62">The file to load the metadata from</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="image_metadata_load_thumbnail"
              c:identifier="gimp_image_metadata_load_thumbnail"
              version="2.10"
              throws="1">
      <doc xml:space="preserve"
           filename="libgimp/gimpimagemetadata.c"
           line="201">Retrieves a thumbnail from metadata if present.</doc>
      <source-position filename="libgimp/gimpimagemetadata.h" line="53"/>
      <return-value transfer-ownership="none" nullable="1">
        <doc xml:space="preserve"
             filename="libgimp/gimpimagemetadata.c"
             line="208">a #GimpImage of the @file thumbnail.</doc>
        <type name="Gimp.Image" c:type="GimpImage*"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpimagemetadata.c"
               line="203">A #GFile image</doc>
          <type name="Gio.File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="image_metadata_save_finish"
              c:identifier="gimp_image_metadata_save_finish"
              throws="1">
      <source-position filename="libgimp/gimpimagemetadata.h" line="46"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="image" transfer-ownership="none">
          <type name="Gimp.Image" c:type="GimpImage*"/>
        </parameter>
        <parameter name="mime_type" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="metadata" transfer-ownership="none">
          <type name="Gimp.Metadata" c:type="GimpMetadata*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="Gimp.MetadataSaveFlags" c:type="GimpMetadataSaveFlags"/>
        </parameter>
        <parameter name="file" transfer-ownership="none">
          <type name="Gio.File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="image_metadata_save_prepare"
              c:identifier="gimp_image_metadata_save_prepare"
              introspectable="0">
      <source-position filename="libgimp/gimpimagemetadata.h" line="43"/>
      <return-value>
        <type name="Gimp.Metadata" c:type="GimpMetadata*"/>
      </return-value>
      <parameters>
        <parameter name="image" transfer-ownership="none">
          <type name="Gimp.Image" c:type="GimpImage*"/>
        </parameter>
        <parameter name="mime_type" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="suggested_flags" transfer-ownership="none">
          <type name="Gimp.MetadataSaveFlags" c:type="GimpMetadataSaveFlags*"/>
        </parameter>
      </parameters>
    </function>
    <function name="int_adjustment_update"
              c:identifier="gimp_int_adjustment_update">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgets.c"
           line="611">Note that the #GtkAdjustment's value (which is a #gdouble) will be
rounded with RINT().</doc>
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="191"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adjustment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="613">A #GtkAdjustment.</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="614">A pointer to a #gint variable which will store the
             @adjustment's value.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="int_radio_group_new"
              c:identifier="gimp_int_radio_group_new"
              introspectable="0">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgets.c"
           line="47">Convenience function to create a group of radio buttons embedded into
a #GtkFrame or #GtkBox. This function does the same thing as
gimp_radio_group_new2(), but it takes integers as @item_data instead of
pointers, since that is a very common case (mapping an enum to a radio
group).</doc>
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="101"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgets.c"
             line="69">A #GtkFrame or #GtkBox (depending on @in_frame).</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="in_frame" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="49">%TRUE if you want a #GtkFrame around the
                        radio button group.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="frame_title"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="51">
                        The title of the Frame or %NULL if you don't want a
                        title.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="radio_button_callback"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="notified"
                   closure="3"
                   destroy="4">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="54">The callback each button's
                        "toggled" signal will be connected with.</doc>
          <type name="GObject.Callback" c:type="GCallback"/>
        </parameter>
        <parameter name="radio_button_callback_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="notified"
                   closure="2">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="56">
                        The data which will be passed to g_signal_connect().</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="radio_button_callback_destroy"
                   transfer-ownership="none"
                   scope="async"
                   destroy="3">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="initial" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="59">The @item_data of the initially pressed radio button.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="60">A %NULL-terminated @va_list describing
                        the radio buttons.</doc>
          <varargs/>
        </parameter>
      </parameters>
    </function>
    <function name="int_radio_group_set_active"
              c:identifier="gimp_int_radio_group_set_active">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgets.c"
           line="165">Calls gtk_toggle_button_set_active() with the radio button that was created
with a matching @item_data. This function does the same thing as
gimp_radio_group_set_active(), but takes integers as @item_data instead
of pointers.</doc>
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="109"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="radio_button" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="167">Pointer to a #GtkRadioButton.</doc>
          <type name="Gtk.RadioButton" c:type="GtkRadioButton*"/>
        </parameter>
        <parameter name="item_data" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="168">The @item_data of the radio button you want to select.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="label_set_attributes"
              c:identifier="gimp_label_set_attributes"
              version="2.2"
              introspectable="0">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsutils.c"
           line="159">Sets Pango attributes on a #GtkLabel in a more convenient way than
gtk_label_set_attributes().

This function is useful if you want to change the font attributes
of a #GtkLabel. This is an alternative to using PangoMarkup which
is slow to parse and awkward to handle in an i18n-friendly way.

The attributes are set on the complete label, from start to end. If
you need to set attributes on part of the label, you will have to
use the PangoAttributes API directly.</doc>
      <source-position filename="libgimpwidgets/gimpwidgetsutils.h" line="42"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="label" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="161">a #GtkLabel</doc>
          <type name="Gtk.Label" c:type="GtkLabel*"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="162">a list of PangoAttrType and value pairs terminated by -1.</doc>
          <varargs/>
        </parameter>
      </parameters>
    </function>
    <function name="monitor_get_color_profile"
              c:identifier="gimp_monitor_get_color_profile"
              version="3.0">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsutils.c"
           line="486">This function returns the #GimpColorProfile of @monitor
or %NULL if there is no profile configured.</doc>
      <source-position filename="libgimpwidgets/gimpwidgetsutils.h" line="53"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsutils.c"
             line="495">the monitor's #GimpColorProfile,
         or %NULL.</doc>
        <type name="Gimp.ColorProfile" c:type="GimpColorProfile*"/>
      </return-value>
      <parameters>
        <parameter name="monitor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="488">a #GdkMonitor</doc>
          <type name="Gdk.Monitor" c:type="GdkMonitor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="proc_view_new"
              c:identifier="gimp_proc_view_new"
              version="2.4">
      <source-position filename="libgimp/gimpprocview.h" line="34"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimp/gimpprocview.c"
             line="77">a new widget providing a view on a
         GIMP procedure</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="procedure_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpprocview.c"
               line="75">The name of a procedure.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_boolean_combo_box_new"
              c:identifier="gimp_prop_boolean_combo_box_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="673">Creates a #GtkComboBox widget to display and set the specified
boolean property.  The combo box will have two entries, one
displaying the @true_text label, the other displaying the
@false_text label.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="37"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="685">The newly created #GtkComboBox widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="675">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="676">Name of boolean property controlled by combo box.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="true_text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="677">Label used for entry corresponding to %TRUE value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="false_text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="678">Label used for entry corresponding to %FALSE value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_boolean_radio_frame_new"
              c:identifier="gimp_prop_boolean_radio_frame_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="1142">Creates a pair of radio buttons which function to set and display
the specified boolean property.
If @title is %NULL, the @property_name's nick will be used as label
of the returned frame.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="41"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="1155">A #GimpFrame containing the radio buttons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1144">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1145">Name of boolean property controlled by the radio buttons.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="title"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1146">Label for the frame.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="true_text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1147">Label for the button corresponding to %TRUE.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="false_text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1148">Label for the button corresponding to %FALSE.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_check_button_new"
              c:identifier="gimp_prop_check_button_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="88">Creates a #GtkCheckButton that displays and sets the specified
boolean property.
If @label is %NULL, the @property_name's nick will be used as label
of the returned button.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="34"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="99">The newly created #GtkCheckButton widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="90">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="91">Name of boolean property controlled by checkbutton.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="label" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="92">Label to give checkbutton (including mnemonic).</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_color_area_new"
              c:identifier="gimp_prop_color_area_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="3727">Creates a #GimpColorArea to set and display the value of an RGB
property.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="214"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="3738">A new #GimpColorArea widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3729">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3730">Name of RGB property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3731">Width of color area.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3732">Height of color area.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3733">How transparency is represented.</doc>
          <type name="ColorAreaType" c:type="GimpColorAreaType"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_coordinates_connect"
              c:identifier="gimp_prop_coordinates_connect">
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="202"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="x_property_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="y_property_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="unit_property_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="sizeentry" transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="chainbutton" transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="xresolution" transfer-ownership="none">
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="yresolution" transfer-ownership="none">
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_coordinates_new"
              c:identifier="gimp_prop_coordinates_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="3263">Creates a #GimpSizeEntry to set and display two double or int
properties, which will usually represent X and Y coordinates, and
their associated unit property.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="193"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="3281">A new #GimpSizeEntry widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3265">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="x_property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3266">Name of int or double property for X coordinate.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="y_property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3267">Name of int or double property for Y coordinate.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="unit_property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3268">Name of unit property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="unit_format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3269">A printf-like unit-format string as is used with
                     gimp_unit_menu_new().</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="update_policy" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3271">How the automatic pixel &lt;-&gt; real-world-unit
                     calculations should be done.</doc>
          <type name="SizeEntryUpdatePolicy"
                c:type="GimpSizeEntryUpdatePolicy"/>
        </parameter>
        <parameter name="xresolution" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3273">The resolution (in dpi) for the X coordinate.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="yresolution" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3274">The resolution (in dpi) for the Y coordinate.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="has_chainbutton" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3275">Whether to add a chainbutton to the size entry.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_entry_new"
              c:identifier="gimp_prop_entry_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="2067">Creates a #GtkEntry to set and display the value of the specified
string property.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="151"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="2076">A new #GtkEntry widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2069">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2070">Name of string property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="max_len" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2071">Maximum allowed length of string.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_enum_check_button_new"
              c:identifier="gimp_prop_enum_check_button_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="197">Creates a #GtkCheckButton that displays and sets the specified
property of type Enum.  Note that this widget only allows two values
for the enum, one corresponding to the "checked" state and the
other to the "unchecked" state.
If @label is %NULL, the @property_name's nick will be used as label
of the returned button.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="78"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="212">The newly created #GtkCheckButton widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="199">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="200">Name of enum property controlled by checkbutton.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="label"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="201">Label to give checkbutton (including mnemonic).</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="false_value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="202">Enum value corresponding to unchecked state.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="true_value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="203">Enum value corresponding to checked state.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_enum_combo_box_new"
              c:identifier="gimp_prop_enum_combo_box_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="484">Creates a #GimpIntComboBox widget to display and set the specified
enum property.  The @mimimum_value and @maximum_value give the
possibility of restricting the allowed range to a subset of the
enum.  If the two values are equal (e.g., 0, 0), then the full
range of the Enum is used.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="73"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="497">The newly created #GimpEnumComboBox widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="486">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="487">Name of enum property controlled by combo box.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="minimum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="488">Smallest allowed value of enum.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="maximum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="489">Largest allowed value of enum.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_enum_icon_box_new"
              c:identifier="gimp_prop_enum_icon_box_new"
              version="2.10">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="1209">Creates a horizontal box of radio buttons with named icons, which
function to set and display the value of the specified Enum
property.  The icon name for each icon is created by appending the
enum_value's nick to the given @icon_prefix.  See
gimp_enum_icon_box_new() for more information.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="94"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="1223">A #libgimpwidgets-gimpenumiconbox containing the radio buttons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1211">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1212">Name of enum property controlled by the radio buttons.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="icon_prefix" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1213">The prefix of the group of icon names to use.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="minimum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1214">Smallest value of enum to be included.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="maximum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1215">Largest value of enum to be included.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_enum_label_new"
              c:identifier="gimp_prop_enum_label_new"
              version="2.4">
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="100"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="1089">The newly created #GimpEnumLabel widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1086">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1087">Name of enum property to be displayed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_enum_radio_box_new"
              c:identifier="gimp_prop_enum_radio_box_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="867">Creates a group of radio buttons which function to set and display
the specified enum property.  The @minimum and @maximum arguments
allow only a subset of the enum to be used.  If the two arguments
are equal (e.g., 0, 0), then the full range of the enum will be used.
If you want to assign a label to the group of radio buttons, use
gimp_prop_enum_radio_frame_new() instead of this function.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="89"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="881">A #GtkBox containing the radio buttons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="869">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="870">Name of enum property controlled by the radio buttons.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="minimum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="871">Smallest value of enum to be included.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="maximum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="872">Largest value of enum to be included.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_enum_radio_frame_new"
              c:identifier="gimp_prop_enum_radio_frame_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="788">Creates a group of radio buttons which function to set and display
the specified enum property.  The @minimum and @maximum arguments
allow only a subset of the enum to be used.  If the two arguments
are equal (e.g., 0, 0), then the full range of the enum will be used.
If @title is %NULL, the @property_name's nick will be used as label
of the returned frame.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="84"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="803">A #GimpFrame containing the radio buttons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="790">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="791">Name of enum property controlled by the radio buttons.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="title"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="792">Label for the frame holding the buttons</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="minimum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="793">Smallest value of enum to be included.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="maximum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="794">Largest value of enum to be included.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_expander_new"
              c:identifier="gimp_prop_expander_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="4054">Creates a #GtkExpander controlled by the specified boolean property.
A value of %TRUE for the property corresponds to the expanded state
for the widget.
If @label is %NULL, the @property_name's nick will be used as label
of the returned widget.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="47"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="4066">A new #GtkExpander widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="4056">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="4057">Name of boolean property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="label"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="4058">Label for expander.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_file_chooser_button_new"
              c:identifier="gimp_prop_file_chooser_button_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="2471">Creates a #GtkFileChooserButton to edit the specified path property.

Note that #GtkFileChooserButton implements the #GtkFileChooser
interface; you can use the #GtkFileChooser API with it.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="166"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="2483">A new #GtkFileChooserButton.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2473">object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2474">name of path property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="title" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2475">the title of the browse dialog.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="action" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2476">the open mode for the widget.</doc>
          <type name="Gtk.FileChooserAction" c:type="GtkFileChooserAction"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_file_chooser_button_new_with_dialog"
              c:identifier="gimp_prop_file_chooser_button_new_with_dialog"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="2509">Creates a #GtkFileChooserButton to edit the specified path property.

The button uses @dialog as it's file-picking window. Note that @dialog
must be a #GtkFileChooserDialog (or subclass) and must not have
%GTK_DIALOG_DESTROY_WITH_PARENT set.

Note that #GtkFileChooserButton implements the #GtkFileChooser
interface; you can use the #GtkFileChooser API with it.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="170"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="2524">A new #GtkFileChooserButton.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2511">object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2512">name of path property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="dialog" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2513">the #GtkFileChooserDialog widget to use.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_hscale_new"
              c:identifier="gimp_prop_hscale_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="1394">Creates a horizontal scale to control the value of the specified
integer or double property.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="112"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="1405">A new #GtkScale.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1396">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1397">Name of integer or double property controlled by the scale.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="step_increment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1398">Step size.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="page_increment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1399">Page size.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="digits" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1400">Number of digits after decimal point to display.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_icon_image_new"
              c:identifier="gimp_prop_icon_image_new"
              version="2.10">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="3974">Creates a widget to display a icon image representing the value of the
specified string property, which should encode an icon name.
See gtk_image_new_from_icon_name() for more information.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="228"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="3984">A new #GtkImage widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3976">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3977">Name of string property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="icon_size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3978">Size of desired icon image.</doc>
          <type name="Gtk.IconSize" c:type="GtkIconSize"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_int_combo_box_new"
              c:identifier="gimp_prop_int_combo_box_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="360">Creates a #GimpIntComboBox widget to display and set the specified
property.  The contents of the widget are determined by @store,
which should be created using gimp_int_store_new().</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="54"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="370">The newly created #GimpIntComboBox widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="362">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="363">Name of int property controlled by combo box.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="store" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="364">#GimpIntStore holding list of labels, values, etc.</doc>
          <type name="IntStore" c:type="GimpIntStore*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_int_radio_box_new"
              c:identifier="gimp_prop_int_radio_box_new"
              version="3.0">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="987">Creates a group of radio buttons which function to set and display
the specified int property. If you want to assign a label to the
group of radio buttons, use gimp_prop_int_radio_frame_new()
instead of this function.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="61"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="998">A #GtkBox containing the radio buttons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="989">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="990">Name of enum property controlled by the radio buttons.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="store" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="991">#GimpIntStore holding list of labels, values, etc.</doc>
          <type name="IntStore" c:type="GimpIntStore*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_int_radio_frame_new"
              c:identifier="gimp_prop_int_radio_frame_new"
              version="3.0">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="939">Creates a group of radio buttons which function to set and display
the specified int property. If @title is %NULL, the
@property_name's nick will be used as label of the returned frame.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="57"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="950">A #GimpFrame containing the radio buttons.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="941">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="942">Name of enum property controlled by the radio buttons.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="title"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="943">Label for the frame holding the buttons</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="store" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="944">#GimpIntStore holding list of labels, values, etc.</doc>
          <type name="IntStore" c:type="GimpIntStore*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_label_new"
              c:identifier="gimp_prop_label_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="1967">Creates a #GtkLabel to display the value of the specified property.
The property should be a string property or at least transformable
to a string.  If the user should be able to edit the string, use
gimp_prop_entry_new() instead.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="149"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="1977">A new #GtkLabel widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1969">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1970">Name of string property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_memsize_entry_new"
              c:identifier="gimp_prop_memsize_entry_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="1848">Creates a #GimpMemsizeEntry (spin button and option menu) to set
and display the value of the specified memsize property.  See
gimp_memsize_entry_new() for more information.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="143"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="1857">A new #GimpMemsizeEntry.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1850">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1851">Name of memsize property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_opacity_entry_new"
              c:identifier="gimp_prop_opacity_entry_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="1615">Creates a #libgimpwidgets-gimpscaleentry (slider and spin button)
to set and display the value of the specified double property,
which should represent an "opacity" variable with range 0 to 100.
See gimp_scale_entry_new() for more information.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="133"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="1630">The #GtkSpinButton's #GtkAdjustment.</doc>
        <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1617">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1618">Name of double property controlled by the spin button.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="grid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1619">The #GtkGrid the widgets will be attached to.</doc>
          <type name="Gtk.Grid" c:type="GtkGrid*"/>
        </parameter>
        <parameter name="column" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1620">The column to start with.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="row" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1621">The row to attach the widgets.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="label" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1622">The text for the #GtkLabel which will appear left of the
                #GtkHScale.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_path_editor_new"
              c:identifier="gimp_prop_path_editor_new">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="2689">Creates a #GimpPathEditor to edit the specified path and writable
path properties.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="174"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="2699">A new #GimpPathEditor.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2691">object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="path_property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2692">name of path property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="writable_property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2693">name of writable path property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="filechooser_title" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2694">window title of #GtkFileChooserDialog widget.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_pointer_combo_box_new"
              c:identifier="gimp_prop_pointer_combo_box_new"
              version="2.10">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="416">Creates a #GimpIntComboBox widget to display and set the specified
property.  The contents of the widget are determined by @store,
which should be created using gimp_int_store_new().
Values are GType/gpointer data, and therefore must be stored in the
"user-data" column, instead of the usual "value" column.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="67"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="428">The newly created #GimpIntComboBox widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="418">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="419">Name of GType/gpointer property controlled by combo box.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="store" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="420">#GimpIntStore holding list of labels, values, etc.</doc>
          <type name="IntStore" c:type="GimpIntStore*"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_scale_entry_new"
              c:identifier="gimp_prop_scale_entry_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="1458">Creates a #libgimpwidgets-gimpscaleentry (slider and spin button)
to set and display the value of the specified double property.  See
gimp_scale_entry_new() for more information.
If @label is %NULL, the @property_name's nick will be used as label
of the returned object.

Note that the @scale_limits boolean is the inverse of
gimp_scale_entry_new()'s "constrain" parameter.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="118"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="1484">The #GtkSpinButton's #GtkAdjustment.</doc>
        <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1460">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1461">Name of double property controlled by the spin button.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="grid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1462">The #GtkGrid the widgets will be attached to.</doc>
          <type name="Gtk.Grid" c:type="GtkGrid*"/>
        </parameter>
        <parameter name="column" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1463">The column to start with.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="row" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1464">The row to attach the widgets.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="label"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1465">The text for the #GtkLabel which will appear left of
                    the #GtkHScale.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="step_increment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1467">Step size.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="page_increment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1468">Page size.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="digits" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1469">Number of digits after decimal point to display.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="limit_scale" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1470">%FALSE if the range of possible values of the
                 GtkHScale should be the same as of the GtkSpinButton.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="lower_limit" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1472">The scale's lower boundary if @scale_limits is %TRUE.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="upper_limit" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1473">The scale's upper boundary if @scale_limits is %TRUE.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_size_entry_new"
              c:identifier="gimp_prop_size_entry_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="2944">Creates a #GimpSizeEntry to set and display the specified double or
int property, and its associated unit property.  Note that this
function is only suitable for creating a size entry holding a
single value.  Use gimp_prop_coordinates_new() to create a size
entry holding two values.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="182"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="2963">A new #GimpSizeEntry widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2946">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2947">Name of int or double property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="property_is_pixel" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2948">When %TRUE, the property value is in pixels,
                     and in the selected unit otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="unit_property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2950">Name of unit property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="unit_format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2951">A printf-like unit-format string as is used with
                     gimp_unit_menu_new().</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="update_policy" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2953">How the automatic pixel &lt;-&gt; real-world-unit
                     calculations should be done.</doc>
          <type name="SizeEntryUpdatePolicy"
                c:type="GimpSizeEntryUpdatePolicy"/>
        </parameter>
        <parameter name="resolution" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2955">The resolution (in dpi) for the field.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_spin_button_new"
              c:identifier="gimp_prop_spin_button_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="1333">Creates a spin button to set and display the value of the
specified double property.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="106"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="1344">A new #libgimpwidgets-gimpspinbutton.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1335">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1336">Name of double property controlled by the spin button.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="step_increment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1337">Step size.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="page_increment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1338">Page size.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="digits" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="1339">Number of digits after decimal point to display.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_string_combo_box_new"
              c:identifier="gimp_prop_string_combo_box_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="2350">Creates a #GimpStringComboBox widget to display and set the
specified property.  The contents of the widget are determined by
@store.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="157"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="2362">The newly created #GimpStringComboBox widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2352">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2353">Name of int property controlled by combo box.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="model" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2354">#GtkTreeStore holding list of values</doc>
          <type name="Gtk.TreeModel" c:type="GtkTreeModel*"/>
        </parameter>
        <parameter name="id_column" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2355">column in @store that holds string IDs</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="label_column" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2356">column in @store that holds labels to use in the combo-box</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_text_buffer_new"
              c:identifier="gimp_prop_text_buffer_new"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="2194">Creates a #GtkTextBuffer to set and display the value of the
specified string property.  Unless the string is expected to
contain multiple lines or a large amount of text, use
gimp_prop_entry_new() instead.  See #GtkTextView for information on
how to insert a text buffer into a visible widget.

If @max_len is 0 or negative, the text buffer allows an unlimited
number of characters to be entered.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="154"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="2209">A new #GtkTextBuffer.</doc>
        <type name="Gtk.TextBuffer" c:type="GtkTextBuffer*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2196">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2197">Name of string property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="max_len" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="2198">Maximum allowed length of text (in characters).</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="prop_unit_combo_box_new"
              c:identifier="gimp_prop_unit_combo_box_new"
              version="2.8">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimppropwidgets.c"
           line="3844">Creates a #GimpUnitComboBox to set and display the value of a Unit
property.  See gimp_unit_combo_box_new() for more information.</doc>
      <source-position filename="libgimpwidgets/gimppropwidgets.h" line="222"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimppropwidgets.c"
             line="3852">A new #GimpUnitComboBox widget.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3846">Object to which property is attached.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimppropwidgets.c"
               line="3847">Name of Unit property.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="query_boolean_box" c:identifier="gimp_query_boolean_box">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.c"
           line="510">Creates a new #GtkDialog that asks the user to do a boolean decision.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="168"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpquerybox.c"
             line="531">A pointer to the new #GtkDialog.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="title" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="512">The query box dialog's title.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="513">The dialog's parent widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="help_func" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="514">The help function to show this dialog's help page.</doc>
          <type name="HelpFunc" c:type="GimpHelpFunc"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="515">A string identifying this dialog's help page.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="icon_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="516">An icon name to specify an icon to appear on the left
               on the dialog's message.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="518">A string which will be shown in the query box.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="true_button" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="519">The string to be shown in the dialog's left button.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="false_button" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="520">The string to be shown in the dialog's right button.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="521">The object this query box is associated with.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="signal" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="522">The object's signal which will cause the query box
               to be closed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="notified"
                   closure="11"
                   destroy="12">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="524">The function which will be called when the user clicks one
               of the buttons.</doc>
          <type name="QueryBooleanCallback" c:type="GimpQueryBooleanCallback"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="526">The callback's user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="data_destroy" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="527">Destroy function for @data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="query_double_box" c:identifier="gimp_query_double_box">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.c"
           line="358">Creates a new #GtkDialog that queries the user for a double value.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="135"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpquerybox.c"
             line="377">A pointer to the new #GtkDialog.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="title" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="360">The query box dialog's title.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="361">The dialog's parent widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="help_func" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="362">The help function to show this dialog's help page.</doc>
          <type name="HelpFunc" c:type="GimpHelpFunc"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="363">A string identifying this dialog's help page.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="364">A string which will be shown above the dialog's entry widget.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="initial" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="365">The initial value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="lower" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="366">The lower boundary of the range of possible values.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="upper" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="367">The upper boundray of the range of possible values.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="digits" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="368">The number of decimal digits the #GtkSpinButton will provide.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="369">The object this query box is associated with.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="signal" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="370">The object's signal which will cause the query box to be closed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="notified"
                   closure="12"
                   destroy="13">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="371">The function which will be called when the user selects "OK".</doc>
          <type name="QueryDoubleCallback" c:type="GimpQueryDoubleCallback"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="372">The callback's user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="data_destroy" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="373">Destroy function for @data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="query_int_box" c:identifier="gimp_query_int_box">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.c"
           line="294">Creates a new #GtkDialog that queries the user for an integer value.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="121"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpquerybox.c"
             line="312">A pointer to the new #GtkDialog.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="title" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="296">The query box dialog's title.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="297">The dialog's parent widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="help_func" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="298">The help function to show this dialog's help page.</doc>
          <type name="HelpFunc" c:type="GimpHelpFunc"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="299">A string identifying this dialog's help page.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="300">A string which will be shown above the dialog's entry widget.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="initial" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="301">The initial value.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="lower" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="302">The lower boundary of the range of possible values.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="upper" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="303">The upper boundray of the range of possible values.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="304">The object this query box is associated with.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="signal" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="305">The object's signal which will cause the query box to be closed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="notified"
                   closure="11"
                   destroy="12">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="306">The function which will be called when the user selects "OK".</doc>
          <type name="QueryIntCallback" c:type="GimpQueryIntCallback"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="307">The callback's user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="data_destroy" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="308">Destroy function for @data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="query_size_box" c:identifier="gimp_query_size_box">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.c"
           line="424">Creates a new #GtkDialog that queries the user for a size using a
#GimpSizeEntry.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="150"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpquerybox.c"
             line="450">A pointer to the new #GtkDialog.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="title" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="426">The query box dialog's title.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="427">The dialog's parent widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="help_func" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="428">The help function to show this dialog's help page.</doc>
          <type name="HelpFunc" c:type="GimpHelpFunc"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="429">A string identifying this dialog's help page.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="430">A string which will be shown above the dialog's entry widget.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="initial" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="431">The initial value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="lower" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="432">The lower boundary of the range of possible values.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="upper" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="433">The upper boundray of the range of possible values.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="digits" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="434">The number of decimal digits the #GimpSizeEntry provide in
               "pixel" mode.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="unit" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="436">The unit initially shown by the #GimpUnitMenu.</doc>
          <type name="Gimp.Unit" c:type="GimpUnit"/>
        </parameter>
        <parameter name="resolution" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="437">The resolution (in dpi) which will be used for pixel/unit
               calculations.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="dot_for_dot" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="439">%TRUE if the #GimpUnitMenu's initial unit should be "pixels".</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="440">The object this query box is associated with.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="signal" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="441">The object's signal which will cause the query box
               to be closed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="notified"
                   closure="15"
                   destroy="16">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="443">The function which will be called when the user selects "OK".</doc>
          <type name="QuerySizeCallback" c:type="GimpQuerySizeCallback"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="444">The callback's user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="data_destroy" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="445">Destroy function for @data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="query_string_box" c:identifier="gimp_query_string_box">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpquerybox.c"
           line="236">Creates a new #GtkDialog that queries the user for a string value.</doc>
      <source-position filename="libgimpwidgets/gimpquerybox.h" line="109"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpquerybox.c"
             line="252">A pointer to the new #GtkDialog.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="title" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="238">The query box dialog's title.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="parent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="239">The dialog's parent widget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="help_func" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="240">The help function to show this dialog's help page.</doc>
          <type name="HelpFunc" c:type="GimpHelpFunc"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="241">A string identifying this dialog's help page.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="242">A string which will be shown above the dialog's entry widget.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="initial" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="243">The initial value.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="244">The object this query box is associated with.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="signal" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="245">The object's signal which will cause the query box to be closed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="notified"
                   closure="9"
                   destroy="10">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="246">The function which will be called when the user selects "OK".</doc>
          <type name="QueryStringCallback" c:type="GimpQueryStringCallback"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="247">The callback's user data.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="data_destroy" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpquerybox.c"
               line="248">Destroy function for @data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="radio_button_update"
              c:identifier="gimp_radio_button_update">
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="188"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="594">A #GtkRadioButton.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="595">A pointer to a #gint variable which will store the value of
         GPOINTER_TO_INT (g_object_get_data (@widget, "gimp-item-data")).</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="random_seed_new" c:identifier="gimp_random_seed_new">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgets.c"
           line="217">Creates a widget that allows the user to control how the random number
generator is initialized.</doc>
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="141"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgets.c"
             line="226">A #GtkBox containing a #GtkSpinButton for
         the seed and a #GtkButton for setting a random seed.</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="seed" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="219">A pointer to the variable which stores the random seed.</doc>
          <type name="guint32" c:type="guint32*"/>
        </parameter>
        <parameter name="random_seed" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="220">A pointer to a boolean indicating whether seed should be
              initialised randomly or not.</doc>
          <type name="gboolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </function>
    <function name="scale_entry_get_logarithmic"
              c:identifier="gimp_scale_entry_get_logarithmic"
              version="2.2">
      <source-position filename="libgimpwidgets/gimpscaleentry.h" line="119"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpscaleentry.c"
             line="427">%TRUE if the the entry's scale widget will behave in
         logarithmic fashion, %FALSE for linear behaviour.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="adjustment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="425">a  #GtkAdjustment as returned by gimp_scale_entry_new()</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
      </parameters>
    </function>
    <function name="scale_entry_new" c:identifier="gimp_scale_entry_new">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpscaleentry.c"
           line="212">This function creates a #GtkLabel, a #GtkHScale and a #GtkSpinButton and
attaches them to a 3-column #GtkGrid.</doc>
      <source-position filename="libgimpwidgets/gimpscaleentry.h" line="81"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpscaleentry.c"
             line="239">The #GtkSpinButton's #GtkAdjustment.</doc>
        <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
      </return-value>
      <parameters>
        <parameter name="grid" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="214">The #GtkGrid the widgets will be attached to.</doc>
          <type name="Gtk.Grid" c:type="GtkGrid*"/>
        </parameter>
        <parameter name="column" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="215">The column to start with.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="row" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="216">The row to attach the widgets.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="text" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="217">The text for the #GtkLabel which will appear
                      left of the #GtkHScale.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="scale_width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="219">The minimum horizontal size of the #GtkHScale.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="spinbutton_width" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="220">The minimum horizontal size of the #GtkSpinButton.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="221">The initial value.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="lower" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="222">The lower boundary.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="upper" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="223">The upper boundary.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="step_increment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="224">The step increment.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="page_increment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="225">The page increment.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="digits" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="226">The number of decimal digits.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="constrain" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="227">%TRUE if the range of possible values of the
                      #GtkSpinButton should be the same as of the #GtkHScale.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
        <parameter name="unconstrained_lower" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="229">The spinbutton's lower boundary
                      if @constrain == %FALSE.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="unconstrained_upper" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="231">The spinbutton's upper boundary
                      if @constrain == %FALSE.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="tooltip" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="233">A tooltip message for the scale and the spinbutton.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="234">The widgets' help_id (see gimp_help_set_help_data()).</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="scale_entry_set_logarithmic"
              c:identifier="gimp_scale_entry_set_logarithmic"
              version="2.2">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpscaleentry.c"
           line="321">Sets whether the scale_entry's scale widget will behave in a linear
or logarithmic fashion. Useful when an entry has to attend large
ranges, but smaller selections on that range require a finer
adjustment.</doc>
      <source-position filename="libgimpwidgets/gimpscaleentry.h" line="117"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adjustment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="323">a  #GtkAdjustment as returned by gimp_scale_entry_new()</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
        <parameter name="logarithmic" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="324">a boolean value to set or reset logarithmic behaviour
              of the scale widget</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="scale_entry_set_sensitive"
              c:identifier="gimp_scale_entry_set_sensitive">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpscaleentry.c"
           line="439">Sets the sensitivity of the scale_entry's #GtkLabel, #GtkHScale and
#GtkSpinButton.</doc>
      <source-position filename="libgimpwidgets/gimpscaleentry.h" line="114"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adjustment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="441">a #GtkAdjustment returned by gimp_scale_entry_new()</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
        <parameter name="sensitive" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscaleentry.c"
               line="442">a boolean value with the same semantics as the @sensitive
             parameter of gtk_widget_set_sensitive()</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="scroll_adjustment_values"
              c:identifier="gimp_scroll_adjustment_values">
      <source-position filename="libgimpwidgets/gimpscrolledpreview.h"
                       line="88"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sevent" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscrolledpreview.c"
               line="941">A #GdkEventScroll</doc>
          <type name="Gdk.EventScroll" c:type="GdkEventScroll*"/>
        </parameter>
        <parameter name="hadj"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscrolledpreview.c"
               line="942">Horizontal adjustment</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
        <parameter name="vadj"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscrolledpreview.c"
               line="943">Vertical adjustment</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
        <parameter name="hvalue"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full"
                   optional="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscrolledpreview.c"
               line="944">Return location for horizontal value, or %NULL</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
        <parameter name="vvalue"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full"
                   optional="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpscrolledpreview.c"
               line="945">Return location for vertical value, or %NULL</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </parameter>
      </parameters>
    </function>
    <function name="standard_help_func" c:identifier="gimp_standard_help_func">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimphelpui.c"
           line="82">This is the standard GIMP help function which does nothing but calling
gimp_help(). It is the right function to use in almost all cases.</doc>
      <source-position filename="libgimpwidgets/gimphelpui.h" line="36"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="help_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="84">A unique help identifier.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="help_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimphelpui.c"
               line="85">The @help_data passed to gimp_help_connect().</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="toggle_button_update"
              c:identifier="gimp_toggle_button_update">
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="185"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="576">A #GtkToggleButton.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="577">A pointer to a #gint variable which will store the value of
         gtk_toggle_button_get_active().</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="ui_get_display_window"
              c:identifier="gimp_ui_get_display_window"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimp/gimpui.c"
           line="194">Returns the #GdkWindow of a display window. The purpose is to allow
to make plug-in dialogs transient to the image display as explained
with gdk_window_set_transient_for().

You shouldn't have to call this function directly. Use
gimp_window_set_transient_for_display() instead.</doc>
      <source-position filename="libgimp/gimpui.h" line="63"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="libgimp/gimpui.c"
             line="205">A reference to a #GdkWindow or %NULL.
              You should unref the window using g_object_unref() as
              soon as you don't need it any longer.</doc>
        <type name="Gdk.Window" c:type="GdkWindow*"/>
      </return-value>
      <parameters>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpui.c"
               line="196">a #GimpDisplay.</doc>
          <type name="Gimp.Display" c:type="GimpDisplay*"/>
        </parameter>
      </parameters>
    </function>
    <function name="ui_get_progress_window"
              c:identifier="gimp_ui_get_progress_window"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimp/gimpui.c"
           line="225">Returns the #GdkWindow of the window this plug-in's progress bar is
shown in. Use it to make plug-in dialogs transient to this window
as explained with gdk_window_set_transient_for().

You shouldn't have to call this function directly. Use
gimp_window_set_transient() instead.</doc>
      <source-position filename="libgimp/gimpui.h" line="59"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimp/gimpui.c"
             line="235">A reference to a #GdkWindow or %NULL.
              You should unref the window using g_object_unref() as
              soon as you don't need it any longer.</doc>
        <type name="Gdk.Window" c:type="GdkWindow*"/>
      </return-value>
    </function>
    <function name="ui_init" c:identifier="gimp_ui_init">
      <doc xml:space="preserve"
           filename="libgimp/gimpui.c"
           line="83">This function initializes GTK+ with gtk_init().

It also sets up various other things so that the plug-in user looks
and behaves like the GIMP core. This includes selecting the GTK+
theme and setting up the help system as chosen in the GIMP
preferences. Any plug-in that provides a user interface should call
this function.</doc>
      <source-position filename="libgimp/gimpui.h" line="57"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="prog_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpui.c"
               line="85">The name of the plug-in which will be passed as argv[0] to
            gtk_init(). It's a convention to use the name of the
            executable and _not_ the PDB procedure name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="uint_adjustment_update"
              c:identifier="gimp_uint_adjustment_update">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgets.c"
           line="629">Note that the #GtkAdjustment's value (which is a #gdouble) will be rounded
with (#guint) (value + 0.5).</doc>
      <source-position filename="libgimpwidgets/gimpwidgets.h" line="194"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="adjustment" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="631">A #GtkAdjustment.</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgets.c"
               line="632">A pointer to a #guint variable which will store the
             @adjustment's value.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="widget_get_color_profile"
              c:identifier="gimp_widget_get_color_profile"
              version="3.0">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsutils.c"
           line="603">This function returns the #GimpColorProfile of the monitor @widget is
currently displayed on, or %NULL if there is no profile configured.</doc>
      <source-position filename="libgimpwidgets/gimpwidgetsutils.h" line="54"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsutils.c"
             line="612">@widget's monitor's #GimpColorProfile,
         or %NULL.</doc>
        <type name="Gimp.ColorProfile" c:type="GimpColorProfile*"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="605">a #GtkWidget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="widget_get_color_transform"
              c:identifier="gimp_widget_get_color_transform"
              version="2.10">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsutils.c"
           line="736">This function returns the #GimpColorTransform that transforms pixels
from @src_profile to the profile of the #GdkMonitor the @widget is
displayed on.</doc>
      <source-position filename="libgimpwidgets/gimpwidgetsutils.h" line="56"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsutils.c"
             line="748">the #GimpColorTransform.</doc>
        <type name="Gimp.ColorTransform" c:type="GimpColorTransform*"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="738">a #GtkWidget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="739">a #GimpColorConfig</doc>
          <type name="Gimp.ColorConfig" c:type="GimpColorConfig*"/>
        </parameter>
        <parameter name="src_profile" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="740">a #GimpColorProfile</doc>
          <type name="Gimp.ColorProfile" c:type="GimpColorProfile*"/>
        </parameter>
        <parameter name="src_format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="741">Babl format for the transform's source pixels</doc>
          <type name="Babl.Object" c:type="const Babl*"/>
        </parameter>
        <parameter name="dest_format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="742">Babl format for the transforms's destination pixels</doc>
          <type name="Babl.Object" c:type="const Babl*"/>
        </parameter>
      </parameters>
    </function>
    <function name="widget_get_monitor" c:identifier="gimp_widget_get_monitor">
      <source-position filename="libgimpwidgets/gimpwidgetsutils.h" line="45"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgetsutils.c"
             line="296">the #GdkMonitor where @widget is current displayed on.</doc>
        <type name="Gdk.Monitor" c:type="GdkMonitor*"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="294">a #GtkWidget.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="widget_track_monitor"
              c:identifier="gimp_widget_track_monitor"
              version="2.10">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgetsutils.c"
           line="413">This function behaves as if #GtkWidget had a signal

GtkWidget::monitor_changed(GtkWidget *widget, gpointer user_data)

That is emitted whenever @widget's toplevel window is moved from
one monitor to another. This function automatically connects to
the right toplevel #GtkWindow, even across moving @widget between
toplevel windows.

Note that this function tracks the toplevel, not @widget itself, so
all a window's widgets are always considered to be on the same
monitor. This is because this function is mainly used for fetching
the new monitor's color profile, and it makes little sense to use
different profiles for the widgets of one window.</doc>
      <source-position filename="libgimpwidgets/gimpwidgetsutils.h" line="48"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="415">a #GtkWidget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
        <parameter name="monitor_changed_callback"
                   transfer-ownership="none"
                   scope="notified"
                   closure="2"
                   destroy="3">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="416">the callback when @widget's monitor changes</doc>
          <type name="GObject.Callback" c:type="GCallback"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="417">data passed to @monitor_changed_callback</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data_destroy"
                   transfer-ownership="none"
                   scope="async">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpwidgetsutils.c"
               line="418">destroy function for @user_data.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="widgets_error_quark"
              c:identifier="gimp_widgets_error_quark">
      <doc xml:space="preserve"
           filename="libgimpwidgets/gimpwidgets-error.c"
           line="29">This function is never called directly. Use GIMP_WIDGETS_ERROR() instead.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpwidgets-error.c"
             line="34">the #GQuark that defines the GIMP widgets error domain.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="window_set_transient"
              c:identifier="gimp_window_set_transient"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimp/gimpui.c"
           line="304">Indicates to the window manager that @window is a transient dialog
associated with the GIMP window that the plug-in has been
started from. See also gimp_window_set_transient_for_display().</doc>
      <source-position filename="libgimp/gimpui.h" line="61"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpui.c"
               line="306">the #GtkWindow that should become transient</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </parameter>
      </parameters>
    </function>
    <function name="window_set_transient_for_display"
              c:identifier="gimp_window_set_transient_for_display"
              version="2.4">
      <doc xml:space="preserve"
           filename="libgimp/gimpui.c"
           line="266">Indicates to the window manager that @window is a transient dialog
associated with the GIMP image window that is identified by it's
display ID. See gdk_window_set_transient_for () for more information.

Most of the time you will want to use the convenience function
gimp_window_set_transient().</doc>
      <source-position filename="libgimp/gimpui.h" line="64"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="window" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpui.c"
               line="268">the #GtkWindow that should become transient</doc>
          <type name="Gtk.Window" c:type="GtkWindow*"/>
        </parameter>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimp/gimpui.c"
               line="269">display of the image window that should become the parent</doc>
          <type name="Gimp.Display" c:type="GimpDisplay*"/>
        </parameter>
      </parameters>
    </function>
    <function name="zoom_button_new" c:identifier="gimp_zoom_button_new">
      <source-position filename="libgimpwidgets/gimpzoommodel.h" line="84"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="libgimpwidgets/gimpzoommodel.c"
             line="543">a newly created GtkButton

Since GIMP 2.4</doc>
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </return-value>
      <parameters>
        <parameter name="model" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpzoommodel.c"
               line="539">a #GimpZoomModel</doc>
          <type name="ZoomModel" c:type="GimpZoomModel*"/>
        </parameter>
        <parameter name="zoom_type" transfer-ownership="none">
          <type name="ZoomType" c:type="GimpZoomType"/>
        </parameter>
        <parameter name="icon_size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="libgimpwidgets/gimpzoommodel.c"
               line="541">use 0 for a button with text labels</doc>
          <type name="Gtk.IconSize" c:type="GtkIconSize"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
