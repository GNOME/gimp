/* LIBGIMP - The GIMP Library
 * Copyright (C) 1995-2003 Peter Mattis and Spencer Kimball
 *
 * gimpchannel_pdb.h
 *
 * This library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see
 * <https://www.gnu.org/licenses/>.
 */

/* NOTE: This file is auto-generated by pdbgen.pl */

#if !defined (__GIMP_H_INSIDE__) && !defined (GIMP_COMPILATION)
#error "Only <libgimp/gimp.h> can be included directly."
#endif

#ifndef __GIMP_CHANNEL_PDB_H__
#define __GIMP_CHANNEL_PDB_H__

G_BEGIN_DECLS

/* For information look into the C source or the html documentation */


gint32   gimp_channel_copy            (gint32          channel_ID);
gboolean gimp_channel_combine_masks   (gint32          channel1_ID,
                                       gint32          channel2_ID,
                                       GimpChannelOps  operation,
                                       gint            offx,
                                       gint            offy);
gboolean gimp_channel_get_show_masked (gint32          channel_ID);
gboolean gimp_channel_set_show_masked (gint32          channel_ID,
                                       gboolean        show_masked);
gdouble  gimp_channel_get_opacity     (gint32          channel_ID);
gboolean gimp_channel_set_opacity     (gint32          channel_ID,
                                       gdouble         opacity);
gboolean gimp_channel_get_color       (gint32          channel_ID,
                                       GimpRGB        *color);
gboolean gimp_channel_set_color       (gint32          channel_ID,
                                       const GimpRGB  *color);

#ifndef GIMP_DEPRECATED_REPLACE_NEW_API

G_GNUC_INTERNAL gint32 _gimp_channel_new               (GimpImage       *image,
                                                        gint             width,
                                                        gint             height,
                                                        const gchar     *name,
                                                        gdouble          opacity,
                                                        const GimpRGB   *color);
gint32                 gimp_channel_new_from_component (GimpImage       *image,
                                                        GimpChannelType  component,
                                                        const gchar     *name);

#else /* GIMP_DEPRECATED_REPLACE_NEW_API */

#define _gimp_channel_new __gimp_channel_new
#define gimp_channel_new_from_component _gimp_channel_new_from_component


#endif /* GIMP_DEPRECATED_REPLACE_NEW_API */

/* Below API are deprecated and should not be used by new plug-ins.
 * They are not marked internal as a trick to keep the old API alive for now.
 */

gint32 __gimp_channel_new               (gint32           image_ID,
                                         gint             width,
                                         gint             height,
                                         const gchar     *name,
                                         gdouble          opacity,
                                         const GimpRGB   *color);
gint32 _gimp_channel_new_from_component (gint32           image_ID,
                                         GimpChannelType  component,
                                         const gchar     *name);


G_END_DECLS

#endif /* __GIMP_CHANNEL_PDB_H__ */
