/* LIBGIMP - The GIMP Library
 * Copyright (C) 1995-2003 Peter Mattis and Spencer Kimball
 *
 * gimpimagegrid_pdb.h
 *
 * This library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see
 * <https://www.gnu.org/licenses/>.
 */

/* NOTE: This file is auto-generated by pdbgen.pl */

#if !defined (__GIMP_H_INSIDE__) && !defined (GIMP_COMPILATION)
#error "Only <libgimp/gimp.h> can be included directly."
#endif

#ifndef __GIMP_IMAGE_GRID_PDB_H__
#define __GIMP_IMAGE_GRID_PDB_H__

G_BEGIN_DECLS

/* For information look into the C source or the html documentation */




#ifndef GIMP_DEPRECATED_REPLACE_NEW_API

gboolean      gimp_image_grid_get_spacing          (GimpImage     *image,
                                                    gdouble       *xspacing,
                                                    gdouble       *yspacing);
gboolean      gimp_image_grid_set_spacing          (GimpImage     *image,
                                                    gdouble        xspacing,
                                                    gdouble        yspacing);
gboolean      gimp_image_grid_get_offset           (GimpImage     *image,
                                                    gdouble       *xoffset,
                                                    gdouble       *yoffset);
gboolean      gimp_image_grid_set_offset           (GimpImage     *image,
                                                    gdouble        xoffset,
                                                    gdouble        yoffset);
gboolean      gimp_image_grid_get_foreground_color (GimpImage     *image,
                                                    GimpRGB       *fgcolor);
gboolean      gimp_image_grid_set_foreground_color (GimpImage     *image,
                                                    const GimpRGB *fgcolor);
gboolean      gimp_image_grid_get_background_color (GimpImage     *image,
                                                    GimpRGB       *bgcolor);
gboolean      gimp_image_grid_set_background_color (GimpImage     *image,
                                                    const GimpRGB *bgcolor);
GimpGridStyle gimp_image_grid_get_style            (GimpImage     *image);
gboolean      gimp_image_grid_set_style            (GimpImage     *image,
                                                    GimpGridStyle  style);

#else /* GIMP_DEPRECATED_REPLACE_NEW_API */

#define gimp_image_grid_get_spacing _gimp_image_grid_get_spacing
#define gimp_image_grid_set_spacing _gimp_image_grid_set_spacing
#define gimp_image_grid_get_offset _gimp_image_grid_get_offset
#define gimp_image_grid_set_offset _gimp_image_grid_set_offset
#define gimp_image_grid_get_foreground_color _gimp_image_grid_get_foreground_color
#define gimp_image_grid_set_foreground_color _gimp_image_grid_set_foreground_color
#define gimp_image_grid_get_background_color _gimp_image_grid_get_background_color
#define gimp_image_grid_set_background_color _gimp_image_grid_set_background_color
#define gimp_image_grid_get_style _gimp_image_grid_get_style
#define gimp_image_grid_set_style _gimp_image_grid_set_style


#endif /* GIMP_DEPRECATED_REPLACE_NEW_API */

/* Below API are deprecated and should not be used by new plug-ins.
 * They are not marked internal as a trick to keep the old API alive for now.
 */

gboolean      _gimp_image_grid_get_spacing          (gint32         image_ID,
                                                     gdouble       *xspacing,
                                                     gdouble       *yspacing);
gboolean      _gimp_image_grid_set_spacing          (gint32         image_ID,
                                                     gdouble        xspacing,
                                                     gdouble        yspacing);
gboolean      _gimp_image_grid_get_offset           (gint32         image_ID,
                                                     gdouble       *xoffset,
                                                     gdouble       *yoffset);
gboolean      _gimp_image_grid_set_offset           (gint32         image_ID,
                                                     gdouble        xoffset,
                                                     gdouble        yoffset);
gboolean      _gimp_image_grid_get_foreground_color (gint32         image_ID,
                                                     GimpRGB       *fgcolor);
gboolean      _gimp_image_grid_set_foreground_color (gint32         image_ID,
                                                     const GimpRGB *fgcolor);
gboolean      _gimp_image_grid_get_background_color (gint32         image_ID,
                                                     GimpRGB       *bgcolor);
gboolean      _gimp_image_grid_set_background_color (gint32         image_ID,
                                                     const GimpRGB *bgcolor);
GimpGridStyle _gimp_image_grid_get_style            (gint32         image_ID);
gboolean      _gimp_image_grid_set_style            (gint32         image_ID,
                                                     GimpGridStyle  style);


G_END_DECLS

#endif /* __GIMP_IMAGE_GRID_PDB_H__ */
