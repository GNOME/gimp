pdbgen_backup = false
pdbgen_groups = false

pdb_names = [
  'brush_select',
  'brush',
  'brushes',
  'buffer',
  'channel',
  'color',
  'context',
  'debug',
  'display',
  'drawable_color',
  'drawable_transform',
  'drawable',
  'dynamics',
  'edit',
  'fileops',
  'floating_sel',
  'font_select',
  'fonts',
  'gimp',
  'gimprc',
  'gradient_select',
  'gradient',
  'gradients',
  'help',
  'image_color_profile',
  'image_convert',
  'image_grid',
  'image_guides',
  'image_sample_points',
  'image_select',
  'image_transform',
  'image_undo',
  'image',
  'item_transform',
  'item',
  'layer',
  'message',
  'paint_tools',
  'palette_select',
  'palette',
  'palettes',
  'paths',
  'pattern_select',
  'pattern',
  'patterns',
  'plug_in_compat',
  'plug_in',
  'procedural_db',
  'progress',
  'selection_tools',
  'selection',
  'text_layer',
  'text_tool',
  'transform_tools',
  'unit',
  'vectors',
]

pdb_sources = []
pdb_outputs = []
foreach name : pdb_names
  pdb_sources += join_paths('pdb', name + '.pdb')
  pdb_sources += join_paths('pdb', name + '.pdb')
endforeach


enum_headers = [
  gimpbaseenums,
  appconfigenums,
  appoperationsenums,
  appcoreenums,
  apppaintenums,
]

# Perl environment
perlsrcdir = meson.current_source_dir()
perlbindir = meson.current_build_dir()

perl_env = [
  'PDBGEN_BACKUP=' + (pdbgen_backup ? '1' : '0'),
  'PDBGEN_GROUPS=' + (pdbgen_groups ? '1' : '0'),
  'rootme='   + perlbindir,
  'srcdir='   + perlsrcdir,
  'destdir='  + meson.build_root(),
  'builddir=' + meson.build_root(),
  perl,
  '-I', perlbindir,
  '-I', perlsrcdir,
]

groups_pl_content    = '# This file is autogenerated\n'
groups_pl_content   += '@groups = qw(\n'
foreach source : pdb_names
  groups_pl_content += '    '+ source +'\n'
endforeach
groups_pl_content   += ');\n'



# All perl files

groups_pl = custom_target('groups.pl',
  input : [ ],
  output: [ 'groups.pl', ],
  command: [ 'echo', groups_pl_content, ],
  capture: true,
)

enumgen_pl = files('enumgen.pl')

enums_pl = custom_target('enums.pl',
  input : [ enumgen_pl, enum_headers, ],
  output: [ 'enums.pl', ],
  command: [
    perl_env, enumgen_pl,
    enum_headers,
  ],
)

pdbgen_pl   = files('pdbgen.pl')
app_pl      = files('app.pl')
lib_pl      = files('lib.pl')
pdb_pl      = files('pdb.pl')
util_pl     = files('util.pl')
stddefs_pdb = files('stddefs.pdb')

pdbgen = custom_target('stamp-pdbgen',
  input : [
    app_pl, enums_pl, groups_pl, lib_pl, pdb_pl, pdbgen_pl, util_pl, stddefs_pdb,
    pdb_sources,
  ],
  output: [ 'stamp-pdbgen', ],
  command: [
    perl_env, pdbgen_pl,
    'app', 'lib',
  ],
)

enumcode_pl = files('enumcode.pl')

stamp_enumcode = custom_target('stamp-enum-code',
  input : [ enumcode_pl, ],
  output: [ 'stamp-enum-code', ],
  command: [
    perl_env, enumcode_pl,
  ],
)
